<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GrapeCity.Wpf.SpreadSheet.CellType</name>
  </assembly>
  <members>
    <member name="T:GrapeCity.Windows.Licenses.SSLLicenseProvider">
      <summary>WPFコンポーネントのライセンスプロバイダーを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Windows.Licenses.SSLLicenseProvider.#ctor">
      <summary><see cref="T:GrapeCity.Windows.Licenses.SSLLicenseProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Windows.Licenses.SSLLicenseProvider.ShowAboutBoxHandler">
      <summary>ShowAboutBoxの外部コールバック。</summary>
    </member>
    <member name="T:GrapeCity.Windows.Licenses.ja.PowerToolsLicenseProvider">
      <summary>PowerToolsコンポーネントのライセンスプロバイダーを表します。このクラスは<see langword="abstract" />であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Windows.Licenses.ja.PowerToolsLicenseProvider.#ctor">
      <summary><see cref="T:GrapeCity.Windows.Licenses.ja.PowerToolsLicenseProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Windows.Licenses.ja.PowerToolsLicenseProvider.CreateInstanceWithDesigntime(System.Type)">
      <summary>指定した型のインスタンスを作成し、設計時ライセンスを検証します。</summary>
      <param name="type">作成する型を表す<see cref="T:System.Type" />。</param>
      <returns>指定した型のインスタンス。</returns>
    </member>
    <member name="M:GrapeCity.Windows.Licenses.ja.PowerToolsLicenseProvider.CreateInstanceWithDesigntime(System.Type,System.Object[])">
      <summary>指定した型のインスタンスを作成し、設計時ライセンスを検証します。</summary>
      <param name="type">作成する型を表す<see cref="T:System.Type" />。</param>
      <param name="args">型に対して引数を表す<see cref="T:System.Object" />型の配列。</param>
      <returns>指定した型のインスタンス。</returns>
    </member>
    <member name="M:GrapeCity.Windows.Licenses.ja.PowerToolsLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
      <summary>コンポーネントのインスタンスに与えられるライセンスがある場合は、そのライセンスを返します。</summary>
      <param name="context">ライセンス付きのオブジェクトを使用できる位置を指定する<see cref="T:System.ComponentModel.LicenseContext" />。</param>
      <param name="type"><see cref="T:GrapeCity.Windows.Licenses.PowerToolsLicense" />を要求しているコンポーネントを表す<see cref="T:System.Type" />。</param>
      <param name="instance"><see cref="T:GrapeCity.Windows.Licenses.PowerToolsLicense" />を要求しているコンポーネント。</param>
      <param name="allowExceptions">
        コンポーネントにライセンスが与えられなかったときに<see cref="T:System.ComponentModel.LicenseException" />をスローする必要がある場合は<c>true</c>、それ以外の場合は<c>false</c>。</param>
      <returns>有効な<see cref="T:GrapeCity.Windows.Licenses.PowerToolsLicense" />。このメソッドが有効な<see cref="T:GrapeCity.Windows.Licenses.PowerToolsLicense" nolink="true" />を見つけられない場合、<c>null</c>を返します。</returns>
    </member>
    <member name="T:GrapeCity.Windows.Licenses.ja.WpfLicenseProvider">
      <summary>WPFコンポーネントのライセンスプロバイダーを表します。このクラスは<see langword="abstract" />であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Windows.Licenses.ja.WpfLicenseProvider.#ctor">
      <summary><see cref="T:GrapeCity.Windows.Licenses.ja.WpfLicenseProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Windows.Spread.Editors.BindingAdapter">
      <summary>ホスト要素のDataContextへのアクセスに使用されるオブジェクトを定義します。このクラスは継承できません。</summary>
      <remarks>
        <para> MS WPFバインディングは、要素ツリーの一部である要素の依存関係プロパティでのみ許可されます。例えば、次のすべてのシナリオでは、バインドは許可されていません。 <list type="bullet"><item><description>依存関係オブジェクトではないため、ValidationRule でプロパティの時。</description></item><item><description>依存関係プロパティではないため、FrameworkElement.Tag プロパティの時。</description></item></list></para>
        <para>
          <see cref="T:GrapeCity.Windows.Spread.Editors.BindingAdapter" /> は、<see cref="!:GrapeCity.Windows.Editors.ValueRule.Value">ValueRule.Value</see> にバインディングをサポートすることができます。ただし、CLRプロパティでバインディングをサポートすることもできます。 <see cref="!:GrapeCity.Windows.Editors.ValueRangeRule.MinimumValue">ValueRangeRule.MinimumValue</see> や<see cref="!:GrapeCity.Windows.Editors.ValueRangeRule.MaximumValue">ValueRangeRule.MaximumValue</see> などもこの方法を使用してバインディングをサポートできます。 </para>
      </remarks>
      <example> 次のコードは、<see cref="!:ValueRule" />、<see cref="T:GrapeCity.Windows.Spread.Editors.BindingAdapter" />、および　<see cref="!:DateTimeDifferenceValueConverter" />　の使用例を説明します。これらのモジュールの組み合わせにより、2つの　<see cref="!:GcDate" />　コントロールの値を比較できます。 <code lang="XAML" source="XmlCommentsSampleCode_XAML\GcValidationManager.xaml" region="Validation_001" /></example>
    </member>
    <member name="M:GrapeCity.Windows.Spread.Editors.BindingAdapter.#ctor">
      <summary><see cref="T:GrapeCity.Windows.Spread.Editors.BindingAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Windows.Spread.Editors.BindingAdapter.ValueProperty">
      <summary><see cref="P:GrapeCity.Windows.Spread.Editors.BindingAdapter.Value" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Windows.Spread.Editors.BindingAdapter.Value">
      <summary>バインディングターゲットの値を取得または設定します。 これは依存関係プロパティです。</summary>
      <value>バインディングターゲットの値。<br />このプロパティにはデフォルト値はありません。</value>
      <remarks>このプロパティは、期待値を取得するターゲットプロパティにバインドするために使用されます。また、バインディングの時に、ユーザーは <see cref="T:System.Windows.Data.IValueConverter" /> を使用して取得した値を変換および更新できます。たとえば、<see cref="!:DecimalDifferenceValueConverter" /> と <see cref="!:DateTimeDifferenceValueConverter" /> を使用して異なる値の関数をサポートします。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.BuiltinCellTypeBase">
      <summary>他のセル型クラスの基本となるセル型クラスを表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.BuiltinCellTypeBase.DisplayElementStyle">
      <summary>描画時に表示要素によって使用されるスタイルを取得または設定します。</summary>
      <value>描画時に表示要素によって使用されるスタイルを取得または設定します。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.BuiltinCellTypeBase.EditElementStyle">
      <summary>セルが編集状態に入るときに編集要素によって使用されるスタイルを取得または設定します。</summary>
      <value>セルが編集状態に入るときに編集要素によって使用されるスタイルを取得または設定します。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.BuiltinCellTypeBase.GenerateDisplayElement">
      <summary>このセル型の表示要素を作成します。</summary>
      <returns>このセル型の表示要素。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.BuiltinCellTypeBase.GenerateEditElement">
      <summary>このセル型の編集要素を作成します。</summary>
      <returns>このセル型の編集要素。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.BuiltinCellTypeBase.IsEditKey(System.String)">
      <summary>指定したキーが、編集コントロールが処理する通常の入力キーであるかどうかを判別します。</summary>
      <param name="keyStrokeText">押されたキーを表す文字列。</param>
      <returns>
        指定したキーが、編集コントロールが処理する通常の入力キーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <remarks>このメソッドが特別な <paramref name="keyStrokeText" /> に対して <see langword="true" /> を返す場合は、キーボードメッセージが編集コントロールによって処理されます。それ以外の場合は、このキーボードメッセージが <see cref="!:GcSpreadGrid" /> によって処理されます。<see cref="!:GcSpreadGrid" nolink="true" /> は、入力バインディングに基づいて処理するかどうかを決定します。キーが入力バインディングによって処理されない場合、編集コントロールはキーメッセージを受信できます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.BuiltinCellTypeBase.SetDisplayValue(System.Windows.FrameworkElement,System.Object,System.String,System.Windows.Media.Brush)">
      <summary>表示要素に値とテキストを設定します。</summary>
      <param name="displayElement">画面に表示する要素。</param>
      <param name="value">設定する値。</param>
      <param name="text">設定するテキスト。</param>
      <param name="specialForeground">使用される前景。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.BuiltinCellTypeBase.SetEditValue(System.Windows.FrameworkElement,System.Object)">
      <summary>値を編集要素に設定します。</summary>
      <param name="editElement">編集するために使用される要素。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.BuiltinCellTypeBase.TextToValue(System.String,System.Boolean@)">
      <summary>テキストをセル値に解析します。</summary>
      <param name="text">テキスト。</param>
      <param name="textIsValid">テキストが有効かどうかを示します。</param>
      <returns>セル値。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.BuiltinCellTypeBase.ValueToText(System.Object,System.Windows.Media.Brush@)">
      <summary>セル値を表示テキストへの書式します。</summary>
      <param name="value">セル値。</param>
      <param name="foreground">表示に使用される前景。</param>
      <returns>セル値で書式された表示テキスト。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.GcSpreadSheet" />コントロールで使用できるボタン状のユーザーインタフェース（UI）を表示するセル型を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType.Command">
      <summary>このボタンが押されたときに呼び出すコマンドを取得または設定します。</summary>
      <value>このボタンが押されたときに呼び出すコマンド。デフォルトの値は<see langword="null" />です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType.Content">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType" />の内容を取得または設定します。</summary>
      <value>セル型の内容を含むオブジェクト。既定値は <see langword="null" />です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType.ContentTemplate">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType" />の内容を表示する際に使われるデータテンプレートを取得または設定します。</summary>
      <value>データテンプレート。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType.CustomCommandParameter">
      <summary><see cref="!:GrapeCity.Windows.SpreadGrid.ButtonCellType.Command" /> プロパティに渡すパラメーターを取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.SpreadGrid.ButtonCellType.Command" />プロパティに渡すパラメーター。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType.GenerateDisplayElement">
      <summary>このセル型の表示要素を作成します。</summary>
      <returns>このセル型の表示要素。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.ButtonCellType.TextToValue(System.String,System.Boolean@)">
      <summary>テキストをセル値に解析します。</summary>
      <param name="text">テキスト。</param>
      <param name="textIsValid">テキストが有効かどうかを示します。</param>
      <returns>セル値。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.CellCommandParameter">
      <summary>セルのコマンドにセル情報パラメーターを提供します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.CellCommandParameter.Column">
      <summary>クリックされるボタンの列を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.GcSpreadSheet" /> コントロールでクリックされるボタンの列。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.CellCommandParameter.CustomCommandParameter">
      <summary>コマンドに渡すパラメーターを取得または設定します。</summary>
      <value>コマンドに渡すパラメーター。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.CellCommandParameter.Row">
      <summary>クリックされるボタンの行を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.GcSpreadSheet" /> コントロールでクリックされるボタンの行。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.CellCommandParameter.Worksheet">
      <summary>クリックされるボタンのワークシートを取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.GcSpreadSheet" /> コントロールでクリックされるボタンのワークシート。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AllowDropDownOpen">
      <summary>ドロップダウンウィンドウを開けるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがドロップダウンウィンドウを開くことを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
      <remarks>ユーザーは <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AllowDropDownOpen" /> プロパティを使用して、ドロップダウンウィンドウを表示するかどうかを制御できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AlternatingItemBackground">
      <summary><b>AlternationIndex</b> が1であるドロップダウン項目の背景の描画に使用される<see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <value><b>AlternationIndex</b> が1であるドロップダウン項目の背景の描画に使用されるブラシ。</value>
      <remarks>セルのドロップダウン項目はすべて、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ItemBackground" /> プロパティを使用して背景が描画されます。ただし、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AlternatingItemBackground" /> プロパティの値が <see langword="null" /> でない場合は、その値によって、<b>AlternationIndex</b> が１であるドロップダウン項目の既定の背景値がオーバーライドされます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AlternationCount">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType" />の交互項目コンテナーの数を取得または設定します。これにより、交互項目コンテナーに固有の外観を与えることができます。これは依存関係プロパティです。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AlternationCount" /> は、交互項目をサポートするためにドロップダウンコントロールに設定されます。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AutoGenerateColumns">
      <summary>カラムを自動生成するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        カラムを自動生成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
      <remarks>自動生成された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" /> が現在の ListColumns に追加されます。AutoGenerateColumns の値を <see langword="true" /> から <see langword="false" /> に変更すると、自動生成された ListColumns が削除されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AutoSelect">
      <summary>入力した文字に一致するアイテムを自動的に選択するかどうかを示す値を取得または設定します。</summary>
      <value>
        AutoSelectが有効な場合は<see langword="true" />。それ以外の場合は<see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.CanUserResizeColumns">
      <summary>ユーザーがマウスを使用してカラムの幅を調整できるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがカラムのサイズを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <remarks>個々の列に対してこの動作を設定するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserResize" /> プロパティを設定します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserResize" nolink="true" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.CanUserResizeColumns" /> プロパティが両方とも設定されている場合は、false の値が true の値より優先されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.CanUserSortColumns">
      <summary>ユーザーがカラムヘッダをクリックしてカラムを並べ替えられるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがカラムを並べ替えられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>個々の列に対してこの動作を設定するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserSort" /> プロパティを設定します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserSort" nolink="true" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.CanUserSortColumns" /> プロパティが両方とも設定されている場合は、false の値が true の値より優先されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.Columns">
      <summary>セルのすべての列を含むコレクションを取得します。</summary>
      <value>セルの列。</value>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.Columns" /> は、列の追加や削除、または列のプロパティの更新に使用します。</para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.Columns" nolink="true" /> コレクションに含まれる各列は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType" /> の１つの列を定義します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.Columns" nolink="true" /> コレクションの列は <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.ListColumn" /> から派生している必要があります。</para>
        <para> 次の表は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> に用意されている３つの定義済み列型を示します。 <table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>列型</th><th>データ型</th></tr><tr><td><see cref="!:GrapeCity.Windows.SpreadGrid.Editors.ListTextColumn" /></td><td>テキストの表示に使用されます。</td></tr><tr><td><see cref="!:GrapeCity.Windows.SpreadGrid.Editors.ListCheckBoxColumn" /></td><td>ブール型データの表示に使用されます。</td></tr><tr><td><see cref="!:GrapeCity.Windows.SpreadGrid.Editors.ListImageColumn" /></td><td>画像の表示に使用されます。</td></tr></table></para>
        <para>さらに、<see cref="!:GrapeCity.Windows.SpreadGrid.Editors.ListTemplateColumn" /> を使用して独自のカスタム列を定義することもできます。<see cref="!:GrapeCity.Windows.SpreadGrid.Editors.ListItem" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.Items" /> または <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ItemsSource" /> 設定した場合は、<see cref="!:GrapeCity.Windows.SpreadGrid.Editors.ListSubItemColumn" /> 内の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> を表示するために <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.ListItem.SubItems" /> が使用されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.Columns" nolink="true" /> コレクションは、生成された列が含まれているかどうかに関わらず、実行時に変更できます。ただし、XAML で列を指定する場合は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AutoGenerateColumns" /> を true に設定しないでください。</para>
        <para> 複数の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.Columns" nolink="true" /> の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType" nolink="true" /> コレクションに、同じ列を追加することはできません。そうすると、<see cref="T:System.InvalidOperationException" /> が発生します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ContentPath">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType" />に表示されるプロパティの名前を示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ContentPath" /> では、ドット付きのパスを使用してプロパティのサブプロパティを参照できます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ContentPath" nolink="true" /> プロパティは、項目を表示するためにドロップダウンコントロールに設定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.DropDownButtonStyle">
      <summary>ドロップダウンボタンの描画に使用されるスタイルを取得または設定します。</summary>
      <value>ドロップダウンボタンのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
      <example> 次のサンプルは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType" /> のドロップダウン ボタンのカスタマイズ方法を説明します。このサンプルでは、ComboBoxCellTypeのドロップダウン ボタンの幅を 40 に変更します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\ComboBoxCellType.xaml" region="ComboBoxCellType_DropDownButtonStyle" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.DropDownButtonVisibility">
      <summary>ドロップダウンボタンの表示方法を決定する値を取得または設定します。</summary>
      <value>ドロップダウンボタンの表示方法を決定する <see cref="!:SpreadGrid.CellButtonVisibility" /> 列挙体。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.DropDownControlStyle">
      <summary>ドロップダウンコントロールの描画に使用されるスタイルを取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウンコントロールのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
      <remarks>このプロパティによって、ドロップダウンコントロールの表示設定、レイアウト、動作などを設定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.DropDownWidth">
      <summary>ドロップダウンウィンドウの幅を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウンウィンドウの幅（ピクセル単位）。既定値は <see cref="F:System.Double.NaN" /> で、ドロップダウンウィンドウの幅がコントロールの幅と同じになることを意味します。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.DropDownWindowStyle">
      <summary><see cref="!:GrapeCity.Windows.SpreadGrid.Editors.DropDownWindow" />の<see cref="T:System.Windows.Style" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="!:GrapeCity.Windows.SpreadGrid.Editors.DropDownWindow" />に適用される <see cref="T:System.Windows.Style" />。</value>
      <remarks><see cref="T:System.Windows.Style" /> に適用される <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.DropDownWindow" />。この <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.DropDownWindow" nolink="true" /> によって、<see cref="T:System.Windows.Style" nolink="true" /> のサイズ、ドロップダウンアニメーション、ドロップダウン方向などのプロパティを設定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.FocusDropDownControlOnOpen">
      <summary>ドロップダウンウィンドウが開いたときにドロップダウンリストボックスにフォーカスを設定するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ドロップダウンリストボックスにフォーカスを設定する場合は<see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.IsEditable" /> プロパティが <see langword="true" /> の場合にのみ有効です。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.IsEditable" nolink="true" /> が <see langword="false" /> の場合、ドロップダウンリストボックスは常にフォーカスを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.HorizontalGridLineBrush">
      <summary>水平グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value>グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.HorizontalGridLineStyle">
      <summary>各水平グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LineStyle" />列挙値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>各グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LineStyle" />列挙値。</value>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LineStyle" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ImeConversionMode">
      <summary>指定したセルの <see cref="T:System.Windows.Input.ImeConversionModeValues" />値を取得または設定します。</summary>
      <value>指定したセルの変換モードを指定する <see cref="T:System.Windows.Input.ImeConversionModeValues" /> のメンバ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ImeSentenceMode">
      <summary>指定したセルの <see cref="T:System.Windows.Input.ImeSentenceModeValues" />値を取得または設定します。</summary>
      <value>指定したセルのセンテンスモードを指定する <see cref="T:System.Windows.Input.ImeSentenceModeValues" /> のメンバ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ImeState">
      <summary>指定したセルの入力メソッドの状態を取得または設定します。</summary>
      <value>指定したセルの入力メソッドの状態を指定する <see cref="T:System.Windows.Input.InputMethodState" /> のメンバ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.InputScope">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType" />のInputScopeを取得または設定します。</summary>
      <value>代替入力方法で切り替える方法に解釈されるか変更する入力値の種類。 （コマンドの既定の処理が発生する）既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.IsAutoSelectCaseSensitive">
      <summary>オートセレクト時にアイテムを選択するとき、大文字と小文字を区別するかどうかを示す値を取得または設定します。</summary>
      <value>
        大文字と小文字を区別する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.IsEditable">
      <summary>ユーザーがコンボボックス型セルの値を編集を入力できるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <remarks>ユーザーが <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.IsEditable" /> プロパティを変更すると、XAML が再解析されてドロップダウンコントロールが別のインスタンスに変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.IsInputMethodEnabled">
      <summary>この入力メソッドが有効かどうかを示す値を取得または設定します。</summary>
      <value>
        この入力メソッドが有効な場合は<see langword="true" />。それ以外の場合は<see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.IsReadOnly">
      <summary>このコントロールが読み取り専用かどうかを示す値を取得または設定します。</summary>
      <value>
        コントロールが読み取り専用の場合は <see langword="true" /> 。それ以外の場合は <see langword="false" />。<br />　既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.IsSelectable">
      <summary>項目を選択できるかどうかを示す値を取得または設定します。</summary>
      <value>
        項目を選択できる場合は<see langword="true" /> 。それ以外の場合は<see langword="false" />. <br /> 既定値は <see langword="true" />です。</value>
      <remarks>このプロパティを <see langword="true" /> に設定すると、実行時にユーザーがコントロールの項目を選択できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ItemBackground">
      <summary><b>AlternationIndex</b> が0であるドロップダウン項目の背景の描画に使用される<see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <value><b>AlternationIndex</b> が0であるドロップダウン項目の背景の描画に使用されるブラシ。</value>
      <remarks>コントロールのドロップダウン項目はすべて、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ItemBackground" /> プロパティを使用して背景が描画されます。ただし、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AlternatingItemBackground" /> プロパティの値が <see langword="null" /> でない場合は、その値によって、<b>AlternationIndex</b> が0であるドロップダウン項目の既定の背景値がオーバーライドされます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ItemTemplate">
      <summary>各項目の表示に使用される<see cref="T:System.Windows.DataTemplate" /> を取得または設定します。</summary>
      <value>データオブジェクトの視覚化を指定するテンプレート。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.Items">
      <summary>コンボボックス型セルの内容の生成に使用されるコレクションを取得します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType" /> に項目を追加するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.Items" /> プロパティに項目を追加するか、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ItemsSource" /> プロパティをデータコレクションに連結します。Items には異なる型のオブジェクトを追加できます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ItemsSource" nolink="true" /> が <see langword="null" /> でない場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.Items" nolink="true" /> プロパティ内の項目は読み取り専用になります。Items プロパティにオブジェクトを追加したり、Items プロパティ内のオブジェクトを変更したりすることはできません。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ItemsSource">
      <summary>セルの内容の生成に使用されるコレクションを取得または設定します。これは依存関係プロパティです。</summary>
      <value>セルの内容の生成に使用されるコレクション。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.MaxDropDownHeight">
      <summary>ドロップダウンウィンドウの最大の高さを取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウンウィンドウの最大の高さ（ピクセル単位）。既定値は <see cref="F:System.Double.NaN">Double.NaN</see> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.MaxDropDownItems">
      <summary>ドロップダウン項目の最大数を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウン項目の最大数。 既定値は 8 です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.SelectedValuePath">
      <summary>選択された項目の選択された値を取得するために使用されるプロパティパスを取得または設定します。これは依存関係プロパティです。</summary>
      <value>選択された項目の選択された値を取得するために使用されるプロパティパス。既定値は <see cref="F:System.String.Empty" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.StaysOpenOnEdit">
      <summary>コンボボックス型セルにドロップダウンコントロールが表示されている状態でユーザーがテキストボックスをクリックしたときにドロップダウンコントロールを開いたままにするかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ドロップダウンコントロールを開いたままにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.UseMultipleColumn">
      <summary>グリッドを使用してデータを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        グリッドを使用してデータを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ValueType">
      <summary>セルの値の格納方法を決定する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxValueType" />列挙体を取得または設定します。</summary>
      <value>セルの値の格納方法を決定する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxValueType" />列挙体。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.VerticalGridLineBrush">
      <summary>垂直グリッド線の描画に使用される<see cref="T:System.Windows.Media.Brush" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.VerticalGridLineStyle">
      <summary>各垂直グリッド線のスタイルを示す<see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LineStyle" /> 列挙値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>各グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LineStyle" />列挙値。</value>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LineStyle" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.SetEditValue(System.Windows.FrameworkElement,System.Object)">
      <summary>値を編集要素に設定します。</summary>
      <param name="editElement">編集するために使用される要素。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.TextToValue(System.String,System.Boolean@)">
      <summary>テキストをセル値に解析します。</summary>
      <param name="text">テキスト。</param>
      <param name="textIsValid">テキストが有効かどうかを示します。</param>
      <returns>セル値。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ValueToText(System.Object,System.Windows.Media.Brush@)">
      <summary>セル値を表示テキストへの書式します。</summary>
      <param name="value">セル値。</param>
      <param name="foreground">表示に使用される前景。</param>
      <returns>セル値で書式された表示テキスト。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType">
      <summary>ユーザーが日時を選択したり、指定した書式で日時を表示したりできるセル型を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.AllowDropDownOpen">
      <summary>ドロップダウンウィンドウを開けるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがドロップダウンウィンドウを開くことを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
      <remarks>ユーザーは <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.AllowDropDownOpen" /> プロパティを使用して、ドロップダウンウィンドウを表示するかどうかを制御できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.AutoOpenDropDown">
      <summary>コンボボックス型セルが編集状態に入るときにドロップダウンウィンドウが自動的に表示されるかどうかを示す<see cref="T:System.Boolean" /> 値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウン可能なセルがフォーカスを受け取ったときにドロップダウンウィンドウが自動的に表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks><b>AutoOpenDropDown</b> が <see langword="true" /> で、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.AllowDropDownOpen" /> も <see langword="true" /> であるときは、ドロップダウンウィンドウが自動的に表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.BlackoutDates">
      <summary>ドロップダウンカレンダーで選択不可としてマークされている日付のコレクションを取得します。</summary>
      <value>選択できない日付のコレクション。既定値は空のコレクションです。</value>
      <remarks>
        <para> このコレクションに含まれる日付には、ドロップダウンカレンダー上で灰色の×印が付きます。 </para>
        <para> 過去の日付すべてを選択できないようにするには、このプロパティによって返されるコレクションによって提供される <see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection.AddDatesInPast" /> メソッドを使用します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.DefaultActiveFieldIndex">
      <summary>既定のアクティブな編集可能フィールドのインデックスを取得または設定します。これは依存関係プロパティです。</summary>
      <value>既定のアクティブフィールドを示す <see cref="T:System.Int32" /> 値。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.DefaultActiveFieldIndex" /> は、編集可能フィールドのインデックスを表します。コントロールがフォーカスを取得すると、既定のアクティブフィールドがアクティブになります。-１より大きい値を指定する必要があります。編集可能な最後のフィールドのインデックスより大きい値を設定すると、コントロールがキーボードフォーカスを取得したときに編集可能な最後のフィールドがアクティブになります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.DisplayFieldSet">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" />の<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSet" />を取得または設定します。</summary>
      <value>表示フィールドセットのコレクションを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSet" /> オブジェクト。</value>
      <remarks>新しい表示フィールドセットを設定することで、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> にキーボードフォーカスがないときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" nolink="true" /> の現在の値を異なるパターンで表示できます。また、このプロパティを通じて表示フィールドのコレクションにアクセスすることもできます。</remarks>
      <example> 次のサンプルは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> に表示用フィールドと編集用フィールドを設定する方法を説明します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\DateTimeCellType.xaml" region="DateTimeCellType_FieldSet" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.DropDownButtonStyle">
      <summary>ドロップダウンボタンの描画に使用されるスタイルを取得または設定します。</summary>
      <value>ドロップダウンボタンのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
      <example> 次のサンプルは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> のドロップダウン ボタンのカスタマイズ方法を説明します。このサンプルでは、日付型セルのドロップダウン ボタンの幅を 40 に変更します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\DateTimeCellType.xaml" region="DateTimeCellType_DropDownButtonStyle" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.DropDownButtonVisibility">
      <summary>ドロップダウンボタンの表示方法を決定する値を取得または設定します。</summary>
      <value>ドロップダウンボタンの表示方法を決定する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellButtonVisibility" /> 列挙体。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.DropDownCalendarStyle">
      <summary>ドロップダウンカレンダーの描画に使用される <see cref="T:System.Windows.Style" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウンカレンダーに適用される <see cref="T:System.Windows.Style" />。</value>
      <example> 次のサンプルは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> をカスタマイズする方法を説明します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\DateTimeCellType.xaml" region="DateTimeCellType_DropDownCalendarStyle" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.DropDownWindowStyle">
      <summary><see cref="T:System.Windows.Style" />の<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" />に適用される <see cref="T:System.Windows.Style" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.ExitOnLastChar">
      <summary>セルに最後の文字が入力されると同時にタブオーダーの次のセルがフォーカスを受け取るかどうかを取得または設定します。</summary>
      <value>
        入力コントロールによって定義された最後の文字がセルに入力されると同時にタブオーダーの次のセルにフォーカスが移動する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティを使用すると、ユーザーが入力を終えると同時にコントロールから離れるようにすることができます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.FieldSet">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" />のフィールドコレクションを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet" /> を取得または設定します。</summary>
      <value>FieldSet プロパティの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet" /> 値。</value>
      <remarks>ユーザーはこのプロパティによって <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> のフィールドを独自に定義できます。このプロパティを設定するにはいくつかの方法があります。たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet" /> インスタンスを作成したり、XAML コードで Style によって設定したりすることが可能です。</remarks>
      <example> 次のサンプルは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> に表示用フィールドと編集用フィールドを設定する方法を説明します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\DateTimeCellType.xaml" region="DateTimeCellType_FieldSet" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.FieldsEditMode">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" />のフィールド編集モードを取得または設定します。</summary>
      <value>フィールド編集モードを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditMode" /> 列挙値。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditMode.LeftSide" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> セルのフィールドの編集方法を示します。値が <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditMode.LeftSide" /> の場合、ユーザーは左から右へ文字を入力します。値が <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditMode.RightSide" /> の場合は、右から左へ文字を入力します。値が <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditMode.Unfixed" /> の場合は、右から左へ文字を入力し、フィールドへの入力が完了していなくても値が設定されます。たとえば、現在のモードが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditMode.Unfixed" nolink="true" /> の場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField" /> に "１" を入力すると、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField" nolink="true" /> の値が１に変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.FirstDayOfWeek">
      <summary>ドロップダウンカレンダーでの週の開始曜日を取得または設定します。これは依存関係プロパティです。</summary>
      <value>週の開始曜日を表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek" /> 値。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek.NotSet" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.FirstDayOfWeek" /> が <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek.NotSet" /> の場合、ドロップダウンカレンダーの日付は現在のカルチャの <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> に従って表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.HighlightText">
      <summary>編集要素がフォーカスを受け取ったときのテキストの選択方法を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HighlightText" /> 列挙値の１つ。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HighlightText.None" /> です。</value>
      <remarks>ユーザーはこのプロパティに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HighlightText" /> 列挙値を設定することで、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" nolink="true" /> がキーボードフォーカスを取得したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> のどの部分が選択されるかを指定できます。ある特定のフィールドまたはコントロールのテキスト全体を選択するか、何も選択しないかを指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.ImeConversionMode">
      <summary>指定したセルの <see cref="T:System.Windows.Input.ImeConversionModeValues" />値を取得または設定します。</summary>
      <value>指定したセルの変換モードを指定する <see cref="T:System.Windows.Input.ImeConversionModeValues" /> のメンバ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.ImeSentenceMode">
      <summary>指定したセルの <see cref="T:System.Windows.Input.ImeSentenceModeValues" />値を取得または設定します。</summary>
      <value>指定したセルのセンテンスモードを指定する <see cref="T:System.Windows.Input.ImeSentenceModeValues" /> のメンバ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.ImeState">
      <summary>指定したセルの入力メソッドの状態を取得または設定します。</summary>
      <value>指定したセルの入力メソッドの状態を指定する <see cref="T:System.Windows.Input.InputMethodState" /> のメンバ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.InputScope">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" />のInputScopeを取得または設定します。</summary>
      <value>代替入力方法で切り替える方法に解釈されるか変更する入力値の種類。 （コマンドの既定の処理が発生する）既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.IsInputMethodEnabled">
      <summary>この入力メソッドが有効かどうかを示す値を取得または設定します。</summary>
      <value>
        この入力メソッドが有効な場合は<see langword="true" />。それ以外の場合は<see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.IsTodayHighlighted">
      <summary>現在の日付が強調表示されるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        現在の日付が強調表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.MaxDate">
      <summary>範囲要素の設定可能な最大値を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> の最大日付を示す <see cref="T:System.DateTime" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.MinDate">
      <summary>範囲要素の設定可能な最小値を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> の最小日付を示す <see cref="T:System.DateTime" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.PromptChar">
      <summary>入力用のプロンプトとして使用される文字を取得または設定します。</summary>
      <value>入力用のプロンプトとして使用される文字。既定値はアンダースコア（"_"）です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が有効でないか、<see cref="F:System.Char.MinValue" /> です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>エディタの入力候補値を示す <see cref="T:System.DateTime" /> 値。既定値は <see cref="P:System.DateTime.Now" /> です。</value>
      <remarks>
        <para> 入力候補値は、入力候補となる日時をユーザーにヒントとして提示するために使用されます。 </para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。 </para>
        <para> 入力候補値の優先度は表示フィールドおよび透かしよりも下です。透かしまたは表示フィールドが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.ShowLiterals">
      <summary>リテラルの表示方法を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ShowLiterals" /> 列挙値の１つ。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ShowLiterals.Always" /> です。</value>
      <remarks>ユーザーが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> セルを編集するとき、このプロパティの値に従って、対応するフィールドが表示される前または表示された後にリテラルが表示されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が有効な <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ShowLiterals" /> ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.ShowRecommendedValue">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.RecommendedValue" /> を表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>
        <para> このプロパティを <see langword="true" />に設定した場合は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.RecommendedValue" />に基づいて、 <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> のフィールドに明るいテキストが表示されます。フィールドセットに和暦年フィールドが含まれる場合は、対応する年号も表示されます。 </para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。 </para>
        <para> 入力候補値の優先度は表示フィールドおよび透かしよりも下です。透かしまたは表示フィールドが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.SpinButtonStyle">
      <summary>スピンボタンの描画に使用される <see cref="T:System.Windows.Style" /> を取得または設定します。</summary>
      <value>スピンボタンのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.SpinButtonVisibility">
      <summary>スピンボタンの表示方法を決定する値を取得または設定します。</summary>
      <value>スピンボタンの表示方法を決定する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellButtonVisibility" /> 列挙体。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.SpinIncrementValue">
      <summary>スピン増分値を取得または設定します。</summary>
      <value>スピン増分値を示す <see cref="T:System.TimeSpan" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.SpinMode">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> のスピン方法を示すモードを取得または設定します。</summary>
      <value>スピンモードを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSpinMode" /> 値。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSpinMode.Field" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.TabAction">
      <summary>［Tab］キーを押したときにセル間でフォーカスを移動するか、セル内のフィールド間でフォーカスを移動するかを決定する値を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TabAction" /> 列挙値の１つ。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TabAction.Control" /> です。</value>
      <remarks>このプロパティは、ユーザーが［Tab］キーを押したときのキャレットのジャンプアクションを決定します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が有効な <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TabAction" /> ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.WatermarkDisplayEmptyEra">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" />セルにフォーカスがない場合に、その値が和暦表示できないときに表示される空の和暦の透かしを取得または設定します。</summary>
      <value>空の和暦用の透かしを示す <see cref="T:System.String" /> 値。</value>
      <remarks>このプロパティは <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.DisplayFieldSet" /> プロパティと連携して機能します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraDisplayField" /> 表示フィールドがない場合、この透かしは表示されません。また、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> セルの値が <see langword="null" /> の場合にも、この透かしは表示されません。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.WatermarkDisplayEmptyEraForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.WatermarkDisplayEmptyEra" />を描画する描画ブラシを示す前景を取得または設定します。</summary>
      <value>空の和暦用の前景を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.WatermarkEmptyEra">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" />セルにフォーカスがない場合に、その値が和暦表示できないときに表示される透かしを取得または設定します。</summary>
      <value>空の和暦用の透かしを示す <see cref="T:System.String" /> 値。</value>
      <remarks>EmptyEra 透かしは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" /> セルの値が <see langword="null" /> 以外で、その値が和暦表示できず、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.FieldSet" /> に <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField" /> が含まれている場合に表示されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.WatermarkEmptyEraForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.WatermarkEmptyEra" />を描画する描画ブラシを示す前景を取得または設定します。</summary>
      <value>空の和暦用の透かしの前景を示す <b>Brush</b> 値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.GenerateEditElement">
      <summary>このセル型の編集要素を作成します。</summary>
      <returns>このセル型の編集要素。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType.SetEditValue(System.Windows.FrameworkElement,System.Object)">
      <summary>値を編集要素に設定します。</summary>
      <param name="editElement">編集するために使用される要素。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType">
      <summary>テキストエディタセル型の基本クラスを表します。このクラスは <see langword="abstract" /> で初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType.EditMode">
      <summary>セルの編集モードを取得または設定します。</summary>
      <value>このセルの編集モードを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditMode" /> 列挙値。<br />既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditMode.Insert" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType.IsReadOnly">
      <summary>このセルが読み取り専用かどうかを示す値を取得または設定します。</summary>
      <value>
        セルが読み取り専用の場合は <see langword="true" /> 。それ以外の場合は <see langword="false" />。<br />　既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティを <see langword="true" /> に設定すると、実行時にユーザーがセルの内容を変更できなくなります。<c>IsEnabled</c> プロパティによってコントロールを無効にする代わりにこの機能を使用することで、内容をコピーしたりツールチップを表示したりすることが可能となります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType.SelectionBrush">
      <summary>選択されているテキストを強調表示するブラシを取得または設定します。 これは依存関係プロパティです。</summary>
      <value>選択されているテキストを強調表示する <see cref="T:System.Windows.Media.Brush" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType.SelectionOpacity">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType.SelectionBrush" /> の不透明度係数を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType.SelectionBrush" /> の不透明度。既定値は 0.4 です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType.TextTrimming">
      <summary>セルの内容が内容領域に収まらないときに使用するテキストトリミング動作を取得または設定します。</summary>
      <value>使用するテキストトリミング動作を指定する <see cref="T:System.Windows.TextTrimming" /> 値の１つ。既定値は <see cref="F:System.Windows.TextTrimming.None" /> です。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType.GenerateDisplayElement">
      <summary>このセル型の表示要素を作成します。</summary>
      <returns>このセル型の表示要素。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.EditBaseCellType.IsEditKey(System.String)">
      <summary>指定したキーが、編集コントロールが処理する通常の入力キーであるかどうかを判別します。</summary>
      <param name="keyStrokeText">押されたキーを表す文字列。</param>
      <returns>
        指定したキーが、編集コントロールが処理する通常の入力キーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <remarks>このメソッドが特別な <paramref name="keyStrokeText" /> に対して <see langword="true" /> を返す場合は、キーボードメッセージが編集コントロールによって処理されます。それ以外の場合は、このキーボードメッセージが <see cref="!:GcSpreadGrid" /> によって処理されます。<see cref="!:GcSpreadGrid" nolink="true" /> は、入力バインディングに基づいて処理するかどうかを決定します。キーが入力バインディングによって処理されない場合、編集コントロールはキーメッセージを受信できます。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType">
      <summary>書式設定されたテキスト型セルの基本クラスを表します。このクラスは <see langword="abstract" />で初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.AllowSpin">
      <summary>スピン動作が有効かどうかを示す値を取得または設定します。</summary>
      <value><see cref="T:System.Boolean" /> 値。スピン動作を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.SpinAllowWrap">
      <summary>スピン操作時に上限または下限に達したときに折り返すかどうかを取得または設定します。</summary>
      <value><see cref="T:System.Boolean" /> 値。スピン操作を折り返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.SpinIncrement">
      <summary>1 回のスピン動作の増分オフセットを取得または設定します。</summary>
      <value>スピン動作の増分オフセットを示す <see cref="T:System.Int32" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.WatermarkDisplayNull">
      <summary>値が <see langword="null" />で、なおかつこのセルが編集状態でないときの、透かし表示テキストを取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.WatermarkDisplayNull" /> を示す <see cref="T:System.String" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値に無効なパターンまたは無効な文字が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.WatermarkDisplayNullForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.WatermarkDisplayNull" />が表示されるときの透かし表示テキストの前景を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.WatermarkDisplayNullForeground" /> を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.WatermarkNull">
      <summary>値が<see langword="null" />のときの透かしテキストを取得または設定します。</summary>
      <value><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.WatermarkNull" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値に無効なパターンまたは無効な文字が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.WatermarkNullForeground">
      <summary>値が<see langword="null" />のときの透かしテキストの前景を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.FieldsEditorBaseCellType.WatermarkNullForeground" /> を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType">
      <summary>指定した書式で表示する数値を選択できるようにするセル型を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.AllowDeleteToNull">
      <summary>UI での削除操作によってすべてのテキストが削除されたときに値を<see langword="null" /> と 0 のどちらにするかを示す値を取得または設定します。</summary>
      <value>UI での削除操作によってすべてのテキストが削除されたときに値を <see langword="null" /> にするかどうかを示す <see cref="T:System.Boolean" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.AllowDropDownOpen">
      <summary>ドロップダウンウィンドウを開けるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがドロップダウンウィンドウを開くことを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
      <remarks>ユーザーは <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.AllowDropDownOpen" /> プロパティを使用して、ドロップダウンウィンドウを表示するかどうかを制御できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.AutoOpenDropDown">
      <summary>コンボボックス型セルが編集状態に入るときにドロップダウンウィンドウが自動的に表示されるかどうかを示す<see cref="T:System.Boolean" /> 値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウン可能なセルがフォーカスを受け取ったときにドロップダウンウィンドウが自動的に表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks><b>AutoOpenDropDown</b> が <see langword="true" /> で、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.AllowDropDownOpen" /> も <see langword="true" /> であるときは、ドロップダウンウィンドウが自動的に表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.DefaultActiveFieldIndex">
      <summary>既定のアクティブな編集可能フィールドのインデックスを取得または設定します。これは依存関係プロパティです。</summary>
      <value>既定のアクティブフィールドを示す <see cref="T:System.Int32" /> 値。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.DefaultActiveFieldIndex" /> は、編集可能フィールドのインデックスを表します。コントロールがフォーカスを取得すると、既定のアクティブフィールドがアクティブになります。-１より大きい値を指定する必要があります。編集可能な最後のフィールドのインデックスより大きい値を設定すると、コントロールがキーボードフォーカスを取得したときに編集可能な最後のフィールドがアクティブになります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.DisplayFieldSet">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType" />の<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet" />を取得または設定します。</summary>
      <value>表示フィールドセットのコレクションを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet" /> オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.DropDownButtonStyle">
      <summary>ドロップダウンボタンの描画に使用されるスタイルを取得または設定します。</summary>
      <value>ドロップダウンボタンのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.DropDownButtonVisibility">
      <summary>ドロップダウンボタンの表示方法を決定する値を取得または設定します。</summary>
      <value>ドロップダウンボタンの表示方法を決定する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellButtonVisibility" /> 列挙体。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.DropDownCalculatorStyle">
      <summary>ドロップダウン電卓が描画されるときに使用されるドロップダウン電卓のスタイルを取得または設定します。</summary>
      <value>ドロップダウン電卓のプロパティの設定に使用される <see cref="T:System.Windows.Style" />。既定値は <see langword="null" /> です。</value>
      <remarks>このプロパティによって、ドロップダウン電卓の表示設定、レイアウト、動作などを設定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.DropDownWindowStyle">
      <summary>ドロップダウンウィンドウが描画されるときに使用されるドロップダウンウィンドウのスタイルを取得または設定します。</summary>
      <value>ドロップダウンウィンドウに適用される <see cref="T:System.Windows.Style" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.FieldSet">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" />の<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" />値を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.FieldSet" /> プロパティの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.MaxValue">
      <summary>設定可能な範囲の最大値を示す 10 進数値を取得または設定します。</summary>
      <value>範囲の最大値を示す 10 進数値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.MinValue">
      <summary>設定可能な範囲の最小値を示す 10 進数値を取得または設定します。</summary>
      <value>範囲の最小値を示す 10 進数値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.NegativeForeground">
      <summary>値がゼロ未満のときの前景を示すブラシを取得または設定します。</summary>
      <value>値がゼロ未満のときの前景を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>エディタの既定値を示す <see cref="T:System.Decimal" /> 値。</value>
      <remarks>
        <para> 入力候補値は、入力候補となる 10 進数値をユーザーにヒントとして提示するために使用されます。これはセルが編集状態になったときにのみ表示されます。 </para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。</para>
        <para> 入力候補値の優先度は表示フィールドおよび透かしよりも下です。透かしまたは表示フィールドが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        入力候補値を表示する場合は<see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。 </para>
        <para> 入力候補値の優先度は表示フィールドおよび透かしよりも下です。透かしまたは表示フィールドが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.SpinButtonStyle">
      <summary>スピンボタンの描画に使用される <see cref="T:System.Windows.Style" /> を取得または設定します。</summary>
      <value>スピンボタンのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.SpinButtonVisibility">
      <summary>スピンボタンの表示方法を決定する値を取得または設定します。</summary>
      <value>スピンボタンの表示方法を決定する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellButtonVisibility" /> 列挙体。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.SpinIncrementValue">
      <summary>スピン増分値を取得または設定します。</summary>
      <value><b>decimal</b> 値。既定値は 0 です。</value>
      <remarks>このプロパティは、値を増減する量を示します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.SpinMode">
      <summary>スピンパターンを示すスピンモード値を取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.SpreadGrid.Editors.NumberSpinMode" /> 列挙値。既定値は <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.NumberSpinMode.Field" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.NumberSpinMode" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.ValueSign">
      <summary>セルの値の符号を取得または設定します。</summary>
      <value>値の符号を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl" /> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType" /> の値の範囲を決定します。<see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl.Positive" /> の場合は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType" nolink="true" /> で正の値のみが許可されます。<see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl.Negative" /> の場合は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType" nolink="true" /> で負の値のみが許可されます。<see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl.NoControl" /> の場合は、値は制御されません。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.ValueSignControl" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkDisplayZero">
      <summary>値がゼロで、なおかつこのセルが編集状態でないときの、透かしテキストを取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkDisplayZero" /> を示す <see cref="T:System.String" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された文字列に無効な文字（'\r' など）が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkDisplayZeroForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkDisplayZero" /> を描画する前景を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkDisplayZero" /> の前景を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
      <remarks>このプロパティを <see langword="null" /> に設定すると、描画する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType" /> セルの前景を使用して <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkDisplayZero" /> が表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkZero">
      <summary>値が０のときの透かしテキストを取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkZero" /> を示す <see cref="T:System.String" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された文字列に無効な文字（'\r' など）が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkZeroForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkZero" /> を描画する前景を取得または設定します。</summary>
      <value><see cref="T:System.Windows.Media.Brush" /> の前景を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkZero" /> 値。</value>
      <remarks>このプロパティを <see langword="null" /> に設定すると、描画する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType" /> セルの前景を使用して <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.WatermarkZero" /> が表示されます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.NumberCellType.SetEditValue(System.Windows.FrameworkElement,System.Object)">
      <summary>値を編集要素に設定します。</summary>
      <param name="editElement">編集するために使用される要素。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.AcceptsCrLf">
      <summary>文字列を貼り付けるときに CrLf 文字をどのように処理するかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>文字列を <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType" /> セルに貼り付けるときに CrLf 文字をどのように処理するかを示す <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.CrLfMode" /> 列挙体。<br />既定値は <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.CrLfMode.Cut" /> です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.Multiline" /> が <see langword="false" /> の場合にのみ機能します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.AcceptsCrLf" /> を <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.CrLfMode.Cut" /> に設定すると、最初の CrLf 文字より前の部分文字列のみが貼り付け時に残されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.AcceptsCrLf" nolink="true" /> を <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.CrLfMode.Filter" /> に設定すると、文字列内のすべての CrLf 文字が除去されます。</remarks>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.CrLfMode" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.AcceptsReturn">
      <summary>ユーザーが ENTER キーを押したときに編集要素がどのように反応するかを示す値を取得または設定します。</summary>
      <value>
        ENTER キーを押したときに現在のカーソル位置に新しい行を挿入する場合は <see langword="true" />。それ以外の場合、ENTER キーは無視されます。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.AutoConvert">
      <summary>入力された文字列を編集要素に従って自動的に変換するかどうかを取得または設定します。 <para>これは依存関係プロパティです。 </para></summary>
      <value>
        編集要素に従って文字が自動的に変換される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.AutoConvert" /> セルの変換動作を制御します。<see langword="false" /> に設定した場合、セルの入力文字は、受け入れ可能な対応する文字に変換されません。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.AutoWordSelection">
      <summary>ユーザーがマウスをドラッグして単語の一部を選択したときに残りの部分を選択するかどうかを決定する値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        単語の自動選択が有効である場合は<see langword="true" />。それ以外の場合は<see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.AutoWordSelection" /> を有効にすると、ユーザーがマウスをドラッグして単語の一部を選択するたびに、選択範囲が単語全体を含むように自動的に拡大されます。ユーザーは、選択時にマウスポインタを一瞬逆方向にドラッグすることによって、単語全体の自動選択を無効にすることができます。この操作によって単語全体の自動選択が取り消され、単語の一部または全体を正確に選択できます。 </para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.AutoWordSelection" nolink="true" /> が無効な場合は、選択範囲が単語全体を含むように自動的に拡大されることはありません。この場合、選択範囲は常に手動で指定したとおりになります。</para>
        <para>
          <note type="cnotes">自動選択は、ユーザーがドラッグする最初の単語には影響しません。その最初の単語の境界を越えてはじめて、自動選択が有効になります。 </note>
        </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.ExitOnLastChar">
      <summary>セルに最後の文字が入力されると同時にタブオーダーの次のセルがフォーカスを受け取るかどうかを取得または設定します。</summary>
      <value>
        編集要素によって定義された最後の文字がコントロールに入力されると同時にタブオーダーの次のセルにフォーカスが移動する場合は <see langword="true" />。それ以外の場合は<see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティが <see langword="true" /> に設定されている場合、ユーザーが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType" /> セルの最後まで入力すると、キーボードフォーカスが自動的に次のセルに設定されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:System.Boolean" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.Format">
      <summary>セルで使用する入力書式を取得または設定します。これは依存関係プロパティです。</summary>
      <value>セルへのテキストの入力書式を指定する文字列。<br />既定値は <see cref="F:System.String.Empty">String.Empty</see> です。</value>
      <remarks>このプロパティは、入力できる文字および記号の種類を指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.ImeConversionMode">
      <summary>指定したセルの <see cref="T:System.Windows.Input.ImeConversionModeValues" />値を取得または設定します。</summary>
      <value>指定したセルの変換モードを指定する <see cref="T:System.Windows.Input.ImeConversionModeValues" /> のメンバ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.ImeSentenceMode">
      <summary>指定したセルの <see cref="T:System.Windows.Input.ImeSentenceModeValues" />値を取得または設定します。</summary>
      <value>指定したセルのセンテンスモードを指定する <see cref="T:System.Windows.Input.ImeSentenceModeValues" /> のメンバ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.ImeState">
      <summary>指定したセルの入力メソッドの状態を取得または設定します。</summary>
      <value>指定したセルの入力メソッドの状態を指定する <see cref="T:System.Windows.Input.InputMethodState" /> のメンバ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.InputScope">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType" />のInputScopeを取得または設定します。</summary>
      <value>代替入力方法で切り替える方法に解釈されるか変更する入力値の種類。 （コマンドの既定の処理が発生する）既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.IsInputMethodEnabled">
      <summary>この入力メソッドが有効かどうかを示す値を取得または設定します。</summary>
      <value>
        この入力メソッドが有効な場合は<see langword="true" />。それ以外の場合は<see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.MaxLength">
      <summary>セルに保持できる最大文字数またはバイト数を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.MaxLengthUnit" />プロパティに従って決定される、コントロールに入力できる文字数またはバイト数。<br />既定値はゼロです。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.MaxLength" /> プロパティを使用して、ユーザーがセルに入力できる文字数を制限できます。既定値は０で、文字数が制限されないことを示します。０より大きい任意の数を指定すると、それが最大文字数になります。表示結果には、この <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.MaxLength" nolink="true" /> プロパティと共に <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.MaxLengthUnit" /> も影響します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が 0 未満です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.MaxLengthUnit">
      <summary>セルに保持できる最大文字数をバイト、文字、テキスト要素のいずれに基づいて取り扱うかを取得または設定します。これは依存関係プロパティです。</summary>
      <value>長さの単位が文字、バイト、テキスト要素のいずれに基づくかを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LengthUnit" /> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LengthUnit.Char" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.MaxLength" /> プロパティをカウントする際の単位を決定します。値が <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LengthUnit.Byte" /> の場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.MaxLength" nolink="true" /> はバイト単位でカウントされます。値が <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LengthUnit.Char" /> の場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.MaxLength" nolink="true" /> は文字単位でカウントされます。値が <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LengthUnit.TextElement" /> の場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.MaxLength" nolink="true" /> はテキスト要素単位でカウントされます。</remarks>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.SpreadGrid.Editors.LengthUnit" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.Multiline">
      <summary>セルが複数行のテキストを受け入れて表示できるかどうかを取得または設定します。</summary>
      <value>
        セルが複数行セルの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.TextWrapping" /> が <see cref="F:System.Windows.TextWrapping.NoWrap" /> でない場合、ユーザーが複数行セルにテキストボックスの幅を超えるテキストを入力すると、テキストが折り返されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>エディタの既定値を示す <see cref="T:System.String" /> 値。</value>
      <remarks>入力候補値は、入力候補となる内容をユーザーにヒントとして提示するために使用されます。これは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType" /> セルがアクティブなときにのみ表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        入力候補値を表示する場合は<see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.TextWrapping">
      <summary>テキストボックス内のテキストを折り返す方法を取得または設定します。これは依存関係プロパティです。</summary>
      <value>テキストボックス内のテキストを折り返す方法を示す <see cref="T:System.Windows.TextWrapping" /> 値の 1 つ。 既定値は  <see cref="F:System.Windows.TextWrapping.NoWrap">TextWrapping.NoWrap</see> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.TextWrapping" /> を <see cref="F:System.Windows.TextWrapping.Wrap" /> に設定すると、入力したテキストが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType" /> セルの端に達すると次の行に折り返され、新しい行が収まるように必要に応じて編集要素の高さが自動的に調整されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.WatermarkDisplayNull">
      <summary>値が <see langword="null" />で、なおかつセルが非編集時の、透かし表示テキストを取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.WatermarkDisplayNull" /> を示す <see cref="T:System.String" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値に無効なパターンまたは無効な文字が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.WatermarkDisplayNullForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.WatermarkDisplayNull" />が表示されるときの透かし表示テキストの前景を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.WatermarkDisplayNullForeground" /> を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.WatermarkNull">
      <summary>値が<see langword="null" />のときの透かしテキストを取得または設定します。</summary>
      <value><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.WatermarkNull" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値に無効なパターンまたは無効な文字が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.WatermarkNullForeground">
      <summary>値が<see langword="null" />のときの透かしテキストの前景を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.WatermarkNullForeground" /> を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.GenerateDisplayElement">
      <summary>このセル型の表示要素を作成します。</summary>
      <returns>このセル型の表示要素。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.GenerateEditElement">
      <summary>このセル型の編集要素を作成します。</summary>
      <returns>このセル型の編集要素。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.SetEditValue(System.Windows.FrameworkElement,System.Object)">
      <summary>値を編集要素に設定します。</summary>
      <param name="editElement">編集するために使用される要素。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.TextCellType.TextToValue(System.String,System.Boolean@)">
      <summary>テキストをセル値に解析します。</summary>
      <param name="text">テキスト。</param>
      <param name="textIsValid">テキストが有効かどうかを示します。</param>
      <returns>セル値。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.CellButtonVisibility">
      <summary>サイドボタンの表示設定を指定します。</summary>
      <remarks>この列挙体のメンバーにより、ユーザーはサイドボタンを表示するかどうかを設定できます。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.CellButtonVisibility.AlwaysShow">
      <summary>サイドボタンが常に表示されることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.CellButtonVisibility.NotShow">
      <summary>サイドボタンが表示されないことを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.CellButtonVisibility.ShowInEditor">
      <summary>編集状態のときにのみサイドボタンが表示されることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.CellButtonVisibility.ShowInActiveCell">
      <summary>アクティブセルにのみサイドボタンが表示されることを示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxValueType">
      <summary>セルの値の格納方法を決定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxValueType.Default">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxCellType.ItemsSource" /> が <see langword="null" /> の場合は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxValueType.Text" /> と同じように動作します。それ以外の場合は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxValueType.SelectedValue" /> と同じです。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxValueType.Text">
      <summary>項目のテキストをセルの値に格納します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxValueType.SelectedValue">
      <summary>選択された値をセルの値に格納します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxValueType.SelectedIndex">
      <summary>選択されたインデックスをセルの値に格納します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.ComboBoxValueType.SelectedItem">
      <summary>選択された項目をセルの値に格納します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.EditCaretPosition.Default">
      <summary>位置は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.SpreadBeginEditAction" /> によって決定されます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.EditCaretPosition.MouseLocation">
      <summary>テキストを選択せずに、ポインタデバイスの位置にキャレットを配置します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.EditCaretPosition.End">
      <summary>テキストを選択せずに、コントロールのテキストの末尾にキャレットを配置します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.EditCaretPosition.SelectAll">
      <summary>コントロールのテキストの先頭にキャレットを配置し、すべてのテキストを選択します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.ProcessNavigationKeys">
      <summary>コントロールが編集モードのときのキーボードの方向キーの処理方法を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.ProcessNavigationKeys.Default">
      <summary>編集開始操作に従って、コントロールが適切なナビゲーションモードを選択します。</summary>
      <remarks>詳細については、次の表を参照してください。 <list type="table"><listheader><term>BeginEditAction</term><description>ProcessNavigationKeys</description></listheader><item><term><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.SpreadBeginEditAction.LeftDoubleClick" />、 <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.SpreadBeginEditAction.F2" />、 <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.SpreadBeginEditAction.Programming" />、 <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.SpreadBeginEditAction.DropDownButtonClick" />、 <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.SpreadBeginEditAction.SpinButtonClick" /></term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.ProcessNavigationKeys.Editor" /></description></item><item><term><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.SpreadBeginEditAction.CharInput" /></term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.ProcessNavigationKeys.ExitEditor" /></description></item><item><term><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.SpreadBeginEditAction.LeftClick" />、 <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.SpreadBeginEditAction.ActiveCell" /></term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.ProcessNavigationKeys.ExitEditor" nolink="true" /></description></item></list></remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.ProcessNavigationKeys.Editor">
      <summary>方向キーを押すとテキストエディタ内でキャレットが移動します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.ProcessNavigationKeys.ExitEditorAtEnds">
      <summary>最初はテキストエディタ内でキャレットが移動します。キャレットが最初の文字の前または最後の文字の後にあるときに左または右方向キーを押すと、アクティブセルが移動します。キャレットが最初の行または最後の行にあるときに上または下方向キーを押すと、アクティブセルが移動します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.ProcessNavigationKeys.ExitEditor">
      <summary>方向キーを押すとセル間を移動します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ButtonCellTypeControl">
      <summary>ButtonCellTypeControl</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ButtonCellTypeControl.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ButtonCellTypeControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ButtonCellTypeControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.CellTypeControl">
      <summary>CellTypeControl</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.CellTypeControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.CellTypeDialogWindow">
      <summary>CellTypeDialogWindow</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.CellTypeDialogWindow.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.CellTypeDialogWindow" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.CellTypeDialogWindow.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ComboBoxCellTypeControl">
      <summary>ComboBoxCellTypeControl</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ComboBoxCellTypeControl.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ComboBoxCellTypeControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ComboBoxCellTypeControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.DateTimeCellTypeControl">
      <summary>DateTimeCellTypeControl</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.DateTimeCellTypeControl.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.DateTimeCellTypeControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.DateTimeCellTypeControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ImeManagerDialog">
      <summary>ImeManagerDialog</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ImeManagerDialog.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ImeManagerDialog" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.ImeManagerDialog.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.NumberCellTypeControl">
      <summary>NumberCellTypeControl</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.NumberCellTypeControl.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.NumberCellTypeControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.NumberCellTypeControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.TextCellTypeControl">
      <summary>TextCellTypeControl</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.TextCellTypeControl.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.TextCellTypeControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.CellTypeDialog.TextCellTypeControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Common.CheckToBoolConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Common.CheckToBoolConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Common.ColorToSolidBrushConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Common.ColorToSolidBrushConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AutoGeneratingColumn" />のイベントデータを表します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs" /> は、 <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AutoGeneratingColumn">AutoGeneratingColumn</see> イベントハンドラで使用します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs" nolink="true" /> を使用して、生成される列のプロパティや、列の生成元となるデータ項目の情報にアクセスできます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs.#ctor(System.String,System.Type,GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyName">生成される<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" /> に関連するプロパティの名前。</param>
      <param name="propertyType">
        生成される<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" /> に関連するプロパティの<see cref="T:System.Type" />。</param>
      <param name="column">生成される<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" />。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs.Column">
      <summary>生成される<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" />を取得または設定します。</summary>
      <value>生成される列。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs.Column" /> プロパティを使用して、生成される列のプロパティを変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs.PropertyName">
      <summary>生成される<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" /> に関連するプロパティの名前を取得します。</summary>
      <value>プロパティの名前。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs.PropertyType">
      <summary>生成される <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" /> に関連するプロパティの <see cref="T:System.Type" /> を取得します。</summary>
      <value>
        プロパティの<see cref="T:System.Type" />。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> の選択できない日付のコレクションを表します。このクラスは継承できません。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection" /> には <see cref="!:GrapeCity.Windows.InputMan.CalendarDateRange" /> オブジェクトが含まれます。これにより、ユーザーが選択できない日付を複数指定できます。過去の日付すべてを選択できないようにするには、<see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection.AddDatesInPast" /> メソッドを使用します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオブジェクトが表す日付を持つ <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> 。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection.AddDatesInPast">
      <summary><see cref="P:System.DateTime.Today" />より前のすべての日付を <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection" /> に追加します。</summary>
      <exception cref="T:System.NotSupportedException"> このメソッドの呼び出し元スレッドが、現在のインスタンスを初期化したスレッドではありません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection.Contains(System.DateTime)">
      <summary>指定した日付がこのコレクションに含まれているかどうかを表す値を返します。</summary>
      <param name="date">検索する日付。</param>
      <returns>
        指定した日付がこのコレクションに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
      <summary>指定した日付範囲がこのコレクションに含まれているかどうかを表す値を返します。</summary>
      <param name="start">日付範囲の開始日。</param>
      <param name="end">日付範囲の終了日。</param>
      <returns>
        範囲内のすべての日付がコレクションに含まれている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection.Contains(GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange)">
      <summary><see cref="!:GrapeCity.Windows.InputMan.CalendarDateRange" />がコレクションに含まれているかどうかをチェックします。</summary>
      <param name="range"><see cref="!:GrapeCity.Windows.InputMan.CalendarDateRange" />。</param>
      <returns>
        <see cref="!:GrapeCity.Windows.InputMan.CalendarDateRange" />内のすべての日付がコレクションに含まれている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlackoutDatesCollection.ContainsAny(GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange)">
      <summary>指定した日付範囲内の任意の日付がこのコレクションに含まれているかどうかを表す値を返します。</summary>
      <param name="range">検索する日付範囲。</param>
      <returns>
        範囲内の任意の日付がコレクションに含まれている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BooleanToDoubleConverter">
      <summary><see cref="T:System.Boolean" />値と<see cref="T:System.Double" /> 値の間の相互変換を行う <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BooleanToDoubleConverter" /> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BooleanToDoubleConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BooleanToDoubleConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BooleanToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary><see cref="T:System.Boolean" /> 値を <see cref="T:System.Double" /> 値に変換します。</summary>
      <param name="value">変換する<see cref="T:System.Boolean" /> 値。標準の <see cref="T:System.Boolean" nolink="true" /> 値または null 許容の Boolean 値を指定できます。</param>
      <param name="targetType">このパラメーターは使用されません。</param>
      <param name="parameter">このパラメーターは使用されません。</param>
      <param name="culture">このパラメーターは使用されません。</param>
      <returns>値が <see langword="true" /> の場合は 1。それ以外の場合は 0。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BooleanToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary><see cref="T:System.Double" /> 値を <see cref="T:System.Boolean" /> 値に変換します。</summary>
      <param name="value"><see cref="T:System.Double" />値。</param>
      <param name="targetType">このパラメーターは使用されません。</param>
      <param name="parameter">このパラメーターは使用されません。</param>
      <param name="culture">このパラメーターは使用されません。</param>
      <returns>
        値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonEditElement">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.GcSpreadSheet" />コントロールで使用できるボタン状のユーザーインタフェース（UI）を表示する編集要素を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonEditElement.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonEditElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonEditElement.CustomCommandParameter">
      <summary>コマンドに渡すパラメーターを取得または設定します。</summary>
      <value>コマンドに渡すパラメーター。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorButton">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalculator" /> を操作するための <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorButton" /> コントロールを表します。</summary>
      <remarks>
         <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Pressed</td><td><see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>MouseOver</td><td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Focused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Unfocused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr></table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorButton.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo" />を表現するための <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton" /> コントロールを表します。これは、 <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.DisplayMode">GcDropDownCalendar.DisplayMode</see>  プロパティが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" /> の場合は月を表し、 <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.DisplayMode" nolink="true">GcDropDownCalendar.DisplayMode</see> プロパティが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Decade" /> の場合は年を表します。このクラスは継承できません。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton" /> には、スタイルによって視覚的表現をカスタマイズするためのプロパティが用意されています。 <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsInactive" /> は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton" nolink="true" /> が隣接ステータスにあるかどうかを示します。 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.HasSelectedDays" /> は、 <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton" nolink="true" /> が表す日付に選択されている日が含まれているかどうかを示します。 </para><para> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton" nolink="true" /> には、自身が表す日付に関するさらに詳細な情報を提供するために、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.CalendarInfo" /> プロパティも用意されています。これは <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティに設定されるので、 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" />によってデータ表現をカスタマイズすることもできます。 </para><para><b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />.のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Pressed</td><td> <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> が <see langword="true" />.のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>MouseOver</td><td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />.のときの外観を表します。</td></tr><tr><td>SelectionStates</td><td>Selected</td><td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsHighlighted" /> または <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.HasSelectedDays" nolink="true" /> が <see langword="true" />のときの外観を表します。 <br />  <b>Selected</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" />で定義されていない場合は、 <b>Unselected</b> 状態が使用されます。</td></tr><tr><td>SelectionStates</td><td>Unselected</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsHighlighted" nolink="true" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.HasSelectedDays" nolink="true" /> が両方とも <see langword="false" />のときの外観を表します。</td></tr><tr><td>ActiveStates</td><td>Active</td><td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsInactive" nolink="true" /> が <see langword="false" />のときの外観を表します。 <br /> <b>Active</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" nolink="true" />で定義されていない場合は、 <b>Inactive</b> 状態が使用されます。</td></tr><tr><td>ActiveStates</td><td>Inactive</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsInactive" nolink="true" /> が <see langword="true" />.のときの外観を表します。</td></tr><tr><td>CalendarButtonFocusStates</td><td>CalendarButtonFocused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。 <br /> <b>CalendarButtonFocused</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" nolink="true" />で定義されていない場合は、 <b>CalendarButtonUnfocused</b> 状態が使用されます。</td></tr><tr><td>CalendarButtonFocusStates</td><td>CalendarButtonUnfocused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Focused</td><td> <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="true" />のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Unfocused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />.のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="true" />のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td></tr></table></para></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.CalendarInfoProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.CalendarInfo" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.HasSelectedDaysProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.HasSelectedDays" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsHighlightedProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsHighlighted" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsInactiveProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsInactive" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.CalendarInfo">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton" />が表す日付の詳細情報を含む <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo" /> を取得します。これは依存関係プロパティです。</summary>
      <value>この<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton" />が表す<see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo" />。</value>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo" /> には以下の情報が含まれます。<list type="table"><listheader><term>CalendarInfo プロパティ</term><description>説明</description></listheader><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.StartDate" /></term><description> <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo" nolink="true" /> が表す日付範囲の最初の日付。</description></item><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.EndDate" /></term><description><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo" nolink="true" /> が表す日付範囲の最後の日付。</description></item><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.IsTrailing" /></term><description><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.StartDate" nolink="true" /> から <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.EndDate" nolink="true" /> までの日付が隣接日かどうか。</description></item><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.HasSelectedDays" /></term><description><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.StartDate" nolink="true" /> から<see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.EndDate" nolink="true" />までの日付範囲に選択されている日が含まれているかどうか。</description></item><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.Text" /></term><description> <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo" nolink="true" /> の表示に使用される、 <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.MonthFormat" /> または <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearFormat" />.に準拠した書式付き<see cref="T:System.String" /></description></item></list></remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.HasSelectedDays">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.CalendarInfo" />の日付範囲に <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> で選択されている日が含まれているかどうかを示す値を取得します。これは依存関係プロパティです。</summary>
      <value>
        カレンダー情報に選択日が含まれている場合は<see langword="true" />。 それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsHighlighted">
      <summary>このボタンが強調表示されているかどうかを示す値を取得します。これは依存関係プロパティです。</summary>
      <value>
        ボタンが強調表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.IsInactive">
      <summary>この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton" /> が非アクティブかどうかを示す値を取得します。これは依存関係プロパティです。</summary>
      <value>
        このインスタンスが非アクティブの場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> が表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton" /> のうち現在の日付範囲から外れているボタンは <b>Inactive</b> ボタンになります。たとえば、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" nolink="true" /> の表示モードが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Decade" /> で、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.FocusedDate" /> が 2009/09/29 の場合、コントロールには 2000 ～ 2009 年が表示されるので、1999 年を示す最初のボタンと 2010 年を示す最後のボタンは <b>Inactive</b> ボタンになります。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarButton.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands">
      <summary><see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> の操作に関連するコマンドのセットを提供します。このクラスは <see langword="static class" /> であるため、継承や初期化できません。</summary>
      <remarks>
        <para>  <b>CalendarCommands</b> クラスのコマンドは、コントロール内でのナビゲーションや選択を実行する一連のユーザー操作コマンドを表すためのものです。これらのコマンドは <see cref="T:System.Windows.Input.RoutedUICommand" /> のインスタンスを表すだけであり、コマンドの実装ロジックは表しません。実装ロジックは、これらのコマンドの実行を処理する <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar" />によって提供されます。 </para>
        <para> 次の表に、編集コマンドとそれに対応する既定のキージェスチャ（ <see cref="T:System.Windows.Input.Key">Key</see> および <see cref="T:System.Windows.Input.ModifierKeys">ModifierKeys</see> および <list type="table"><listheader><term>カレンダーコマンド</term><description>既定のキージェスチャ</description></listheader><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.Clear" /></term><description>F2</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.MoveToEnd" /></term><description>既定のキージェスチャはありません。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.MoveToNext" /></term><description>既定のキージェスチャはありません。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.MoveToPrevious" /></term><description>既定のキージェスチャはありません。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.MoveToStart" /></term><description>既定のキージェスチャはありません。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.MoveToToday" /></term><description>F5</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.ZoomIn" /></term><description>Ctrl+Down</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.ZoomOut" /></term><description>Ctrl+Up</description></item></list></para>
        <para> カレンダーコマンドはすべて、コマンドパラメーターを無視します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.Clear">
      <summary>カレンダーの選択をクリアするよう要求する <b>Clear</b> コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャーは <b>F2</b> です。</value>
      <remarks>
        <para> このコマンドは、 <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> が選択されていないときには実行できません。 </para>
        <para> このコマンドは、 <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar" nolink="true">GcDropDownCalendar</see>.によってネイティブにサポートされています。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.MoveToEnd">
      <summary>カレンダーのフォーカス日付を現在のカレンダー表示の最後の項目の末尾に移動するよう要求する <b>MoveToEnd</b> コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャはありません。</value>
      <remarks>このコマンドは <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see>によってネイティブにサポートされています。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.MoveToNext">
      <summary>カレンダーに次のカレンダー日付を表示するよう要求する <b>MoveToNext</b> コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャはありません。</value>
      <remarks>
        <para> このコマンドは、 <see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.FocusedDate">GcDropDownCalendar.FocusedDate</see> が現在の表示モードの最後の単位に含まれているときには実行できません。たとえば、コントロールが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Month" /> 表示モードで、 <see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.FocusedDate" nolink="true">GcDropDownCalendar.FocusedDate</see> が <see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.MaxDate">GcDropDownCalendar.MaxDate</see> （既定値は 9999 年 12 月）の月に含まれる場合がこれに該当します。 </para>
        <para> このコマンドは <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see>.によってネイティブにサポートされています。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.MoveToPrevious">
      <summary>カレンダーに前のカレンダー日付を表示するよう要求する <b>MoveToPrevious</b> コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャはありません。</value>
      <remarks>
        <para> このコマンドは、 <see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.FocusedDate">GcDropDownCalendar.FocusedDate</see> が現在の表示モードの最初の単位に含まれているときには実行できません。たとえば、コントロールが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Month" /> 表示モードで、 <see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.FocusedDate" nolink="true">GcDropDownCalendar.FocusedDate</see> が <see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.MinDate">GcDropDownCalendar.MinDate</see> （既定値は 0001 年１月）の月に含まれる場合がこれに該当します。 </para>
        <para> このコマンドは <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see>.によってネイティブにサポートされています。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.MoveToStart">
      <summary>カレンダーのフォーカス日付を現在のカレンダー表示の最初の項目の先頭に移動するよう要求する <b>MoveToStart</b> コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャはありません。</value>
      <remarks>このコマンドは <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see>によってネイティブにサポートされています。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.MoveToToday">
      <summary>カレンダーのフォーカスを移動して <see cref="P:System.DateTime.Today" /> を選択するよう要求する <b>MoveToToday</b> コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャーは <b>F5</b> です。</value>
      <remarks>
        <para> このコマンドは、 <see cref="P:System.DateTime.Today" /> が  <see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.MinDate">GcDropDownCalendar.MinDate</see> から <see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.MaxDate">GcDropDownCalendar.MaxDate</see>までの範囲から外れているときには実行できません。 </para>
        <para> このコマンドは<see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see>.によってネイティブにサポートされています。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.ZoomIn">
      <summary>カレンダーの表示モードを下げるよう要求する <b>ZoomIn</b> コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャーは <b>Ctrl+Down</b> です。</value>
      <remarks>
        <para> <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> の表示モードが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Decade" /> の場合、このコマンドは表示モードを <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Year" /> に変更するようコントロールに要求します。表示モードが <b>Year</b> の場合は、 <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Month" /> に変更するよう要求します。 <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar" nolink="true">GcDropDownCalendar</see> の表示モードが <b>Month</b> の場合、このコマンドは無視されます。 </para>
        <para> このコマンドは <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar" nolink="true">GcDropDownCalendar</see>.によってネイティブにサポートされています。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands.ZoomOut">
      <summary>カレンダーの表示モードを上げるよう要求する <b>ZoomOut</b> コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャーは <b>Ctrl+Up</b> です。</value>
      <remarks>
        <para> <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> の表示モードが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Month" /> の場合、このコマンドは表示モードを <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Year" /> に変更するようコントロールに要求します。表示モードが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Year" nolink="true" /> の場合は、 <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Decade" /> に変更するよう要求します。 <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar" nolink="true">GcDropDownCalendar</see> の表示モードが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Decade" nolink="true" /> の場合、このコマンドは無視されます。 </para>
        <para> このコマンドは <see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar" nolink="true">GcDropDownCalendar</see>.によってネイティブにサポートされています。 </para>
      </remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateEventArgs">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.FocusedDateChanged">GcDropDownCalendar.FocusedDateChanged</see> のイベントデータを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateEventArgs.#ctor(System.DateTime,System.DateTime)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldDate">変更前のフォーカス設定された日付。</param>
      <param name="newDate">変更後のフォーカス設定された日付。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateEventArgs.#ctor(System.DateTime,System.DateTime,System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldDate">変更前のフォーカス設定された日付。</param>
      <param name="newDate">変更後のフォーカス設定された日付。</param>
      <param name="source">ソース。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateEventArgs.#ctor(System.DateTime,System.DateTime,System.Windows.RoutedEvent,System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldDate">変更前のフォーカス設定された日付。</param>
      <param name="newDate">変更後のフォーカス設定された日付。</param>
      <param name="routedEvent">ルーティングイベント。</param>
      <param name="source">ソース。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateEventArgs.NewDate">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> の変更後のフォーカス設定日を取得します。</summary>
      <value>変更後のフォーカス設定された日付を表す <see cref="T:System.DateTime">DateTime</see>。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateEventArgs.OldDate">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> の変更前のフォーカス設定日を取得します。</summary>
      <value>変更前のフォーカス設定された日付を表す <see cref="T:System.DateTime">DateTime</see>。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> の日付の範囲を表します。このクラスは継承できません。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange" /> オブジェクトは主に <see cref="!:GrapeCity.Windows.InputMan.BlackoutDatesCollection" /> によって、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> で選択できない日付の範囲を指定するために使用されます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange.#ctor(System.DateTime)">
      <summary>単一の日付を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="day">追加する日付。これは、この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange" />インスタンスの <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange.Start" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange.End" /> が同じ日であることを意味します。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange.#ctor(System.DateTime,System.DateTime)">
      <summary>日付の範囲を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="start">表す範囲の開始日。</param>
      <param name="end">表す範囲の終了日。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange.End">
      <summary>表されている範囲内の最後の日付を取得します。</summary>
      <value>表されている範囲内の最後の日付。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange.Start">
      <summary>表されている範囲内の最初の日付を取得します。</summary>
      <value>表されている範囲内の最初の日付。</value>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateRange.PropertyChanged">
      <summary>プロパティの値が変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo" /> を表現するための <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> コントロールを表します。これは、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.DisplayMode">GcDropDownCalendar.DisplayMode</see> プロパティが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" /> の場合に日を表します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> には、スタイルによって視覚的表現をカスタマイズするためのプロパティが用意されています。<para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsInactive" /> は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" nolink="true" /> が隣接ステータスにあるかどうかを示します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsSelected" /> は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" nolink="true" /> が表す日が選択されているかどうかを示します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsToday" /> は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" nolink="true" /> が表す日が <b>Today</b> かどうかを示します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsBlackedOut" /> は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" nolink="true" /> が表す日が選択できないかどうかを示します。</para><para> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" nolink="true" /> には、自身が表す日に関するさらに詳細な情報を提供するために、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo" /> プロパティも用意されています。これは <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティに設定されるので、<see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> によってデータ表現をカスタマイズすることもできます。</para><para><b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Pressed</td><td><see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>MouseOver</td><td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>SelectionStates</td><td>Selected</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsHighlighted" /> または <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsSelected" nolink="true" /> が <see langword="true" /> のときの外観を表します。<br /> <b>Selected</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" /> で定義されていない場合は、<b>Unselected</b> 状態が使用されます。</td></tr><tr><td>SelectionStates</td><td>Unselected</td><td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsHighlighted" nolink="true" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsSelected" nolink="true" /> が両方とも <see langword="false" /> のときの外観を表します。</td></tr><tr><td>ActiveStates</td><td>Active</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsInactive" nolink="true" /> が <see langword="false" /> のときの外観を表します。<br /> <b>Active</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" nolink="true" /> で定義されていない場合は、<b>Inactive</b> 状態が使用されます。</td></tr><tr><td>ActiveStates</td><td>Inactive</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsInactive" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>CalendarButtonFocusStates</td><td>CalendarButtonFocused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。 <br /> <b>CalendarButtonFocused</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" nolink="true" /> で定義されていない場合は、<b>CalendarButtonUnfocused</b> 状態が使用されます。</td></tr><tr><td>CalendarButtonFocusStates</td><td>CalendarButtonUnfocused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>DayStates</td><td>Today</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsToday" nolink="true" /> が <see langword="true" /> のときの外観を表します。 <br /><b>Today</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" nolink="true" /> で定義されていない場合は、<b>RegularDay</b> 状態が使用されます。</td></tr><tr><td>DayStates</td><td>RegularDay</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsToday" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>BlackoutDayStates</td><td>BlackoutDay</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsBlackedOut" nolink="true" /> が <see langword="true" /> のときの外観を表します。 <br /> <b>BlackoutDay</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" nolink="true" /> で定義されていない場合は、<b>NormalDay</b> 状態が使用されます。</td></tr><tr><td>BlackoutDayStates</td><td>NormalDay</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsBlackedOut" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>HolidayStates</td><td>OverrideHoliday</td><td><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsOverrideHoliday" /> が <see langword="true" /> のときの外観を表します。 <br /> <b>OverrideHoliday</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" nolink="true" /> で定義されていない場合は、<b>Holiday</b> 状態が使用されます。</td></tr><tr><td>HolidayStates</td><td>WeeklyHoliday</td><td><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsWeeklyHoliday" /> が <see langword="true" /> のときの外観を表します。 <br /><b>WeeklyHoliday</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" nolink="true" /> で定義されていない場合は、<b>Holiday</b> 状態が使用されます。</td></tr><tr><td>HolidayStates</td><td>Holiday</td><td><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsHoliday" /> は <see langword="true" /> であるが、<see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsWeeklyHoliday" nolink="true" /> と <see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsOverrideHoliday" nolink="true" /> は false であるときの外観を表します。</td></tr><tr><td>HolidayStates</td><td>ForcedWorkday</td><td><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsForceWorkday" /> が <see langword="true" /> のときの外観を表します。<br /> <b>ForcedWorkday</b> 状態が <see cref="T:System.Windows.Controls.ControlTemplate" nolink="true" /> で定義されていない場合は、<b>Workday</b> 状態が使用されます。</td></tr><tr><td>HolidayStates</td><td>Workday</td><td><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsForceWorkday" nolink="true" />、<see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsWeeklyHoliday" nolink="true" />、<see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsOverrideHoliday" nolink="true" />、<see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsHoliday" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Focused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Unfocused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr></table></para></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfoProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsBlackedOutProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsBlackedOut" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsHighlightedProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsHighlighted" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsInactiveProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsInactive" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsSelectedProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsSelected" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsTodayProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsToday" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" />が表す日の詳細情報を含む <see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo" /> を取得します。</summary>
      <value>この<see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo" />が表す<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" />。</value>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo" /> には以下の情報が含まれます。 <listheader><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo" nolink="true" /> プロパティ<item>説明</item></term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" /><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo" nolink="true" /> が表す日付。</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.HolidayName" /><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" nolink="true" />で定義された<see cref="!:GrapeCity.Windows.InputMan.IHoliday" />の<see cref="!:GrapeCity.Windows.InputMan.IHoliday" />値。</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.HolidaySettingName" /><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" nolink="true" />で定義された<see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" />の<see cref="!:GrapeCity.Windows.InputMan.HolidaySettingBase.HolidaySettingName" />値。</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsBlackedOut" /> <see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" nolink="true" /> が選択できません。</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsForceWorkday" /><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedWorkday" />.として定義されています。</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsHoliday" /> <see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedHoliday" />、 <see cref="!:GrapeCity.Windows.InputMan.DayType.Holiday" /> 、 <see cref="!:GrapeCity.Windows.InputMan.DayType.OverriddenHoliday" />.のいずれかとして定義されています。</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsOverrideHoliday" /> <see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.OverriddenHoliday" nolink="true" />として定義されています。.</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsSelected" /> <see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" nolink="true" /> が選択されています。</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsToday" /> <see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" nolink="true" /> が <item>Today</item>です。</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsTrailing" /><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" nolink="true" /> が隣接日です。</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.IsWeeklyHoliday" /><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Date" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.WeeklyHoliday" />.として定義されています。</term><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo.Text" /><see cref="!:GrapeCity.Windows.InputMan.Primitives.DayInfo" nolink="true" />の表示に使用される、現在のカルチャに準拠した書式付き <see cref="T:System.String" /> 値。</term></listheader></remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsBlackedOut">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo" />の日付が選択不可として定義されているかどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo" /> の日付が選択できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsHighlighted">
      <summary>このボタンが強調表示されているかどうかを示す値を取得します。これは依存関係プロパティです。</summary>
      <value>
        ボタンが強調表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsInactive">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo" />の日付が隣接日かどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo" /> の日付が隣接日の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsSelected">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo" /> の日付が <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> で選択されているかどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo" /> の日付が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.IsToday">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo" /> の日付が <b>Today</b> かどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.DayInfo" /> の日付が<b>Today</b> の場合は<see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector">
      <summary>条件に従って <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" />の単純なスタイルを設定できる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector" /> クラスを表します。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector" /> は基本クラスからの単純な実装であり、事前に定義した条件に従って <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> の外観（いくつかのプロパティ）を変更する簡単な手段を提供します。このインタフェースではユーザーの複雑な要件を満たせない場合は、代わりにテンプレートのカスタマイズを使用できます。</remarks>
      <example> 次のサンプルは、Xamlで <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> を使用して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector" /> の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalendar.xaml" region="StyleSelector_001" /></example>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector.Conditions">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorCondition" /> オブジェクトのコレクションを取得します。すべての条件がチェックされると新しい <see cref="T:System.Windows.Style" /> が選択され、満たされている条件の setter が選択された <see cref="T:System.Windows.Style" nolink="true" /> に適用されます。</summary>
      <value>条件。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector.SelectStyle(GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton)">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector.Conditions" /> に従ってスタイルを選択します。</summary>
      <param name="item">条件をチェックする項目。</param>
      <returns>適合する条件の setter を含む <see cref="T:System.Windows.Style" />。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarHeaderButton">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarHeaderButton" /> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarHeaderButton.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarHeaderButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" />を表現するための詳細情報を含む <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarButton" /> を表します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" /> には以下の情報が含まれます。<list type="table"><listheader><term><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" nolink="true" /> プロパティ</term><description>説明</description></listheader><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.StartDate" /></term><description> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" nolink="true" /> が表す日付範囲の最初の日付。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.EndDate" /></term><description><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" nolink="true" /> が表す日付範囲の最後の日付。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.IsTrailing" /></term><description><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.StartDate" nolink="true" /> から <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.EndDate" /> までの日付が隣接日かどうか。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.HasSelectedDays" /></term><description><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.StartDate" nolink="true" /> から<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.EndDate" nolink="true" />までの日付範囲に選択されている日が含まれているかどうか。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.Text" /></term><description> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" nolink="true" /> の表示に使用される、 <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.MonthFormat" /> または <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearFormat" />.に準拠した書式付き<see cref="T:System.String" /></description></item></list></remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.EndDate">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" /> の最後の日付を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" /> の最後の日付を示す <see cref="T:System.DateTime" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.HasSelectedDays">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.StartDate" /> から <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.EndDate" /> までの日付範囲に選択されている日が含まれているかどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.StartDate" /> から <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.EndDate" /> までの日付範囲に選択されている日が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.IsTrailing">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.StartDate" /> から <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.EndDate" /> までの日付が隣接日かどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.StartDate" /> から <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarInfo.EndDate" /> までの日付が隣接日の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.StartDate">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" /> の最初の日付を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" /> の最初の日付を示す <see cref="T:System.DateTime" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo.Text">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" /> の表示に使用される、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.MonthFormat" /> または <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearFormat" /> に準拠した書式付き <see cref="T:System.String" /> 値を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarInfo" /> の表示に使用される、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.MonthFormat" /> または <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearFormat" /> に準拠した書式付き <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> に１月、１年、または 10 年を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem" /> コントロールを表します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem" /> にはヘッダに３つのボタン（前へ移動ボタン、次へ移動ボタン、ヘッダボタン）があり、１月を表示する<b>月ビュー</b>と１年または 10 年を表示する<b>年ビュー</b>が含まれます。 <para><b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr></table></para></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem.HeaderInfoProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem.HeaderInfo" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem.InnerMarginProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem.InnerMargin" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem.HeaderInfo">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.HeaderInfo" /> が表す詳細情報を含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem" /> を表します。</summary>
      <value>この<see cref="!:GrapeCity.Windows.InputMan.Primitives.HeaderInfo" />が表す<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem" />。</value>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Primitives.HeaderInfo" /> には以下の情報が含まれます。 <list type="table"><listheader><term>HeaderInfo プロパティ</term><description>説明</description></listheader><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.HeaderInfo.StartDate" /></term><description><see cref="!:GrapeCity.Windows.InputMan.Primitives.HeaderInfo.StartDate" /> が表す日付範囲の最初の日付。</description></item><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.HeaderInfo.EndDate" /></term><description><see cref="!:GrapeCity.Windows.InputMan.Primitives.HeaderInfo.EndDate" /> が表す日付範囲の最後の日付。</description></item><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.HeaderInfo.Text" /></term><description><see cref="!:GrapeCity.Windows.InputMan.Primitives.HeaderInfo" nolink="true" /> の表示に使用される、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearMonthFormat" /> または <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearFormat" /> に準拠した書式付き <see cref="T:System.String" />  値。</description></item></list></remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem.InnerMargin">
      <summary>内側の余白を取得または設定します。</summary>
      <value>月表示および年表示の余白。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarItem.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventArgs">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.DisplayModeChanged">GcDropDownCalendar.DisplayModeChanged</see> のイベントデータを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventArgs.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode,GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldMode">変更前の表示モード。</param>
      <param name="newMode">変更後の表示モード。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventArgs.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode,GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode,System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldMode">変更前の表示モード。</param>
      <param name="newMode">変更後の表示モード。</param>
      <param name="source">ソース。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventArgs.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode,GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode,System.Windows.RoutedEvent,System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldMode">変更前の表示モード。</param>
      <param name="newMode">変更後の表示モード。</param>
      <param name="routedEvent">ルーティングイベント。</param>
      <param name="source">ソース。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventArgs.NewMode">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> の変更後のモードを取得します。</summary>
      <value>変更後のモードを表す<see cref="!:GrapeCity.Windows.InputMan.CalendarMode">CalendarMode</see> 。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventArgs.OldMode">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> の変更前のモードを取得します。</summary>
      <value>変更前のモードを表す<see cref="!:GrapeCity.Windows.InputMan.CalendarMode">CalendarMode</see> 。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClickDateEventArgs">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.ClickDate">GcDropDownCalendar.ClickDate</see> および <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.DoubleClickDate">GcDropDownCalendar.DoubleClickDate</see> イベントのイベントデータを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClickDateEventArgs.#ctor(System.Windows.RoutedEvent,System.DateTime)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClickDateEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="routedEvent">ルーティングイベント。</param>
      <param name="date">クリックされた日付。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClickDateEventArgs.#ctor(System.DateTime,System.Windows.RoutedEvent,System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClickDateEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="date">クリックされた日付。</param>
      <param name="routedEvent">ルーティングイベント。</param>
      <param name="source">ソース。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClickDateEventArgs.Date">
      <summary>クリックされた日付を取得します。</summary>
      <value>クリックされた日付を示す <see cref="T:System.DateTime">DateTime</see> 値。</value>
      <remarks>このプロパティは、マウスでクリックされた日付を取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcComboBox" />のドロップダウンウィンドウを示します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.BackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.Background" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.BorderBrushProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.BorderBrush" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.BorderThicknessProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.BorderThickness" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.ResizeBarBackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.ResizeBarBackground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.Background">
      <summary>背景を取得または設定します。</summary>
      <value>背景。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.BorderBrush">
      <summary>境界線のブラシを取得または設定します。</summary>
      <value>境界線のブラシ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.BorderThickness">
      <summary>境界線の幅を取得または設定します。</summary>
      <value>境界線の幅。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ComboDropDownWindow.ResizeBarBackground">
      <summary>サイズ変更バーの背景を取得または設定します。</summary>
      <value>サイズ変更バーの背景。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ConditionCollection">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorCondition" />のコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ConditionCollection.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ConditionCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase">
      <summary>すべてのコントロールの基本クラスを表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActiveChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActiveChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActiveProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive">
      <summary>コントロールにキーボードフォーカスがあるかどうかを示す値を取得します。</summary>
      <value>
        このインスタンスにキーボードフォーカスがある場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>
        <para> キーボードフォーカスが次のいずれかの場所にあるとき、コントロールはアクティブになります。１）コントロールまたはコントロールのサブツリーにあるとき、２）ターゲット／親がこのコントロールに設定されたポップアップのサブツリーにあるとき、３）ターゲット／親がこのコントロールであるポップアップのサブポップアップチェーンにあるとき。 </para>
        <para> たとえば、キーボードフォーカスが、 <see cref="T:GrapeCity.Windows.InputMan.GcDateTime" />から開いたコンテキストメニューにあるとき、コントロールはアクティブになります。また、キーボードフォーカスが  <see cref="T:GrapeCity.Windows.InputMan.GcNumber" />のドロップダウン電卓のコンテキストメニューにあるときにもアクティブになります。 </para>
        <para> フォーカスが HTML コントロールに移動するか、ブラウザーから離れた後も、IM コントロールの <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" /> は引き続き <see langword="true" /> のままです（エディタコントロールの場合、その表示テキストは表示されませんが、表示設定が <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.ShowOnFocus" /> に設定されているサイドボタンは引き続き表示されます）。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.OnIsActiveChanged(System.Windows.RoutedEventArgs)">
      <summary>未処理の <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActiveChanged" />イベントがこの要素で発生したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActiveChanged">
      <summary>この要素の<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" /> プロパティの値が変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands">
      <summary><see cref="T:System.Windows.Controls.Control" />に関連するナビゲーションコマンドのセットを提供します。このクラスは <see langword="static class" /> であるため、継承や初期化できません。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> クラスは、キーボードによるフォーカス移動の制御に使用される標準的なナビゲーション関連コマンドのセットを公開しています。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands.NextControl">
      <summary>フォーカスを次のコントロールに移動するよう要求する<see cref="!:GrapeCity.Windows.InputMan.ControlNavigationCommands.NextControl" /> コマンドを表します。</summary>
      <remarks>
        <para> このコマンドは、キーボードフォーカスを次のコントロールに移動する操作を示します。 このコマンドはコントロールに登録されていますが、必ずしも使用する必要はありません。多くの場合、このコマンドに応答する実装はアプリケーション開発者が記述する必要があります。 </para>
        <para> このコマンドには既定のキージェスチャーはありません。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands.PreviousControl">
      <summary>フォーカスを前のコントロールに移動するよう要求する<see cref="!:GrapeCity.Windows.InputMan.ControlNavigationCommands.PreviousControl" /> コマンドを表します。</summary>
      <remarks>
        <para> このコマンドは、キーボードフォーカスを前のコントロールに移動する操作を示します。 このコマンドはコントロールに登録されていますが、必ずしも使用する必要はありません。多くの場合、このコマンドに応答する実装はアプリケーション開発者が記述する必要があります。 </para>
        <para> このコマンドには既定のキージェスチャーはありません。 </para>
      </remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator">
      <summary>検証、および検証結果に従った操作を実行するための基本クラスを表します。このクラスは <see langword="abstract" /> であるため、継承や初期化できません。</summary>
      <remarks>ユーザー定義の検証アクションはこのクラスから派生する必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator.#ctor(System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorContent">エラーの内容。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator.ErrorContent">
      <summary>エラーに関する追加情報を提供するオブジェクトを取得または設定します。</summary>
      <value>エラーに関する追加情報を提供するオブジェクト。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorCollection">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" />のコレクションを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorCollection.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSet">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" /> のセットを含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSet" /> を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSet.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSet" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSet.ControlValidators">
      <summary>すべての <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" />のコレクションを取得します。</summary>
      <value>検証が失敗したときのアクションを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorCollection" />。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSetTypeConverter">
      <summary>文字列オブジェクトを <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSet" /> オブジェクトに変換する型コンバータを提供します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSetTypeConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSetTypeConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSetTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、指定した型のオブジェクトをこのコンバータの型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換元の型を表す <see cref="T:System.Type" />。</param>
      <returns><paramref name="sourceType" /> の型が <see cref="T:System.String" />の場合にのみ <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSetTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、オブジェクトを指定した型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換先の型を表す <see cref="T:System.Type" />。</param>
      <returns>
        <paramref name="destinationType" /> が <see cref="T:System.String" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSetTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したコンテキストとカルチャ情報を使用して、指定したオブジェクトを <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidatorSet" />の型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換する <see cref="T:System.Object" />。</param>
      <returns>変換された値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateADDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" />がアクティブでないときにその西暦名を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateADDisplayField" /> クラスを表します。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateADDisplayField" /> は、西暦名を表示する表示フィールドです。 <para><b>は、西暦名を表示する表示フィールドです。 <see cref="T:System.Windows.VisualState" /> の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>MouseOver</td><td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />.のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td></tr></table></para></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateADDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateADDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" />の値に基づいて AM/PM 文字列を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField" /> クラスを表します。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField" /> は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> がアクティブでないときに AM/PM 文字列を表示するフィールドです。 <para><b>サポートされている <see cref="T:System.Windows.VisualState" />の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>MouseOver</td><td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />.のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td></tr></table></para></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="!:GrapeCity.Windows.InputMan.AmPmPattern" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern,System.String,System.String)">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateAmPmDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="!:GrapeCity.Windows.InputMan.AmPmPattern" /> 値。</param>
      <param name="amDesignator">AM 指定子 を示す <see cref="T:System.String" /> 値。</param>
      <param name="pmDesignator">PM 指定子 を示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.AMDesignatorProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateAmPmDisplayField.AMDesignator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.PMDesignatorProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateAmPmDisplayField.PMDesignator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.PatternProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateAmPmDisplayField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.AMDesignator">
      <summary>AM 指定子を取得または設定します。 これは依存関係プロパティです。</summary>
      <value>AM 指定子 を示す <see cref="T:System.String" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が<see langword="null" />、<see cref="F:System.String.Empty">String.Empty</see> 、または無効な文字を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.PMDesignator">
      <summary>PM 指定子を取得または設定します。 これは依存関係プロパティです。</summary>
      <value>PM 指定子 を示す <see cref="T:System.String" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see langword="null" />、 <see cref="F:System.String.Empty">String.Empty</see> 、または無効な文字（'\r' など）を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.Pattern">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.AMDesignator" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.PMDesignator" /> の表示方法を示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>パターンを示す <see cref="!:GrapeCity.Windows.InputMan.AmPmPattern" /> 値。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern.AmPmDesignator" /> です。</value>
      <remarks>このパターンは、<see cref="!:GrapeCity.Windows.InputMan.Fields.DateAmPmDisplayField" /> に AM/PM 指定子をどのように表示するかを制御します。パターンが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern.AmPmDesignator" /> の場合は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.AMDesignator" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmDisplayField.PMDesignator" /> のすべての文字が表示されます。それ以外の場合は、最初の 1 文字だけが表示されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern" /> 型ではありません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField" />の値に基づいて AM/PM 文字列を表示する <see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" /> 、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="!:GrapeCity.Windows.InputMan.AmPmPattern" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern,System.String,System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="!:GrapeCity.Windows.InputMan.AmPmPattern" /> 値。</param>
      <param name="amDesignator"><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.AMDesignator" /> 値。</param>
      <param name="pmDesignator"><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.PMDesignator" /> 値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.AMDesignatorProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateAmPmField.AMDesignator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.PMDesignatorProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateAmPmField.PMDesignator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.PatternProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateAmPmField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.TextProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateAmPmField.Text" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.AMDesignator">
      <summary>AM 指定子を取得または設定します。 これは依存関係プロパティです。</summary>
      <value><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.AMDesignator" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.PMDesignator">
      <summary>PM 指定子を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.PMDesignator" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.Pattern">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.AMDesignator" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.PMDesignator" /> の表示方法を示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>パターンを示す <see cref="!:GrapeCity.Windows.InputMan.AmPmPattern" /> 値。既定値は <see cref="!:GrapeCity.Windows.InputMan.AmPmPattern.AmPmDesignator" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateAmPmField.Text">
      <summary>フィールドのテキストを取得または設定します。 これは依存関係プロパティです。</summary>
      <value>フィールドのテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにその日部分を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayDisplayField.#ctor(System.Boolean)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero"><see langword="true" />に設定した場合、フィールドの長さは固定されます。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayDisplayField.ShowLeadingZeroProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateDayDisplayField.ShowLeadingZero" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayDisplayField.ShowLeadingZero">
      <summary>先行ゼロを表示するかどうかを示す値を取得または設定します。 これは依存関係プロパティです。</summary>
      <value>
        先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <remarks>このプロパティは、現在のテキストの前にプレースホルダとして "0" を追加します。現在の値が "7" で、このプロパティが <see langword="true" /> の場合は、"07" が表示テキストとして表示されます。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> の日部分を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" /> 、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> 表示フィールド用の基本関数を定義する抽象クラス。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldCollection">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayField" />のコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldCollection.Add(System.String)">
      <summary><paramref name="format" /> に基づいて日付表示フィールドを追加します。</summary>
      <param name="format">日付表示フィールドの配列に変換できる有効な文字列。</param>
      <returns>このコレクションの最後の項目のインデックス。</returns>
      <exception cref="T:System.ArgumentException"> format に無効な文字が含まれます。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldCollection.Add(GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayField)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldCollection" />の最後に日付表示フィールドを追加します。</summary>
      <param name="item"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldCollection" /> の最後に追加するオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldCollection.AddRange(System.String)">
      <summary><paramref name="format" /> に基づいて一連の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayField" />を追加します。</summary>
      <param name="format">日付表示フィールドの配列に変換できるパターン。</param>
      <exception cref="T:System.ArgumentException"> <paramref name="format" /> に、変換できない無効な文字が含まれます。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldsBuilder">
      <summary>書式によって <see cref="!:GrapeCity.Windows.InputMan.Fields.DateDisplayField" /> を作成するビルダーを表します。この型は抽象型であり、ユーザーはその静的メソッドのみを使用できます。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldsBuilder.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldsBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldsBuilder.BuildFields(System.String)">
      <summary>指定した書式によって複数の <b>DateDisplayField</b> を作成します。</summary>
      <param name="format">日付コントロールによって定義される書式。</param>
      <returns>作成された日付フィールドを示す<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayField" /> の配列。</returns>
      <remarks>ユーザーはこのメソッドを呼び出して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayField" /> の配列を作成できます。</remarks>
      <exception cref="T:System.ArgumentException"> <paramref name="format" /> に、変換できない無効な文字が含まれます。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSet">
      <summary>依存関係プロパティとして使用できる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldCollection" /> ラッパーを表します。</summary>
      <remarks>
        <b>DateDisplayFieldSet</b> は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> で使用される表示フィールドコレクションをするための便利な手段です。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSet.#ctor">
      <summary>新しい <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSet">DateDisplayFieldSet</see> インスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSet.#ctor(System.String)">
      <summary>新しい <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSet">DateDisplayFieldSet</see> インスタンスを初期化します。</summary>
      <param name="format">日付表示フィールドに変換できる書式文字列。</param>
      <exception cref="T:System.ArgumentException"> <paramref name="format" /> に、変換できない無効な文字が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSet.DisplayFields">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSet" />の表示フィールドを取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> の表示項目を表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldCollection" />。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSetTypeConverter">
      <summary>文字列オブジェクトを <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSet" /> オブジェクトに変換する型コンバータを提供します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSetTypeConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSetTypeConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSetTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、指定した型のオブジェクトをこのコンバータの型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換元の型を表す <see cref="T:System.Type" />。</param>
      <returns>
        このコンバータが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSetTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、オブジェクトを指定した型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換先の型を表す <see cref="T:System.Type" />。</param>
      <returns>
        このコンバータが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSetTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定されたコンテキストとカルチャ情報を使用して、指定したオブジェクトをこのコンバータの型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換する <see cref="T:System.Object" />。</param>
      <returns>変換された値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayFieldSetTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストとカルチャ情報を使用して、指定した値オブジェクトを、指定した型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する 。</param>
      <param name="culture">。<see langword="null"></see>が渡された場合は、現在のカルチャが使用されます。</param>
      <param name="value">変換対象のオブジェクト</param>
      <param name="destinationType">value パラメーターの変換後の型。</param>
      <returns>変換後の値を表すオブジェクト</returns>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />が継承元の<see cref="T:System.ComponentModel.TypeConverter" />で実装されていません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraDisplayField">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> がアクティブでないときにその年号を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraDisplayField.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">年号表示フィールドのパターンを示す<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern" /> 列挙体。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraDisplayField.PatternProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateEraDisplayField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraDisplayField.Pattern">
      <summary>フィールドの年号パターンを取得または設定します。これは依存関係プロパティです。</summary>
      <value>パターンを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern" /> 列挙体。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern.EraName" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern" /> 型ではありません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" />の年号を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>ActiveDropDown</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.IsDropDownOpen" /> がどちらも <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">パターン。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.AllowDropDownOpenProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateEraField.AllowDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.AutoOpenDropDownProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateEraField.AutoOpenDropDown" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.IsDropDownOpenProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateEraField.IsDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.PatternProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateEraField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.TextProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateEraField.Text" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.AllowDropDownOpen">
      <summary>ドロップダウン機能がアクティブかどうかを示す<see cref="T:System.Boolean" /> 値を取得または設定します。 これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウン機能がアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.AutoOpenDropDown">
      <summary>このフィールドにフォーカスが移動したときに自動的にドロップダウンするかどうかを示す<see cref="T:System.Boolean" /> 値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。このフィールドにフォーカスが移動したときに自動的にドロップダウンする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.AllowDropDownOpen" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.AutoOpenDropDown" /> が両方とも <see langword="true" /> の場合は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField" /> がアクティブになるとドロップダウンが開きます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.AllowDropDownOpen" nolink="true" /> が <see langword="false" /> の場合は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.AutoOpenDropDown" nolink="true" /> が <see langword="true" /> であってもドロップダウンは開きません。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.IsDropDownOpen">
      <summary>ドロップダウンウィンドウが表示されているかどうかを示す <see cref="T:System.Boolean" />値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウンウィンドウが表示されている場合は<see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.Pattern">
      <summary>フィールドの年号パターンを取得または設定します。これは依存関係プロパティです。</summary>
      <value>パターンを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern" /> 列挙体。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern.EraName" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.Text">
      <summary>フィールドのテキストを取得または設定します。 これは依存関係プロパティです。</summary>
      <value>フィールドのテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにその和暦年を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField.#ctor(System.Boolean)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero"><see langword="true" />に設定した場合、先行ゼロが表示されます。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField.#ctor(System.Boolean,System.Boolean)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero"><see langword="true" />に設定した場合、先行ゼロが表示されます。</param>
      <param name="showTraditionalFirstYear"><see cref="T:System.Boolean" />値。<see langword="true" /> に設定した場合、和暦の 1 年が「元年」と表示されます。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField.ShowLeadingZeroProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateEraYearDisplayField.ShowLeadingZero" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField.ShowTraditionalFirstYearProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateEraYearDisplayField.ShowTraditionalFirstYear" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField.ShowLeadingZero">
      <summary>先行ゼロを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <remarks>このプロパティは、左パディングにプレースホルダとして "0" を追加します。現在の値が "1" で、このプロパティが <see langword="true" /> の場合は、"0001" が表示テキストとして表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearDisplayField.ShowTraditionalFirstYear">
      <summary>和暦の 1 年を「元年」と表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        和暦の 1 年を「元年」と表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <example> 現在の値が和暦の最初の年である場合は、このフィールドには「元」のような対応するテキストが表示されます。 </example>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> の和暦年を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" /> 、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> のフィールドの基本クラスである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField" /> クラスを表す抽象クラス。このクラスは<see langword="abstract" />であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField" />のコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection.Add(System.String)">
      <summary>指定した <paramref name="format" /> に基づいて日付フィールドを追加します。</summary>
      <param name="format">書式文字列。</param>
      <returns>このコレクションの最後の項目のインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection.Add(GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection" /> の最後に <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField" /> を追加します。</summary>
      <param name="item"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection" /> の最後に追加するオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection.AddRange(System.String)">
      <summary>指定した書式文字列から構築された別の <see cref="T:System.Collections.Generic.IList`1" />の内容をコレクションの末尾に追加します。</summary>
      <param name="text">指定した書式文字列を示す<see cref="T:System.String" />値。</param>
      <exception cref="T:System.ArgumentException"> text に、変換できない無効な文字が含まれます。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection.InsertItem(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField)">
      <summary>コレクション内の指定したインデックスに項目を挿入します。</summary>
      <param name="item">挿入するオブジェクト。</param>
      <param name="index">項目を挿入する位置の 0 から始まるインデックス。</param>
      <exception cref="T:System.InvalidOperationException"> 同じ機能の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField" /> をコレクションに複数追加することはできません。たとえば、コレクションに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField" /> がすでに存在する場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField" /> または <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearField" /> を追加することはできません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection.InsertItems(System.Int32,System.Collections.Generic.IEnumerable{GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField})">
      <summary>コレクション内の指定したインデックスに複数の項目を挿入します。</summary>
      <param name="index">項目を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">コレクションに追加するオブジェクトを含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <exception cref="T:System.InvalidOperationException"> 同じ機能の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField" /> をコレクションに複数追加することはできません。たとえば、コレクションに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField" /> がすでに存在する場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField" /> または <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearField" /> を追加することはできません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection.SetItem(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField)">
      <summary>指定したインデックスにある要素を置換します。</summary>
      <param name="item">指定したインデックスにある要素の新しい値。</param>
      <param name="index">置換する要素の 0 から始まるインデックス。</param>
      <exception cref="T:System.InvalidOperationException"> 同じ機能の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField" /> をコレクションに複数設定することはできません。たとえば、コレクションに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField" /> がすでに存在する場合、別のフィールドを <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField" /> または <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraYearField" /> に変更することはできません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldsBuilder">
      <summary>書式によって <see cref="!:GrapeCity.Windows.InputMan.Fields.DateField" /> を作成するビルダーを表す抽象クラス。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldsBuilder.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldsBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldsBuilder.BuildFields(System.String)">
      <summary>指定した書式に従って <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField" /> を作成します。</summary>
      <param name="format">日付コントロールによって定義される書式。</param>
      <returns>作成された日付フィールドを示す<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField" /> の配列。</returns>
      <exception cref="T:System.ArgumentException"> <paramref name="format" /> に、対応する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateField" /> に変換できない無効な文字が含まれています。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet">
      <summary>依存関係プロパティとして使用できる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection">DateFieldCollection</see> ラッパーを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet">DateFieldSet</see> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet.#ctor(System.String)">
      <summary>指定した書式を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet" /> の新しいインスタンスを初期化します。</summary>
      <param name="format"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" />コントロールによって定義される書式。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet.Fields">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet" /> のフィールドを取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> のフィールドを表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldCollection" />。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSetTypeConverter">
      <summary>文字列オブジェクトを <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet" /> オブジェクトに変換する型コンバータを提供します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSetTypeConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSetTypeConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSetTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、指定した型のオブジェクトをこのコンバータの型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換元の型を表す <see cref="T:System.Type" />。</param>
      <returns>型が <see cref="T:System.String" /> の場合にのみ <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSetTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定したコンテキストを使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSet" /> オブジェクトを指定した型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換先の型を表す <see cref="T:System.Type" />。</param>
      <returns>
        このコンバータが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSetTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定されたコンテキストとカルチャ情報を使用して、指定したオブジェクトをこのコンバータの型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換する <see cref="T:System.Object" />。</param>
      <returns>変換された値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFieldSetTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストとカルチャ情報を使用して、指定した値オブジェクトを、指定した型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する 。</param>
      <param name="culture">。<see langword="null"></see>が渡された場合は、現在のカルチャが使用されます。</param>
      <param name="value">変換対象のオブジェクト</param>
      <param name="destinationType">value パラメーターの変換後の型。</param>
      <returns>変換後の値を表すオブジェクト</returns>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />が継承元の<see cref="T:System.ComponentModel.TypeConverter" />で実装されていません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter">
      <summary>日付/時刻の変換可能な値をパターンに基づいて文字列に変換するコンバータを表します。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter" /> は、連結プロセスにおいて特定のテキストを指定された書式に従って別の文字列に変換するために使用されます。テキストが <see cref="!:GrapeCity.Windows.InputMan.DateFormatConverter.Pattern" /> プロパティにとって有効である場合は、変換された文字列を返します。それ以外の場合はエラー文字列を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter" />の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter.EmptyEraString">
      <summary>パターンに年号キーワードが含まれている場合に、入力値が和暦表示できないときに返す文字列を取得または設定します。</summary>
      <value>入力値が年号範囲に対して有効でないときに出力に使用される <see cref="T:System.String" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter.ErrorString">
      <summary>パターンに適していないときの文字列を取得または設定します。</summary>
      <value>入力値がパターンに対して有効でないときに出力に使用される <see cref="T:System.String" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter.NullString">
      <summary>変換されたオブジェクトが <see cref="F:System.String.Empty">String.Empty</see> または <see langword="null" /> のときに返す文字列を取得または設定します。</summary>
      <value>入力値が <see cref="F:System.String.Empty">String.Empty</see> または <see cref="T:System.String" /> のときに出力に使用される <see langword="null" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter.Pattern">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter" /> の書式を取得または設定します。</summary>
      <value>現在サポートされている書式を規定する <see cref="T:System.String" />。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>指定したパターンに基づいて特定の値を別の<see cref="T:System.String" /> に変換します。</summary>
      <param name="value">バインディングソースによって生成された値。</param>
      <param name="targetType">バインディングターゲットプロパティの型。</param>
      <param name="parameter">使用するコンバータのパラメーター。</param>
      <param name="culture">コンバータで使用するカルチャ。</param>
      <returns>変換後の値。このメソッドが <see langword="null" /> を返す場合は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter.NullString" /> が返されます。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>ターゲットデータをソースオブジェクトに渡す前に変更します。このメソッドは <see cref="F:System.Windows.Data.BindingMode.TwoWay" />バインディングの場合にのみ呼び出されます。</summary>
      <param name="value">ソースに渡されるターゲットデータ。</param>
      <param name="targetType">ソースオブジェクトで想定されているデータの <see cref="T:System.Type" />。</param>
      <param name="parameter">コンバータロジックで使用されるオプションのパラメーター。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ソースオブジェクトに渡される値。</returns>
      <remarks><see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> はサポートされていません。</remarks>
      <exception cref="T:System.NotSupportedException"> このメソッドが呼び出された場合。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにその 24 時間制の時を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField.#ctor(System.Boolean)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">先行ゼロを表示するかどうかを示す bool 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField.#ctor(System.Boolean,System.Boolean)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">先行ゼロを表示するかどうかを示す bool 値。</param>
      <param name="midnightAs24">午前 0 時を 24 時として扱うかどうかを示す bool 値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField.MidnightAs24Property">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateHourDisplayField.MidnightAs24" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField.ShowLeadingZeroProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateHourDisplayField.ShowLeadingZero" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField.MidnightAs24">
      <summary>午前 0 時を「24」時と表示するかどうかを示す値を取得または設定します。 これは依存関係プロパティです。</summary>
      <value>
        午前 0 時を「24」時と表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourDisplayField.ShowLeadingZero">
      <summary>先行ゼロを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> コントロールの時を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" /> 、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourField.#ctor">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateHourField">DateHourField</see> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourField.MidnightAs24Property">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateHourField.MidnightAs24" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateHourField.MidnightAs24">
      <summary>午前 0 時を 24 時として扱うかどうかを示す値を取得または設定します。 これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。午前 0 時を 24 時として扱う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputDisplayField">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> の値の影響を受ける一群の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateDisplayField" /> を表します。このクラスは<see langword="abstract" />であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputDisplayField.PromptCharProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateInputDisplayField.PromptChar" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputDisplayField.PromptChar">
      <summary>空のビットへの入力を促すために使用されるプロンプト文字を取得または設定します。これは依存関係プロパティです。</summary>
      <value>表示フィールドの空のビットへの入力を促すために使用される <see cref="T:System.Char" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> の編集可能フィールドを定義する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField" /> クラスを表します。このクラスは<see langword="abstract" />であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.PromptCharProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateInputField.PromptChar" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.SpinIncrementProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateInputField.SpinIncrement" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.ValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateInputField.Value" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.PromptChar">
      <summary>フィールドの空のビットへの入力を促すために使用されるプロンプト文字を取得または設定します。これは依存関係プロパティです。</summary>
      <value>入力時にフィールドの空のビットへの入力を促すために使用される <see cref="T:System.Char" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.SpinIncrement">
      <summary>スピンの増分量を取得または設定します。これは依存関係プロパティです。</summary>
      <value>スピン増分を示す <see cref="T:System.Int32" /> 値。</value>
      <remarks>このプロパティは、ユーザーがスピン操作を処理するときの増分量を定義します。ユーザーが値を変更しない場合の既定値は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> と同じです。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.DoSpinDown">
      <summary>スピンダウン動作を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.DoSpinDown(System.Int32)">
      <summary>指定した increment パラメーターを使用してスピンダウンを実行します。</summary>
      <param name="increment">スピン増分を示す <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.DoSpinUp">
      <summary>スピンアップ動作を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.DoSpinUp(System.Int32)">
      <summary>指定した increment パラメーターを使用してスピンアップを実行します。</summary>
      <param name="increment">スピン増分を示す <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateInputField.EndInit">
      <summary>要素の初期化プロセスが完了したことを示します。</summary>
      <exception cref="T:System.InvalidOperationException">
        要素に対してまだ <see cref="M:System.Windows.FrameworkElement.BeginInit" /> が呼び出されていないときに <see cref="M:System.Windows.FrameworkElement.EndInit" /> が呼び出されました。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにそのリテラルを表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateLiteralDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralDisplayField.#ctor(System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラル表示フィールドのリテラルテキストを示す <see cref="T:System.String" />値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralDisplayField.TextProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateLiteralDisplayField.Text" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralDisplayField.Text">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateLiteralDisplayField" />に表示されるリテラルテキストを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException"> 指定された値に無効な文字が含まれます。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> のリテラルを表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateLiteralField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" /> 、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralField.#ctor(System.String)">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateLiteralField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラルを示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralField.TextProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateLiteralField.Text" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateLiteralField.Text">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateLiteralField" /> のリテラルテキストを取得または設定します。これは依存関係プロパティです。</summary>
      <value>フィールドのリテラルテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにその分を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateMinuteDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteDisplayField.#ctor(System.Boolean)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" />に先行ゼロを表示する場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteDisplayField" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteDisplayField.ShowLeadingZeroProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMinuteDisplayField.ShowLeadingZero" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteDisplayField.ShowLeadingZero">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMinuteDisplayField" /> に先行ゼロを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> の分を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateMinuteField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" /> 、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにその月を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField.#ctor(System.Boolean)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" />に先行ゼロを表示する場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField.#ctor(System.Boolean,GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" />に先行ゼロを表示する場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField" />。それ以外の場合は <see langword="false" />。</param>
      <param name="pattern">月の値の表示方法を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern" />列挙体。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField.PatternProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthDisplayField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField.ShowLeadingZeroProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthDisplayField.ShowLeadingZero" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField.Pattern">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthDisplayField" />の月パターンを取得または設定します。これは依存関係プロパティです。</summary>
      <value>パターンを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern" /> 列挙体。既定値は <see cref="!:GrapeCity.Windows.InputMan.MonthPattern.Number" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthDisplayField.ShowLeadingZero">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthDisplayField" /> に先行ゼロを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> の月を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>ActiveDropDown</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.IsDropDownOpen" /> がどちらも <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">パターン。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.AllowDropDownOpenProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthField.AllowDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.AutoOpenDropDownProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthField.AutoOpenDropDown" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.IsDropDownOpenProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthField.IsDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.PatternProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.AllowDropDownOpen">
      <summary>ドロップダウン機能がアクティブかどうかを示す<see cref="T:System.Boolean" /> 値を取得または設定します。 これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウン機能がアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.AutoOpenDropDown">
      <summary>このフィールドにフォーカスが移動したときに自動的にドロップダウンするかどうかを示す<see cref="T:System.Boolean" /> 値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。このフィールドにフォーカスが移動したときに自動的にドロップダウンする場合は <see langword="true" />。それ以外の場合は <see langword="false" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.AllowDropDownOpen" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.AutoOpenDropDown" /> が両方とも <see langword="true" /> の場合は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField" /> がアクティブになるとドロップダウンが開きます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.AllowDropDownOpen" nolink="true" /> が <see langword="false" /> の場合は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.AutoOpenDropDown" nolink="true" /> が <see langword="true" /> であってもドロップダウンは開きません。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.IsDropDownOpen">
      <summary>ドロップダウンウィンドウが表示されているかどうかを示す <see cref="T:System.Boolean" />値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウンウィンドウが表示されている場合は<see langword="true" />。それ以外の場合は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.Pattern">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateMonthField" /> のパターンを取得または設定します。これは依存関係プロパティです。</summary>
      <value>月の値の表示方法を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern" /> 列挙値。既定値は <see cref="!:GrapeCity.Windows.InputMan.MonthPattern.Number" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern" /> 型ではありません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにその秒を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateSecondDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondDisplayField.#ctor(System.Boolean)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" />に先行ゼロを表示する場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondDisplayField" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondDisplayField.ShowLeadingZeroProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateSecondDisplayField.ShowLeadingZero" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondDisplayField.ShowLeadingZero">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateSecondDisplayField" /> に先行ゼロを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> の秒を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateSecondField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" /> 、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSecondField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにその 12 時間制の時を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateShortHourDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField.#ctor(System.Boolean)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" />に先行ゼロを表示する場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField.#ctor(System.Boolean,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Hour12Mode)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" />に先行ゼロを表示する場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField" />。それ以外の場合は <see langword="false" />。</param>
      <param name="hour12Mode">12 時間制の時刻の表現を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField.Hour12Mode" />列挙体。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField.Hour12ModeProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateShortHourDisplayField.Hour12Mode" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField.ShowLeadingZeroProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateShortHourDisplayField.ShowLeadingZero" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField.Hour12Mode">
      <summary>0 時と 12 時の両方を 0 と 12 のどちらで表示するかを示す値を取得または設定します。 これは依存関係プロパティです。</summary>
      <value>12 時間制の時刻の表現を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField.Hour12Mode" />列挙体。既定値は <see cref="!:GrapeCity.Windows.InputMan.Hour12Mode.Hour0As12" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField.Hour12Mode" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourDisplayField.ShowLeadingZero">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateShortHourDisplayField" /> に先行ゼロを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにその 12 時間制の時を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateShortHourField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" /> 、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourField.Hour12ModeProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateShortHourField.Hour12Mode" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourField.Hour12Mode">
      <summary>0 時と 12 時の両方を 0 と 12 のどちらで表示するかを示す値を取得または設定します。 これは依存関係プロパティです。</summary>
      <value>12 時間制の時刻の表現を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourField.Hour12Mode" />列挙体。既定値は <see cref="!:GrapeCity.Windows.InputMan.Hour12Mode.Hour0As12" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateShortHourField.Hour12Mode" /> 型ではありません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSystemFormatDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにそのシステム書式の <see cref="T:System.DateTime" /> 文字列を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateSystemFormatDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSystemFormatDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSystemFormatDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSystemFormatDisplayField.#ctor(System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSystemFormatDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">フィールドのパターンを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSystemFormatDisplayField.PatternProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateSystemFormatDisplayField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSystemFormatDisplayField.Pattern">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSystemFormatDisplayField" /> のシステム書式パターンを取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSystemFormatDisplayField" /> のパターンを示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateWeekdayDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにその曜日を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateWeekdayDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateWeekdayDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateWeekdayDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateWeekdayDisplayField.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekdayPattern)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateWeekdayDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">曜日パターンを示す <see cref="!:GrapeCity.Windows.InputMan.WeekdayPattern" />列挙値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateWeekdayDisplayField.PatternProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateWeekdayDisplayField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateWeekdayDisplayField.Pattern">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateWeekdayDisplayField" />の曜日パターンを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>曜日パターンを示す <see cref="!:GrapeCity.Windows.InputMan.WeekdayPattern" /> 値。既定値は <see cref="!:GrapeCity.Windows.InputMan.WeekdayPattern.WeekdayName" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.WeekdayPattern" /> 型ではありません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> がアクティブでないときにその年を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateYearDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField.#ctor(System.Boolean)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" />に先行ゼロを表示する場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMinuteDisplayField" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField.#ctor(System.Boolean,GrapeCity.Wpf.SpreadSheet.CellType.Editors.YearDigitType)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" />に先行ゼロを表示する場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField" />。それ以外の場合は <see langword="false" />。</param>
      <param name="yearDigit">年の桁の種類を示す <see cref="!:GrapeCity.Windows.InputMan.YearDigitType" />値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField.ShowLeadingZeroProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField.ShowLeadingZero" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField.YearDigitProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField.YearDigit" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField.ShowLeadingZero">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateYearDisplayField" /> に先行ゼロを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、左パディングにプレースホルダとして "0" を追加します。現在の値が "1" で、このプロパティが <see langword="true" /> の場合は、"0001" が表示テキストとして表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearDisplayField.YearDigit">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateYearDisplayField" /> の年の桁を取得または設定します。これは依存関係プロパティです。</summary>
      <value>年の桁の種類を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.YearDigitType" />列挙値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.YearDigitType" /> 型ではありません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> の年を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.DateYearField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" /> 、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.YearDigitType)">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateYearField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="yearDigit">年の桁。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField.TwoDigitYearMaxProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateYearField.TwoDigitYearMax" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField.YearDigitProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateYearField.YearDigit" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField.TwoDigitYearMax">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField" />の２桁モードの最大年を取得または設定します。これは依存関係プロパティです。</summary>
      <value>100 年の範囲内の、2 桁の年として表現できる最後の年を示す <see cref="T:System.Int32" /> 値。null を指定することもできます。値が <see langword="null" /> の場合はシステムの既定値が返されます。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateYearField.YearDigit">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.DateYearField" /> の年の桁を取得または設定します。これは依存関係プロパティです。</summary>
      <value>年の桁を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.YearDigitType" /> 列挙値。既定値は <see cref="!:GrapeCity.Windows.InputMan.YearDigitType.FourDigitYear" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.YearDigitType" /> 型ではありません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" />を表現するための情報を含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo" /> を表します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo" /> には以下の情報が含まれます。 <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo" nolink="true" /> プロパティ説明<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo" nolink="true" /> が表す日付。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.HolidayName" /><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" nolink="true" />で定義された<see cref="!:GrapeCity.Windows.InputMan.IHoliday" />の<see cref="!:GrapeCity.Windows.InputMan.IHoliday" />値。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.HolidaySettingName" /><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" nolink="true" />で定義された<see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" />の<see cref="!:GrapeCity.Windows.InputMan.HolidaySettingBase.HolidaySettingName" />値。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsBlackedOut" /> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" nolink="true" /> が選択できません。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsForceWorkday" /><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedWorkday" />.として定義されています。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsHoliday" /> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedHoliday" />、 <see cref="!:GrapeCity.Windows.InputMan.DayType.Holiday" /> 、 <see cref="!:GrapeCity.Windows.InputMan.DayType.OverriddenHoliday" />.のいずれかとして定義されています。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsOverrideHoliday" /> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.OverriddenHoliday" nolink="true" />として定義されています。.<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsSelected" /> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" nolink="true" /> が選択されています。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsToday" /> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" nolink="true" /> が Todayです。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsTrailing" /><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" nolink="true" /> が隣接日です。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsWeeklyHoliday" /><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.WeeklyHoliday" />.として定義されています。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Text" /><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo" nolink="true" />の表示に使用される、現在のカルチャに準拠した書式付き <see cref="T:System.String" /> 値。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo" />が表す日付を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo" /> が表す <see cref="T:System.DateTime" /> 値。</value>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" /> は <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> の１日を表します。このプロパティによって、この日の <see cref="T:System.DateTime" /> 値を取得できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.HolidayName">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> で定義された <see cref="!:GrapeCity.Windows.InputMan.IHoliday" /> の <see cref="!:GrapeCity.Windows.InputMan.IHoliday.HolidayName" /> 値を取得します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> で定義された <see cref="!:GrapeCity.Windows.InputMan.IHoliday" /> の <see cref="!:GrapeCity.Windows.InputMan.IHoliday.HolidayName" /> プロパティの値。</value>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" />で休日が定義されていない場合、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.HolidayName" /> は <see langword="null" />になります。 </para>
        <para> ユーザーは<see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" /> のスタイルとテンプレートをカスタマイズして、この <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.HolidayName" nolink="true" /> を <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" nolink="true" />のツールチップに表示できます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.HolidaySettingName">
      <summary><see cref="!:GrapeCity.Windows.InputMan.HolidaySettingBase.HolidaySettingName" /> で定義された <see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" /> の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> 値を取得します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> で定義された <see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" /> の <see cref="!:GrapeCity.Windows.InputMan.HolidaySettingBase.HolidaySettingName" /> 値。</value>
      <remarks>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" />で休日設定が定義されていない場合、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.HolidaySettingName" /> は <see langword="null" /> になります。</para>
        <para> ユーザーは <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" /> のスタイルとテンプレートをカスタマイズして、休日設定ごとに異なる視覚効果を適用できます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsBlackedOut">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" />が選択できないかどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が選択できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsForceWorkday">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedWorkday" />として定義されているかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> として定義されている場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedWorkday" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsHighlighted">
      <summary>この日が強調表示されているかどうかを示す値を取得します。</summary>
      <value>
        日が強調表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsHoliday">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedHoliday" />、<see cref="!:GrapeCity.Windows.InputMan.DayType.Holiday" />、<see cref="!:GrapeCity.Windows.InputMan.DayType.OverriddenHoliday" /> のいずれかとして定義されているかどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedHoliday" />、<see cref="!:GrapeCity.Windows.InputMan.DayType.Holiday" />、<see cref="!:GrapeCity.Windows.InputMan.DayType.OverriddenHoliday" /> のいずれかとして定義されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.WeeklyHoliday" /> として定義されている場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsHoliday" /> は <see langword="false" /> になり、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsWeeklyHoliday" /> が <see langword="true" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsOverrideHoliday">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.OverriddenHoliday" />として定義されているかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> として定義されている場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.OverriddenHoliday" />。それ以外の場合は <see langword="false" />。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.OverriddenHoliday" /> として定義されている場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsOverrideHoliday" /> は <see langword="true" /> になり、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsHoliday" /> も <see langword="true" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsSelected">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" />が選択されているかどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsToday">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が <b>Today</b> かどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が <b>Today</b> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsTrailing">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" />が隣接日かどうかを示す値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が隣接日の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>たとえば、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> に 1998 年２月が表示されている場合、1998 年２月１日の前の７日と 1998 年２月 28 日の後の７日は隣接日です。このような日を表す <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" /> の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsTrailing" /> は <see langword="true" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsWeeklyHoliday">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.WeeklyHoliday" />として定義されているかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> として定義されている場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.WeeklyHoliday" />。それ以外の場合は <see langword="false" />。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Date" /> が <see cref="!:GrapeCity.Windows.InputMan.DayType.WeeklyHoliday" /> として定義されている場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsHoliday" /> は <see langword="false" /> になり、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.IsWeeklyHoliday" /> が <see langword="true" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo.Text">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo" />の表示に使用される、現在のカルチャに準拠した書式付き <see cref="T:System.String" /> 値を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo" />の表示に使用される、現在のカルチャに準拠した書式付き <see cref="T:System.String" /> 。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition" /> クラスを表します。</summary>
      <remarks>この条件は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" /> で機能します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" nolink="true" /> に <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition" /> を追加したときは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition.DayOfWeek" /> プロパティのみがチェックされ、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition.WeekInMonth" /> プロパティは無視されます。</remarks>
      <example> 次のサンプルは、Xamlで <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> を使用して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector" /> の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalendar.xaml" region="StyleSelector_001" /></example>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition.DayOfWeek">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition" />をチェックする曜日を取得または設定します。</summary>
      <value>曜日。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition.WeekInMonth">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekCondition" />をチェックする月の週を取得または設定します。</summary>
      <value>月の週。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday">
      <summary>曜日規則によって設定された年次休日を表します。</summary>
      <remarks>
        <para>曜日規則は、この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> の休日である日を定義する月、週、および曜日で構成されます。</para>
        <para> たとえば、１月の第１週目の水曜日に <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" nolink="true" /> を定義するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.DayOfWeek" /> を <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.Wednesday" /> に、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.WeekInMonth" /> を <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.FirstWeek" /> に、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.Month" /> を <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.January" /> に、それぞれ設定します。  </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks,GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks)">
      <summary>指定した曜日規則を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="month">月を示す <see cref="!:GrapeCity.Windows.InputMan.Months">Months</see> 列挙値。</param>
      <param name="weekInMonth">月の第 X 曜日を示す <see cref="!:GrapeCity.Windows.InputMan.Weeks">Weeks</see> 列挙値。</param>
      <param name="dayOfWeek">曜日を示す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks">DayOfWeeks</see> 列挙値。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="month" /> が <see cref="!:GrapeCity.Windows.InputMan.Months" /> で定義されていません。<paramref name="weekInMonth" /> が <see cref="!:GrapeCity.Windows.InputMan.Weeks" /> で定義されていません。<paramref name="dayOfWeek" /> が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks" /> で定義されていません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.#ctor(System.String,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks,GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks)">
      <summary>指定した曜日規則を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">DayOfWeekHoliday の名前を示す<see cref="T:System.String" />値。</param>
      <param name="month">月を示す <see cref="!:GrapeCity.Windows.InputMan.Months">Months</see> 列挙値。</param>
      <param name="weekInMonth">月の第 X 曜日を示す <see cref="!:GrapeCity.Windows.InputMan.Weeks">Weeks</see> 列挙値。</param>
      <param name="dayOfWeek">曜日を示す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks">DayOfWeeks</see> 列挙値。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="month" /> が <see cref="!:GrapeCity.Windows.InputMan.Months" /> で定義されていません。<paramref name="weekInMonth" /> が <see cref="!:GrapeCity.Windows.InputMan.Weeks" /> で定義されていません。<paramref name="dayOfWeek" /> が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks" /> で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.DayOfWeek">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> が定義された曜日を取得または設定します。</summary>
      <value>曜日を示す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks">DayOfWeeks</see> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks.None">DayOfWeeks.None</see> です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> 設定値が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks" /> で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.HolidayName">
      <summary>DayOfWeekHoliday の名前を取得または設定します。</summary>
      <value>DayOfWeekHoliday の名前。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.IsYearly">
      <summary>この休日の実装が毎年適用されるかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が毎年適用される場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> は年次休日なので、このプロパティは常に <see langword="true" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.Month">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> が定義された月を取得または設定します。</summary>
      <value>月を示す <see cref="!:GrapeCity.Windows.InputMan.Months" /> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.Months.None">Months.None</see> です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> 設定値が <see cref="!:GrapeCity.Windows.InputMan.Months" /> で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.WeekInMonth">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> が定義された月の第 X 曜日を取得または設定します。</summary>
      <value>月の第 X 曜日を表す <see cref="!:GrapeCity.Windows.InputMan.Weeks">Weeks</see> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.Weeks.None">Weeks.None</see> です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> 設定値が <see cref="!:GrapeCity.Windows.InputMan.Weeks" /> で定義されていません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.Clone">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.IsDefined(System.DateTime)">
      <summary>指定した日付が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" /> かどうかを示す値を取得します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>
        日付が <see langword="true" /> の場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeekHoliday.TypeOfDay(System.DateTime)">
      <summary>指定した日付の日のタイプを返します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime">DateTime</see> 値。</param>
      <returns>日のタイプを表す <see cref="!:GrapeCity.Windows.InputMan.DayType">DayType</see> 列挙体。</returns>
      <remarks>このメソッドは、日付が曜日指定の休日の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.Holiday">DayType.Holiday</see> を返し、それ以外の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.Normal">DayType.Normal</see> を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DisplayField">
      <summary>コントロールがキーボードフォーカスを失ったときに表示される基本表示単位を表します。このクラスは<see langword="abstract" />であるため、初期化できません。</summary>
      <remarks>
        <see cref="!:GrapeCity.Windows.InputMan.Fields.Primitives.DisplayField" /> は、コントロールがキーボードフォーカスを失ったときに表示されます。ユーザーはさまざまな書式を設定し、コントロールの現在の値に基づいて異なるテキストを表示できます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DisplayField.Text">
      <summary>表示フィールドに関連付けられたテキストを取得します。</summary>
      <value>表示フィールドの内容を示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DisplayField.Focus">
      <summary>この要素へのフォーカスの設定を試みます。</summary>
      <returns>この要素にフォーカスを設定できた場合は true。フォーカスを設定できなかった場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DisplayField.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DisplayField.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" />のいずれかの依存関係プロパティの有効値が更新されるたびに呼び出されます。変更が発生した具体的な依存関係プロパティが引数パラメーターで報告されます。<see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティと変更前後の値を含むイベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DisplayField.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>コントロールのテンプレートが変更されたときに呼び出されます。</summary>
      <param name="oldTemplate">古いテンプレート。</param>
      <param name="newTemplate">新しいテンプレート。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownButton">
      <summary>マウスのクリックを処理して編集コントロールのドロップダウンウィンドウを開く <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownButton" /> を表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Pressed</td>
            <td><see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CheckStates</td>
            <td>Checked</td>
            <td><see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CheckStates</td>
            <td>Unchecked</td>
            <td><see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CheckStates</td>
            <td>Indeterminate</td>
            <td><see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" nolink="true" /> が <see langword="null" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>FocusStates</td>
            <td>Focused</td>
            <td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>FocusStates</td>
            <td>Unfocused</td>
            <td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownButton.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownButton.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Mouse.MouseDown" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。このイベントデータは、押されたマウスボタンに関する詳細と Handled 状態を報告します。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownButton.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <param name="e" />
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownButton.OnToggle">
      <summary>切り替え動作を実行するために <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> メソッドによって呼び出されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownCalendarEditElement">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.DateTimeCellType" />のドロップダウン要素を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownCalendarEditElement.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownCalendarEditElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> および <see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> のドロップダウン子コントロールをホストする <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AllowResizeProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AllowResize" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AllowsTransparencyProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AllowsTransparency" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.ChildProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Child" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.CustomPopupPlacementCallbackProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.CustomPopupPlacementCallback" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.DropDownValueProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.DropDownValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.HorizontalOffsetProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.HorizontalOffset" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.IsOpenProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.IsOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Placement" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementRectangleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementRectangle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTargetProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTarget" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PopupAnimationProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PopupAnimation" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.ShowShadowProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.ShowShadow" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.StaysOpenProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.StaysOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.SubmittedEvent">
      <summary><see cref="E:GrapeCity.Windows.InputMan.Primitives.DropDownWindow.Submitted" /> 添付イベントを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.TargetElementValueProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.TargetElementValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.VerticalOffsetProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.VerticalOffset" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AllowResize">
      <summary>UI による <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> のサイズ変更を許可するかどうかを示す <see cref="T:System.Boolean" /> 値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        UI による <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> のサイズ変更を許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>UI によるサイズ変更は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Child" /> が <see langword="null" /> 参照以外に設定されている場合にのみサポートされます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AllowsTransparency">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> に透明な内容を格納できるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> に透明な内容を格納できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> コントロールに透明な内容を格納できるのは、アプリケーションが完全信頼で実行される場合だけです。完全信頼で実行されるアプリケーションはシステムリソース全体にアクセスでき、通常はローカルシステムにインストールされます。詳細については、「セキュリティ（WPF）」を参照してください。</para>
        <para>Popup が XAML ブラウザーアプリケーション（XBAP）でホストされている場合、このプロパティは true に設定できません。</para>
        <para>完全信頼で実行されていないアプリケーションで <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AllowsTransparency" /> プロパティが <see langword="true" /> に設定されている場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AllowsTransparency" nolink="true" /> プロパティ値は <see langword="false" /> に変更されます。ブラウザーでホストされているアプリケーションは、完全信頼で実行されていないアプリケーションの一例です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Child">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> の内容を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> コントロールの内容を表す <see cref="T:System.Windows.UIElement" />。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.CustomPopupPlacementCallback">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> を配置するデリゲートハンドラメソッドを取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> コントロールの配置情報を提供する <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> デリゲートメソッド。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.DropDownValue">
      <summary>ドロップダウン子コントロールの値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウン子コントロールの値。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.DropDownValue" /> プロパティは、ドロップダウン子コントロールの値を同期するために存在します。このプロパティは、テンプレート内のデータ連結によってドロップダウン子コントロールのプロパティに接続されます。<see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> コントロールのテンプレートでは <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.SelectedDate">GcDropDownCalendar.SelectedDate</see> プロパティに連結され、<see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> コントロールのテンプレートでは <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalculator.Value">GcDropDownCalculator.Value</see> プロパティに連結されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.HorizontalOffset">
      <summary>ターゲットの基点とポップアップの配置点との間の水平距離を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ターゲットの基点とポップアップの配置点との間の水平距離。既定値は 0 です。</value>
      <remarks>ポップアップの配置は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTarget" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementRectangle" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Placement" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.HorizontalOffset" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.VerticalOffset" /> の各プロパティを設定して指定できます。詳細については、「ポップアップの配置動作」を参照してください。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.IsOpen">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> が表示されているかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        このインスタンスが開いている場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>コントロールがその既定スタイルの一部として <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> を使用する場合は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.IsOpen" /> プロパティをそのコントロールのプロパティに連結します。たとえば、<see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> の <see cref="!:GrapeCity.Windows.InputMan.GcDateTime.IsDropDownOpen" /> プロパティを <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.IsOpen" nolink="true" /> プロパティに連結できます。これにより、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> が表示されるときの制御に関するロジックが簡略化されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.LogicalChildren">
      <summary>この要素の論理上の子要素の列挙子を取得します。</summary>
      <value>この要素の論理上の子要素の <see cref="T:System.Collections.IEnumerator" />。</value>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> に内容を追加すると、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> がその内容の論理上の親になります。同様に、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> の内容は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> の論理上の子であると考えられます。子内容は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> コントロールを含むビジュアルツリーには追加されません。その代わりに、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.IsOpen" /> が <see langword="true" /> に設定されると、子内容は、独自のビジュアルツリーを持つ別のウィンドウに描画されます。</para>
<para>また、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.IsOpen" nolink="true" /> が <see langword="true" /> に設定されると、その内容がホスト <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールに追加され、このコントロールが同時にこの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> の論理上の子になります。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Placement">
      <summary>Popup コントロールが開くときの方向を取得または設定し、Popup コントロールが画面の境界と重なる場合のコントロールの動作を指定します。これは依存関係プロパティです。</summary>
      <value>Popup コントロールが開くときの方向を決定し、コントロールが画面の境界に対してどのように動作するかを指定する <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 列挙値。既定値は Bottom です。</value>
      <remarks>
        <para>ポップアップの配置は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTarget" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementRectangle" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Placement" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.HorizontalOffset" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.VerticalOffset" /> の各プロパティを設定して指定できます。詳細については、「ポップアップの配置動作」を参照してください。</para>
        <para><see cref="P:System.Windows.SystemParameters.MenuDropAlignment" /> プロパティが true の場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Placement" nolink="true" /> を <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Left" /> または <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Right" /> に設定すると、ドロップダウンの位置が反対になります。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Placement" nolink="true" /> が <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Left" nolink="true" /> に設定された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> は、その左端が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTarget" nolink="true" /> の右端に揃い、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Placement" nolink="true" /> が <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Right" nolink="true" /> に設定された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> は、その右端が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTarget" nolink="true" /> の左端に揃います。  </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementRectangle">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> コントロールが開いたときにコントロールを配置する基準となる四角形を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> コントロールの配置に使用される四角形。既定値は <see cref="P:System.Windows.Rect.Empty" /> です。</value>
      <remarks>ポップアップの配置は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTarget" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementRectangle" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Placement" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.HorizontalOffset" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.VerticalOffset" /> の各プロパティを設定して指定できます。詳細については、「ポップアップの配置動作」を参照してください。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTarget">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> コントロールが開いたときにコントロールを配置する基準となる要素を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> の論理上の親である <see cref="T:System.Windows.UIElement" />。既定値は <see langword="null" /> です。</value>
      <remarks>ポップアップの配置は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTarget" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementRectangle" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Placement" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.HorizontalOffset" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.VerticalOffset" /> の各プロパティを設定して指定できます。詳細については、「ポップアップの配置動作」を参照してください。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PopupAnimation">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> を開くとき、および閉じるときのアニメーションを取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> の開閉時のアニメーションを定義する <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> 列挙値。既定値は None です。</value>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AllowsTransparency" /> プロパティが true に設定されている場合にのみアニメーション表示できます。そのためには、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> コントロールを作成するアプリケーションが完全信頼で実行されている必要があります。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTarget" /> がアニメーション表示される場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> はアニメーション表示されません。
参照 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.ShowShadow">
      <summary>ドロップダウンウィンドウに影を表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ドロップダウンウィンドウに影を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>ドロップシャドウ効果は、<see cref="P:System.Windows.SystemParameters.DropShadow">SystemParameters.DropShadow</see> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AllowsTransparency" /> プロパティが <see langword="true" /> に設定されている場合に表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.StaysOpen">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> コントロールがフォーカスを失ったときにこのコントロールが閉じるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        Popup コントロールがフォーカスを失ったときにこのコントロールが閉じる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.StaysOpen" /> プロパティが <see langword="true" /> に設定されている場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.IsOpen" /> プロパティを <see langword="false" /> に設定することによって明示的に閉じられない限り、開いたままになります。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.StaysOpen" nolink="true" /> が <see langword="false" /> の場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> コントロールはすべてのマウスおよびキーボードイベントを途中受信し、これらのイベントのいずれかが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" nolink="true" /> コントロールの外側で発生したかどうかを判断します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.SubmitCommand">
      <summary>ドロップダウン子コントロールの値をサブミットするようドロップダウン子コントロールに要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.SubmitCommand" /> コマンドを表します。</summary>
      <value>要求されたコマンド。</value>
      <remarks>
        <para>このコマンドは、ドロップダウン子コントロールが無効なときには実行できません。</para>
        <para>このコマンドは <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> によってネイティブにサポートされており、既定のキージェスチャは <b>Enter</b> です。このコマンドは <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalculator" /> によってネイティブにサポートされていますが、既定のキージェスチャはありません。  </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.TargetElementValue">
      <summary>ターゲット要素の値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ターゲット要素の値。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.TargetElementValue" /> プロパティは、ドロップダウンターゲットの値を同期するために存在します。このプロパティは、テンプレート内のデータ連結によってドロップダウンターゲットのプロパティに接続されます。<see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> コントロールのテンプレートでは <see cref="!:GrapeCity.Windows.InputMan.GcDateTime.Value">GcDateTime.Value</see> プロパティに連結され、<see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> コントロールのテンプレートでは <see cref="!:GrapeCity.Windows.InputMan.GcNumber.Value">GcNumber.Value</see> プロパティに連結されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.VerticalOffset">
      <summary>ターゲットの基点とポップアップの配置点との間の垂直距離を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ターゲットの基点とポップアップの配置点との間の垂直距離。ターゲットの基点とポップアップの配置点の詳細については、「ポップアップの配置動作」を参照してください。既定値は 0 です。</value>
      <remarks>ポップアップの配置は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementTarget" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.PlacementRectangle" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.Placement" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.HorizontalOffset" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.VerticalOffset" /> の各プロパティを設定して指定できます。詳細については、「ポップアップの配置動作」を参照してください。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.AddSubmittedHandler(System.Windows.DependencyObject,GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubmittedEventHandler)">
      <summary><see cref="E:GrapeCity.Windows.InputMan.Primitives.DropDownWindow.Submitted" /> 添付イベントのハンドラを追加します。</summary>
      <param name="element">
        このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">イベントハンドラ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.MeasureOverride(System.Windows.Size)">
      <summary>派生クラスでオーバーライドされた場合、子要素に必要なレイアウトのサイズを測定し、<see cref="T:System.Windows.FrameworkElement" /> 派生クラスのサイズを決定します。</summary>
      <param name="availableSize">この要素が子要素に与えることができる使用可能なサイズ。値として無限大を指定し、この要素があらゆるコンテンツにサイズを合わせられるようにすることができます。</param>
      <returns>子要素のサイズの計算に基づいて、この要素のレイアウト時に必要と判断されたサイズ。</returns>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow" /> は常に (0, 0) のサイズを返します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" />のいずれかの依存関係プロパティの有効値が更新されるたびに呼び出されます。変更が発生した具体的な依存関係プロパティが引数パラメーターで報告されます。<see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティと変更前後の値を含むイベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DropDownWindow.RemoveSubmittedHandler(System.Windows.DependencyObject,GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubmittedEventHandler)">
      <summary><see cref="E:GrapeCity.Windows.InputMan.Primitives.DropDownWindow.Submitted" /> 添付イベントのハンドラを削除します。</summary>
      <param name="element">
        このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">イベントハンドラ。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase">
      <summary>テキストエディタコントロールの基本クラスを表します。このクラスは <see langword="abstract" /> で初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.CaretBrushProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.CaretBrush" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.DisabledBackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.DisabledBackground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.DisabledForegroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.DisabledForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.EditModeProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.EditMode" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.EditStatusChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.EditStatusChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.ExitOnLeftRightKeyProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.ExitOnLeftRightKey" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.HideSelectionProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.HideSelection" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.InvalidInputEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.InvalidInput" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsModifiedChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsModifiedChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsModifiedProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsModified" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsOverwriteProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsOverwrite" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsReadOnlyCaretVisibleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsReadOnlyCaretVisible" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsReadOnlyProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsReadOnly" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.KeyExitEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.KeyExit" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionBrushProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionBrush" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionOpacityProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionOpacity" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
      <remarks>このイベントはテキストが変更されたときに発生します。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextDecorationsProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextDecorations" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Text" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.CanUndo">
      <summary>コントロールでの直前の操作を元に戻せるかどうかを示す値を取得します。</summary>
      <value>
        このインスタンスで直前の操作を元に戻せる場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>このメソッドが <see langword="true" /> を返す場合は、<see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Undo" /> メソッドを呼び出して、コントロールで最後に実行された操作を元に戻すことができます。</remarks>
      <seealso cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Undo" />
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.CaretBrush">
      <summary>エディタコントロールのキャレットの描画に使用されるブラシを取得または設定します。 これは依存関係プロパティです。</summary>
      <value>エディタコントロールのキャレットの描画に使用される <see cref="T:System.Windows.Media.Brush" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.CaretIndex">
      <summary>キャレットの挿入位置のインデックスを取得または設定します。</summary>
      <value>キャレットの挿入位置を示す 0 から始まるインデックス。</value>
      <remarks>
        <para>このプロパティを取得すると、キャレットの現在の挿入位置のインデックスが返されます。 このプロパティを設定すると、指定した挿入位置にキャレットが移動します。</para>
        <para>挿入位置は文字の間か要素タグの間のどちらかです。  </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.DisabledBackground">
      <summary>コントロールが無効な状態のときの背景を表すブラシを取得または設定します。</summary>
      <value>コントロールが無効な状態のときに背景の塗りつぶしに使用されるブラシ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.DisabledForeground">
      <summary>コントロールが無効な状態のときの前景を表すブラシを取得または設定します。</summary>
      <value>コントロールが無効な状態のときに前景の塗りつぶしに使用されるブラシ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.EditMode">
      <summary>コントロールの編集モードを取得または設定します。</summary>
      <value>このコントロールの編集モードを示す <see cref="!:GrapeCity.Windows.InputMan.EditMode" /> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.EditMode.Insert" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.ExitOnLeftRightKey">
      <summary>左右のどちらかの方向キーを押したときにフォーカスが前または次のタブオーダーのコントロールに自動的に移動するかどうかを取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.ExitOnLeftRightKey" /> 列挙値の１つ。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.ExitOnLeftRightKey.None" /> です。</value>
      <remarks>このプロパティの値は、入力フォーカスを次のコントロールに移動できるキーを示します。 キャレットがこのコントロールの最後の文字にあるときに［→］キーを押すと、このコントロールからフォーカスが離れます。 キャレットがこのコントロールの最初の文字の前にあるときに［←］キーを押すと、このコントロールからフォーカスが離れます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.HideSelection">
      <summary>コントロールにフォーカスがないときに、選択されている項目を強調表示されたままにしておくかどうかを示す値を取得または設定します。</summary>
      <value>
        選択されている項目が強調表示されない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="true" /> です。</value>
      <remarks>このプロパティを使用すると、他のフォームやダイアログボックス（スペルチェックのダイアログボックスなど）にフォーカスがあるときにも、コントロールのテキストを強調表示しておくことができます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsModified">
      <summary>コントロールが作成された後、またはコントロールの内容が最後に設定された後に、ユーザーがコントロールを変更したかどうかを示す値を取得または設定します。</summary>
      <value>
        ユーザーがコントロールを変更した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティを使用すると、ユーザーがコントロールの内容を変更したかどうかを確認できます。また、このプロパティをコードで設定して、アプリケーションによってコントロールに変更が加えられたことを示すこともできます。検証メソッドやデータ保存メソッドでこのプロパティを使用してコントロールが変更されたかどうかを確認すれば、変更された内容を検証または保存できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsOverwrite">
      <summary>コントロールの現在の編集ステータスを取得します。</summary>
      <value>
        現在の編集ステータスが上書きの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsOverwrite" /> プロパティは、このコントロールの編集モードを示します。［Insert］キーを押すとこの値が変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsReadOnly">
      <summary>このコントロールが読み取り専用かどうかを示す値を取得または設定します。</summary>
      <value>
        コントロールが読み取り専用の場合は <see langword="true" /> 。それ以外の場合は <see langword="false" />。<br />　既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティを <see langword="true" /> に設定すると、実行時にユーザーがコントロールの内容を変更できなくなります。このプロパティが <see langword="true" /> に設定されている場合でも、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Text" /> プロパティの値をコードで設定することは可能です。<see cref="P:System.Windows.UIElement.IsEnabled" /> プロパティによってコントロールを無効にする代わりにこの機能を使用することで、内容をコピーしたりツールチップを表示したりすることが可能となります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsReadOnlyCaretVisible">
      <summary>読み取り専用のエディタコントロールにキャレットが表示されるかどうかを示す値を取得または設定します。 これは依存関係プロパティです。</summary>
      <value>
        読み取り専用のエディタコントロールにキャレットが表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.IsReadOnly" /> が <see langword="true" /> の場合でも、ユーザーはテキストを選択してコピーできます。<see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.IsReadOnlyCaretVisible" /> プロパティも <see langword="true" /> に設定されている場合は、エディタコントロールにキーボードフォーカスがあるときにキャレットがエディタコントロールに表示されます。<see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.IsReadOnly" nolink="true" /> が <see langword="false" /> の場合、<see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.IsReadOnlyCaretVisible" nolink="true" /> プロパティは無効になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectedText">
      <summary>コントロールで現在選択されているテキストを示す値を取得または設定します。</summary>
      <value>コントロールで現在選択されているテキストを表す文字列。<br />既定値は <see langword="string.Empty">string.Empty</see> です。</value>
      <remarks>このプロパティにテキストを代入すると、コントロールで現在選択されているテキストを変更できます。コントロールでテキストが選択されていない場合、このプロパティは <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Text" /> プロパティの現在のキャレット位置に新しい値を挿入します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionBrush">
      <summary>選択されているテキストを強調表示するブラシを取得または設定します。 これは依存関係プロパティです。</summary>
      <value>選択されているテキストを強調表示する <see cref="T:System.Windows.Media.Brush" />。</value>
      <remarks>選択したテキストを強調表示するブラシを指定するには、<see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionBrush" /> プロパティと <see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionOpacity" /> プロパティを設定します。<see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionOpacity" nolink="true" /> プロパティは、<see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionBrush" nolink="true" /> の不透明度を指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionLength">
      <summary>コントロールで選択されている文字数を取得または設定します。</summary>
      <value>コントロールで選択されている文字数。<br /> 既定値は 0 です。</value>
      <remarks>このプロパティを使用すると、選択されたテキストに対して操作を実行する前に、コントロールで文字が選択されているかどうかを判断できます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionLength" /> プロパティの値がコントロールのテキストの文字数を超える値に設定されている場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionLength" nolink="true" /> プロパティの値は、コントロール内のテキスト全体の長さから <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionStart" /> プロパティの値を引いた数に設定されます（<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionStart" nolink="true" /> プロパティに値が指定されている場合）。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException"> 指定された値が 0 未満です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionOpacity">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionBrush" /> の不透明度係数を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionBrush" /> の不透明度。既定値は 0.4 です。</value>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionOpacity" /> が０に設定されている場合、<see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionBrush" /> は透明になり、見えません。If <see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionOpacity" nolink="true" /> が 1.0 以上に設定されている場合、<see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionBrush" nolink="true" /> は不透明になり、選択したテキストが見えなくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionStart">
      <summary>選択する最初の文字の位置を示す数値を取得または設定します。</summary>
      <value>選択する最初の文字の位置を示す数値。<br /> 既定値は 0 です。</value>
      <remarks>コントロールでテキストが選択されていない場合、このプロパティは新しいテキストの挿入位置を示します。このプロパティがコントロール内のテキストの長さを超えた位置に設定されている場合、開始位置は最後の文字の後ろになります。コントロールでテキストが選択されているときにこのプロパティを変更すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionLength" /> プロパティの値が小さくなる場合があります。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionStart" /> プロパティで示された位置より後ろにあるコントロール内の残りのテキストが<b> SelectionLength </b>プロパティの値未満の場合、<b>SelectionLength </b>プロパティの値は自動的に小さくなります。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionStart" nolink="true" /> プロパティの値によって、<b>SelectionLength </b>プロパティの値が大きくなることはありません。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException"> 指定された値が 0 未満です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Text">
      <summary>このコントロールに関連付けられたテキストを取得または設定します。これは依存関係プロパティです。</summary>
      <value>コントロールに表示されるテキスト。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Text" /> プロパティは、このコントロールに表示される文字列値を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextDecorations">
      <summary>テキストボックスに適用する文字装飾を取得します。これは依存関係プロパティです。</summary>
      <value>編集に適用する文字装飾を含む <see cref="T:System.Windows.TextDecorationCollection" /> コレクション。 既定値は <see langword="null" /> です（文字装飾は適用されません）。</value>
      <remarks><see cref="T:System.Windows.TextDecoration" /> オブジェクトはテキストに追加できる視覚的な装飾です。 文字装飾には、下線、ベースライン、取り消し線、上線の 4 種類があります。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.AppendText(System.String)">
      <summary>編集コントロールの現在のテキストの末尾にテキストを追加します。</summary>
      <param name="textData">編集コントロールの現在の内容に追加するテキスト。</param>
      <remarks>連結演算子（+）を使用して <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Text" /> プロパティにテキストを連結する代わりに、このメソッドを使用してコントロールの既存のテキストにテキストを追加できます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.BeginInit">
      <summary>この要素の初期化プロセスを開始するときに呼び出されます。</summary>
      <exception cref="T:System.InvalidOperationException"> <see cref="M:System.Windows.FrameworkElement.BeginInit" /> が入れ子で呼び出されました。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Clear">
      <summary>コントロールのすべてのテキストをクリアします。</summary>
      <remarks>このメソッドを使用すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Text" /> プロパティに空の文字列を代入せずに、コントロールの内容を削除できます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.ClearUndo">
      <summary>コントロールの Undo バッファーから一番最近の操作に関する情報をクリアします。</summary>
      <remarks>このメソッドを使用すると、アプリケーションの状態に基づいて、元に戻す操作が繰り返されないようにすることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Copy">
      <summary>コントロールで現在選択されているテキストを <see cref="T:System.Windows.Clipboard" /> にコピーします。</summary>
      <remarks>コピー操作を行うと、選択したテキストが <see cref="T:System.Windows.Clipboard" /> にコピーされます。その際、選択したテキストはコントロールから削除されません。これと類似した <see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Cut" /> メソッドは、現在の選択内容を <see cref="T:System.Windows.Clipboard" nolink="true" /> に移動し、選択したテキストをコントロールから削除します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Cut">
      <summary>コントロールで現在選択されているテキストを削除し、それを <see cref="T:System.Windows.Clipboard" /> にコピーします。</summary>
      <remarks>切り取り操作を行うと、現在の選択内容がコントロールから削除されて <see cref="T:System.Windows.Clipboard" /> にコピーされます。その際、選択したテキストはコントロールから削除されます。これと類似した <see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Copy" /> メソッドは、現在の選択内容を <see cref="T:System.Windows.Clipboard" nolink="true" /> にコピーしますが、選択したテキストはコントロールから削除されません。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.EndInit">
      <summary>要素の初期化プロセスが終了するときに呼び出されます。</summary>
      <exception cref="T:System.InvalidOperationException">
        要素に対してまだ <see cref="M:System.Windows.FrameworkElement.EndInit" /> が呼び出されていないときに <see cref="M:System.Windows.FrameworkElement.BeginInit" /> が呼び出されました。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Finalize">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase" /> がガベジ コレクションにより収集される前に、そのオブジェクトがリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnEditStatusChanged(System.Windows.RoutedEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.EditStatusChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnEditStatusChanged(System.Windows.RoutedEventArgs)" /> メソッドを使用すると、デリゲートを結び付けずに派生クラスでイベントを処理することもできます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意：</b><para />派生クラスで <see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnEditStatusChanged(System.Windows.RoutedEventArgs)" nolink="true" /> をオーバーライドする場合は、登録されたデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnEditStatusChanged(System.Windows.RoutedEventArgs)" nolink="true" /> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnInitialized(System.EventArgs)">
      <summary><see cref="E:System.Windows.FrameworkElement.Initialized" /> ベントを発生させます。このメソッドは、<see cref="P:System.Windows.FrameworkElement.IsInitialized" /> が内部で <see langword="true" /> に設定されるたびに呼び出されます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnInvalidInput(System.Windows.RoutedEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.InvalidInput" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnInvalidInput</b> メソッドを使用すると、デリゲートを結び付けずに派生クラスでイベントを処理することもできます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意：</b><para />派生クラスで <b>OnInvalidInput</b> をオーバーライドする場合は、登録されたデリゲートがイベントを受け取ることができるように、基本クラスの <b>OnInvalidInput</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnIsActiveChanged(System.Windows.RoutedEventArgs)">
      <summary>未処理の <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActiveChanged" />イベントがこの要素で発生したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnIsModifiedChanged(System.Windows.RoutedEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsModifiedChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnModifiedChanged</b> メソッドを使用すると、デリゲートを結び付けずに派生クラスでイベントを処理することもできます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意：</b><para />派生クラスで <b>OnModifiedChanged</b> をオーバーライドする場合は、登録されたデリゲートがイベントを受け取ることができるように、基本クラスの <b>OnModifiedChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnKeyExit(GrapeCity.Wpf.SpreadSheet.CellType.Editors.KeyExitEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.KeyExit" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnKeyExit</b> メソッドを使用すると、デリゲートを結び付けずに派生クラスでイベントを処理することもできます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意：</b><para />派生クラスで <b>OnKeyExit</b> をオーバーライドする場合は、登録されたデリゲートがイベントを受け取ることができるように、基本クラスの <b>OnKeyExit</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" />のいずれかの依存関係プロパティの有効値が更新されるたびに呼び出されます。変更が発生した具体的な依存関係プロパティが引数パラメーターで報告されます。<see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティと変更前後の値を含むイベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Mouse.QueryCursor" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.QueryCursorEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnSelectionChanged(System.Windows.RoutedEventArgs)">
      <summary>キャレットまたは現在の選択の位置が変更されたときに呼び出されます。</summary>
      <param name="e"><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionChanged" />イベントに関連付けられた引数。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>コントロールのテンプレートが変更されたときに呼び出されます。</summary>
      <param name="oldTemplate">古いテンプレート。</param>
      <param name="newTemplate">新しいテンプレート。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>このコントロールの内容が変更されたときに発生します。</summary>
      <param name="e"><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextChanged" />イベントに関連付けられた引数。</param>
      <remarks>このメソッドは <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextChanged" /> イベントを発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnTextChanging(GrapeCity.Wpf.SpreadSheet.CellType.Editors.TextChangingEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextChanging" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.TextChangingEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnTextChanging</b> メソッドを使用すると、デリゲートを結び付けずに派生クラスでイベントを処理することもできます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意：</b><para />派生クラスで <b>OnTextChanging</b> をオーバーライドする場合は、登録されたデリゲートがイベントを受け取ることができるように、基本クラスの <b>OnTextChanging</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.TextCompositionEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Paste">
      <summary><see cref="T:System.Windows.Clipboard" /> の内容を、コントロールで現在選択されている部分に貼り付けます。</summary>
      <remarks><see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Paste" /> メソッドは、現在 <see cref="T:System.Windows.Clipboard" /> にテキストが格納されている場合にのみ、テキストをコントロールに貼り付けます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.ScrollToCaret">
      <summary>コントロールの内容を現在のキャレット位置にスクロールします。</summary>
      <remarks>このメソッドを使用すると、キャレットがコントロールの表示領域に来るまで、コントロールの内容をスクロールできます。キャレットがコントロールの表示領域より下に位置する場合、<b>ScrollToCaret</b> メソッドは、キャレットがコントロールの下端に表示されるまで、コントロールの内容をスクロールします。キャレットがコントロールの表示領域より上に位置する場合は、キャレットがコントロールの上端に表示されるまで、コントロールの内容をスクロールします。このメソッドを複数行コントロールで使用すると、現在のテキスト入力位置がコントロールの表示領域に確実に表示されます。<note>このメソッドは、コントロールにフォーカスがない場合、またはキャレットがすでにコントロールの表示領域内にある場合には、機能しません。  </note></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Select(System.Int32,System.Int32)">
      <summary>コントロール内のテキストの範囲を選択します。</summary>
      <param name="start">テキストボックス内で選択するテキストの最初の文字の位置。</param>
      <param name="length">選択する文字数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> または <paramref name="length" /> が負の値です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectAll">
      <summary>コントロールのすべてのテキストを選択します。</summary>
      <remarks>このメソッドを使用すると、コントロール内のすべてのテキストを選択できます。このメソッドを <see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Cut" /> メソッド（コントロールでテキストが選択されている必要がある）と組み合わせて使用すると、コントロールの内容全体を切り取って <see cref="T:System.Windows.Clipboard" /> に貼り付けることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Undo">
      <summary>コントロールでの最後の編集操作を元に戻します。</summary>
      <remarks>このメソッドは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.CanUndo" /> プロパティが <see langword="true" /> を返す場合に、コントロールで最後に実行された <see cref="T:System.Windows.Clipboard" /> 操作またはテキスト変更操作を元に戻します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.EditStatusChanged">
      <summary>編集スタイルが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsOverwrite" /> プロパティが変更されるか、ユーザーが［Insert］キーを押した場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.InvalidInput">
      <summary>無効な文字が入力されたときに発生します。</summary>
      <remarks>このイベントは、キーボードまたは <see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Paste" /> メソッドによって無効な文字が入力された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsModifiedChanged">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsModified" /> プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsModified" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.KeyExit">
      <summary>特定のキーを入力したことでコントロールがフォーカスを失ったときに発生します。</summary>
      <remarks>このイベントは、キーボード操作によってコントロールからフォーカスが移動した場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionChanged">
      <summary>テキストの選択が変更されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextChanged">
      <summary>テキスト要素の内容が変更されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextChanging">
      <summary>コントロールのテキストが変更される直前に発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Text" /> プロパティが変更される前に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditorPresenter">
      <summary><see cref="T:GrapeCity.Windows.InputMan.GcTextBox" /> の内容を表示します。このクラスは継承できません。</summary>
      <remarks>テキストボックス内容のコンテナーを追加するコントロールのビジュアルツリー内の場所を指定するために、<see cref="T:GrapeCity.Windows.InputMan.GcTextBox" /> のテンプレートで使用されます。</remarks>
      <example> 次のサンプルは <see cref="T:GrapeCity.Windows.InputMan.GcTextBox" /> のテンプレートをカスタマイズする方法を説明します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcTextBox.xaml" region="TextBox_001" /></example>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditorPresenter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditorPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ErasSectionHandler">
      <summary>年号構成セクションへのアクセスを処理します。</summary>
      <remarks>このクラスは、ユーザーが指定した年号名を定義するファイルにアクセスする手段を提供します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ErasSectionHandler.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ErasSectionHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ErasSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>構成セクション値のコレクションを返します。</summary>
      <param name="parent">対応する親構成セクションの構成設定。</param>
      <param name="configContext">ASP.NET 構成システムから呼び出されたときの HttpConfigurationContext。 それ以外の場合、このパラメーターは予約され、null 参照になります。</param>
      <param name="section">構成ファイルからの構成情報を含む XmlNode。 構成セクションの XML コンテンツに直接アクセスできるようにします。</param>
      <returns>構成セクションのディレクティブを含む Hashtable。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl" /> での基本的な入力および表示単位を表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
      <remarks>このクラスは、単一セグメントの表示機能を実装します。また、いくつかの入力動作もユーザーに公開されます。これはユーザー向けの最終インタフェースです。フィールドが作成されると、そのフィールドのセグメントと値モジュールが作成され、続いてセグメントと値モジュールの構成が行われます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.EnterEvent">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.Primitives.Field.Enter" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActiveProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.Primitives.Field.IsActive" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompletedProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.Primitives.Field.IsCompleted" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmptyProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.Primitives.Field.IsEmpty" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFullProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.Primitives.Field.IsFull" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.LeaveEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.Leave" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive">
      <summary>フィールドがアクティブかどうかを取得します。これは依存関係プロパティです。</summary>
      <value>
        現在のフィールドがアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>このフィールドが入力フォーカスを受け取った場合、このプロパティは <see langword="true" /> に設定されます。それ以外の場合は <see langword="false" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted">
      <summary>フィールドへの入力が十分であるかどうかを取得します。これは依存関係プロパティです。</summary>
      <value>
        フィールドへの入力が十分である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>このプロパティが <see langword="true" /> の場合は、現在の入力テキストの長さが最低限必要な長さに達していることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty">
      <summary>フィールドに何も入力されておらず、フィールドが空白かどうかを取得します。これは依存関係プロパティです。</summary>
      <value>
        フィールドに何も入力されておらず、入力が受け入れられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>このプロパティが <see langword="true" /> の場合は、テキストが入力されていないことを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull">
      <summary>フィールドが限度いっぱいまで入力されているかどうかを取得します。これは依存関係プロパティです。</summary>
      <value>
        フィールドが限度いっぱいまで入力されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>このプロパティが <see langword="true" /> の場合は、現在の入力テキストの長さが入力可能な長さの上限に達していることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.SelectionLength">
      <summary>現在選択されている文字数を示す値を取得します。</summary>
      <value>現在選択されている文字数を示す <see cref="T:System.Int32" /> 値。</value>
      <remarks>
        <note>このプロパティは <see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionLength" /> と関連しています。ユーザーはコントロールの選択メソッドを通じてこのプロパティを変更できます。 </note>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.SelectionStart">
      <summary>現在の選択の開始位置を示す文字インデックスを取得します。</summary>
      <value>現在の選択の開始位置を示す <see cref="T:System.Int32" /> 値。</value>
      <remarks>
        <note>このプロパティは <see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionStart" /> と関連しています。ユーザーはコントロールの選択メソッドを通じてこのプロパティを変更できます。 </note>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.Text">
      <summary>フィールドの現在のテキスト内容を取得します。</summary>
      <value>フィールドのテキストを示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field" /> の現在の内容を格納します。これはそのオーナーのステータスによる影響を受けます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.BeginInit">
      <summary>この要素の初期化プロセスを開始します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.EndInit">
      <summary>要素の初期化プロセスが完了したことを示します。</summary>
      <exception cref="T:System.InvalidOperationException">
        要素に対してまだ <see cref="M:System.Windows.FrameworkElement.BeginInit" /> が呼び出されていないときに <see cref="M:System.Windows.FrameworkElement.EndInit" /> が呼び出されました。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.Focus">
      <summary>この要素へのフォーカスの設定を試みます。</summary>
      <returns>
        この要素にフォーカスを設定できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <remarks>
        <r>IMWPFコントロールの構造として、現在のフィールドをアクティブにするために Focus メソッドを呼び出すことは避けてください。別の方法を試してください。</r>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.OnEnter(System.Windows.RoutedEventArgs)">
      <summary>キャレットがこのフィールドに入るときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
      <remarks>このメソッドは <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.Enter" /> イベントを発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.OnInitialized(System.EventArgs)">
      <summary><see cref="E:System.Windows.FrameworkElement.Initialized" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.RoutedEventArgs" />。</param>
      <remarks>このメソッドは、<see cref="P:System.Windows.FrameworkElement.IsInitialized" /> が内部で <see langword="true" /> に設定されるたびに呼び出されます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.OnLeave(System.Windows.RoutedEventArgs)">
      <summary>キャレットがこのフィールドから出るときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>このメソッドは <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.Leave" /> イベントを発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>いずれかの依存関係プロパティが変更され、描画範囲の測定や描画処理を実行させる必要があるときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>コントロールのテンプレートが変更されたときに呼び出されます。</summary>
      <param name="oldTemplate">古いテンプレート。</param>
      <param name="newTemplate">新しいテンプレート。</param>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.Enter">
      <summary>入力フォーカスが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field" /> に入ると発生します。</summary>
      <remarks>このイベントは、入力フォーカスが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field" /> に移動したときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.Leave">
      <summary>入力フォーカスが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field" /> から離れると発生します。</summary>
      <remarks>このイベントは、入力フォーカスが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field" /> から移動したときに発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldContentPresenter">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.Primitives.Field" /> のコンテナーを提供する <see cref="!:GrapeCity.Windows.InputMan.Fields.FieldContentPresenter" /> を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldContentPresenter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldContentPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl" /> に関連するフィールド編集コマンドのセットを提供します。このクラスは <see langword="static class" /> であるため、継承や初期化できません。</summary>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" /> クラスのコマンドと、その他のコマンドライブラリクラス（<see cref="T:System.Windows.Input.ApplicationCommands" /> など）のコマンドは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl" /> のプログラマがよく使用する一連の一般的なコマンドを表すためのものです。これらのコマンドは <see cref="T:System.Windows.Input.RoutedCommand" /> のインスタンスを表すだけであり、コマンドの実装ロジックは表しません。実装ロジックは、<see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドに連結されます。たとえば、IM コントロールで <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveLeftByField" /> コマンドを実行する場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveLeftByField" nolink="true" /> コマンドを実行するロジックは IM コントロールによって提供されない場合があるため、IM コントロールでのコマンドの処理方法を決定するロジックを記述するのはアプリケーション作成者の役割になります。</para>
        <para>IMの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl" nolink="true" /> コントロール（<see cref="T:GrapeCity.Windows.InputMan.GcDateTime" />、<see cref="T:GrapeCity.Windows.InputMan.GcMask" />、<see cref="T:GrapeCity.Windows.InputMan.GcNumber" />）では、コマンドライブラリに含まれる多くのコマンドの実装ロジックを提供しています。</para>
        <list type="table">
          <listheader>
            <term>フィールド編集コマンド</term>
            <description>既定のキージェスチャ</description>
          </listheader>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.Clear">Clear</see>
            </term>
            <description>F4</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.DeleteNextCharacter">DeleteNextCharacter</see>
            </term>
            <description>Delete</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.DeleteNextCharactersByField">DeleteNextCharactersByField</see>
            </term>
            <description>Ctrl+Delete</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.DeletePreviousCharacter">DeletePreviousCharacter</see>
            </term>
            <description>Backspace</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.DeletePreviousCharactersByField">DeletePreviousCharactersByField</see>
            </term>
            <description>Ctrl+Backspace</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveLeftByCharacter">MoveLeftByCharacter</see>
            </term>
            <description>Left</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveLeftByField" nolink="true">MoveLeftByField</see>
            </term>
            <description>Ctrl+Left</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveRightByCharacter">MoveRightByCharacter</see>
            </term>
            <description>Right</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveRightByField">MoveRightByField</see>
            </term>
            <description>Ctrl+Right</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveToFirst">MoveToFirst</see>
            </term>
            <description>Home</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveToFirstFieldStart">MoveToFirstFieldStart</see>
            </term>
            <description>Ctrl+Home</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveToLast">MoveToLast</see>
            </term>
            <description>End</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveToLastFieldEnd">MoveToLastFieldEnd</see>
            </term>
            <description>Ctrl+End</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.NextField">NextField</see>
            </term>
            <description>-</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.NextFieldThenControl">NextFieldThenControl</see>
            </term>
            <description>-</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.PreviousField">PreviousField</see>
            </term>
            <description>-</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.PreviousFieldThenControl">PreviousFieldThenControl</see>
            </term>
            <description>-</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectLeftByCharacter">SelectLeftByCharacter</see>
            </term>
            <description>Shift+Left</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectLeftByField">SelectLeftByField</see>
            </term>
            <description>Shift+Ctrl+Left</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectRightByCharacter">SelectRightByCharacter</see>
            </term>
            <description>Shift+Right</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectRightByField">SelectRightByField</see>
            </term>
            <description>Shift+Ctrl+Right</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectToFirst">SelectToFirst</see>
            </term>
            <description>Shift+Home</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectToFirstFieldStart">SelectToFirstFieldStart</see>
            </term>
            <description>Shift+Ctrl+Home</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectToLast">SelectToLast</see>
            </term>
            <description>Shift+End</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectToLastFieldEnd">SelectToLastFieldEnd</see>
            </term>
            <description>Shift+Ctrl+End</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SpinDown">SpinDown</see>
            </term>
            <description>Down</description>
          </item>
          <item>
            <term>
              <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SpinUp">SpinUp</see>
            </term>
            <description>Up</description>
          </item>
        </list>
      </remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Windows.InputMan.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Windows.InputMan.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:GrapeCity.Windows.InputMan.GcDateTime" nolink="true" /> がコマンドのターゲットである <see cref="T:GrapeCity.Windows.InputMan.GcDateTime" /> で定義されたコマンドに対して <see cref="T:System.Windows.Input.KeyBinding" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Windows.InputMan.GcDateTime" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Windows.InputMan.GcDateTime" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_002" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.Clear">
      <summary>すべての文字を削除するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.Clear" /> コマンドを表します。</summary>
      <remarks>このコマンドは、<see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl" /> をクリアする意図があることを示します。このコマンドの既定のキージェスチャは <see cref="F:System.Windows.Input.Key.F2" /> です（<see cref="T:GrapeCity.Windows.InputMan.GcNumber" /> を除く）。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.DeleteNextCharacter">
      <summary>キャレットの後ろの文字を削除するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.DeleteNextCharacter" /> コマンドを表します。</summary>
      <remarks>このコマンドは、現在のキャレット位置の次の文字を削除する操作を示します。 ある特定のオブジェクトにこのコマンドの実装が存在するとは限りません。多くの場合、このコマンドの実装はアプリケーション開発者が記述する必要があります。 このコマンドの既定のキージェスチャーは Delete です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.DeleteNextCharactersByField">
      <summary>現在の編集可能フィールド上のキャレットの後ろにあるテキストをすべて削除するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.DeleteNextCharactersByField" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Ctrl+Delete です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.DeletePreviousCharacter">
      <summary>キャレットの前の文字を削除するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.DeletePreviousCharacter" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Backspace です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.DeletePreviousCharactersByField">
      <summary>現在のフィールド上のキャレットの前にある文字をすべて削除するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.DeletePreviousCharactersByField" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Ctrl+Backspace です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveLeftByCharacter">
      <summary>キャレットをすべての編集可能フィールド上の前の文字に移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.MoveLeftByCharacter" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Left です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveLeftByField">
      <summary>キャレットを前の編集可能フィールドの先頭に移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.MoveLeftByField" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Ctrl+Left です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveRightByCharacter">
      <summary>キャレットを編集可能フィールド上の次の文字に移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.MoveRightByCharacter" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Right です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveRightByField">
      <summary>キャレットを次の編集可能フィールドの先頭に移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.MoveRightByField" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Ctrl+Right です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveToFirst">
      <summary>キャレットを最初の編集可能フィールドの先頭に移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.MoveToFirst" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Home です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveToFirstFieldStart">
      <summary>キャレットを最初のフィールドの先頭に移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.MoveToFirstFieldStart" /> コマンドを表します。</summary>
      <remarks>
        <para>このコマンドの既定のキージェスチャは Ctrl+Home です。 </para>
        <para>たとえば <see cref="T:GrapeCity.Windows.InputMan.GcMask" /> では、<see cref="T:GcMask" /> の書式が "--\D{3}-\D{4}--" の場合、このコマンドを実行するとキャレットインデックスがリテラルフィールドの先頭位置に変更されますが、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveToFirst" /> を実行するとキャレットインデックスが最初のパターンフィールドの先頭位置に変更されます。  </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveToLast">
      <summary>キャレットを最後の編集可能フィールドの末尾に移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.MoveToLast" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは End です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.MoveToLastFieldEnd">
      <summary>キャレットを最後のフィールドの末尾に移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.MoveToLastFieldEnd" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Ctrl+End です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.NextField">
      <summary>キャレットをすべての編集可能フィールド上の次のフィールドに移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.NextField" /> コマンドを表します。</summary>
      <remarks>要求されたコマンド。このコマンドの既定のキージェスチャーは Ctrl+Right です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.NextFieldThenControl">
      <summary>キャレットをすべての編集可能フィールド上の次のフィールドに移動した後、コントロールからフォーカスを移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.NextFieldThenControl" /> コマンドを表します。</summary>
      <remarks>現在のキャレットインデックスが最後の位置に達すると、キーボードフォーカスが次のコントロールにジャンプします。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.PreviousField">
      <summary>キャレットをすべての編集可能フィールド上の前のフィールドに移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.PreviousField" /> コマンドを表します。</summary>
      <remarks>要求されたコマンド。このコマンドの既定のキージェスチャーは Ctrl+Left です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.PreviousFieldThenControl">
      <summary>キャレットをすべての編集可能フィールド上の前のフィールドに移動した後、コントロールからフォーカスを移動するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.PreviousFieldThenControl" /> コマンドを表します。</summary>
      <remarks>現在の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionStart" /> が先頭位置に達している場合は、前のコントロールにジャンプします。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectLeftByCharacter">
      <summary>現在の選択範囲を前の文字まで拡張するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SelectLeftByCharacter" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Shift+Left です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectLeftByField">
      <summary>現在の選択範囲をフィールドの開始位置まで拡張するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SelectLeftByField" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Ctrl+Shift+Left です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectRightByCharacter">
      <summary>現在の選択範囲を次の文字まで拡張するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SelectRightByCharacter" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Shift+Right です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectRightByField">
      <summary>現在の選択範囲をフィールドの終了位置まで拡張するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SelectRightByField" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Ctrl+Shift+Right です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectToFirst">
      <summary>現在の選択範囲を最初の編集可能フィールドの先頭まで拡張するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SelectToFirst" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Shift+Home です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectToFirstFieldStart">
      <summary>現在の選択範囲を最初のフィールドの先頭まで拡張するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SelectToFirstFieldStart" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Ctrl+Shift+Home です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectToLast">
      <summary>現在の選択範囲を最後の編集可能フィールドの末尾まで拡張するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SelectToLast" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Shift+End です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SelectToLastFieldEnd">
      <summary>現在の選択範囲を最後のフィールドの末尾まで拡張するよう要求する <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SelectToLastFieldEnd" /> コマンドを表します。</summary>
      <remarks>このコマンドの既定のキージェスチャーは Ctrl+Shift+End です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SpinDown">
      <summary>値を減らすよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SpinDown" /> コマンドを表します。</summary>
      <remarks>要求されたコマンド。このコマンドの既定のキージェスチャーは Down です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SpinUp">
      <summary>値を増やすよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands.SpinUp" /> コマンドを表します。</summary>
      <remarks>要求されたコマンド。このコマンドの既定のキージェスチャーは Up です。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl">
      <summary>書式付きテキスト用エディタの基本クラスを表します。このクラスは <see langword="abstract" />で初期化できません。</summary>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl" /> は、フィールドをサポートするコントロールの基本クラスです。</para>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl" nolink="true" /> は、内容をコピーまたは切り取るときにリテラルを含めるかどうかを制御するため、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.ClipContent" /> を実装しています。また、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkNull" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkDisplayNull" /> もサポートします。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.AllowSpinProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.AllowSpin" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.ClipContentProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.ClipContent" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsCompletedProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.IsCompleted" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsEmptyProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.IsEmpty" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsFullProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.IsFull" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinAllowWrapProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.SpinAllowWrap" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinDownEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinDown" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinIncrementProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.SpinIncrement" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinUpEvent">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.SpinUp" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkDisplayNullForegroundProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.WatermarkDisplayNullForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkDisplayNullProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.WatermarkDisplayNull" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkNullForegroundProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.WatermarkNullForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkNullProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl.WatermarkNull" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.AllowSpin">
      <summary>スピン動作が有効かどうかを示す値を取得または設定します。</summary>
      <value><see cref="T:System.Boolean" /> 値。スピン動作を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.ClipContent">
      <summary>データがクリップボードにどのようにコピーされるかを取得または設定します。これは依存関係プロパティです。</summary>
      <value>クリップボードへのデータのコピー方法を指定する <see cref="!:GrapeCity.Windows.InputMan.ClipContent" /> 列挙値の１つ。</value>
      <exception cref="T:System.ArgumentException"> 値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.ClipContent" /> で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.DisplayText">
      <summary>コントロールの表示テキストを取得します。</summary>
      <value>表示テキストを示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsCompleted">
      <summary>エディタへの入力が十分であるかどうかを取得します。これは依存関係プロパティです。</summary>
      <value>
        エディタへの入力が十分である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsEmpty">
      <summary>エディタに何も入力されておらず、フィールドが空白かどうかを取得します。これは依存関係プロパティです。</summary>
      <value>
        <see langword="true" /> は、エディタに何も入力されていないことを示します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsFull" /> が <see langword="true" /> でない場合は、さらに入力を受け入れることができます。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsFull">
      <summary>エディタが限度いっぱいまで入力されているかどうかを取得します。これは依存関係プロパティです。</summary>
      <value>
        エディタが限度いっぱいまで入力されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.LogicalChildren">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl" /> の論理上の子を取得します。</summary>
      <remarks>
        <note>このプロパティをオーバーライドした場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl" /> の論理ツリーが変更されます。これは依存関係プロパティの継承に影響を与えます。 </note>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinAllowWrap">
      <summary>スピン操作時に上限または下限に達したときに折り返すかどうかを取得または設定します。</summary>
      <value><see cref="T:System.Boolean" /> 値。スピン操作を折り返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinIncrement">
      <summary>1 回のスピン動作の増分オフセットを取得または設定します。</summary>
      <value>スピン動作の増分オフセットを示す <see cref="T:System.Int32" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkDisplayNull">
      <summary>値が <see langword="null" />で、なおかつセルが非編集時の、透かし表示テキストを取得または設定します。</summary>
      <value><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkDisplayNull" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値に無効なパターンまたは無効な文字が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkDisplayNullForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkDisplayNull" />が表示されるときの透かし表示テキストの前景を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkDisplayNullForeground" /> を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkNull">
      <summary>値が<see langword="null" />のときの透かしテキストを取得または設定します。</summary>
      <value><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkNull" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値に無効なパターンまたは無効な文字が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkNullForeground">
      <summary>値が<see langword="null" />のときの透かしテキストの前景を取得または設定します。</summary>
      <value><see cref="T:System.Windows.Media.Brush" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkNullForeground" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.DoSpinDown">
      <summary>スピンダウンを実行します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.DoSpinUp">
      <summary>スピンアップを実行します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.OnIsActiveChanged(System.Windows.RoutedEventArgs)">
      <summary>未処理の <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActiveChanged" />イベントがこの要素で発生したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Mouse.MouseDown" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。このイベントデータは、押されたマウスボタンに関する詳細と Handled 状態を報告します。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> ルーティングイベントがこの要素で発生したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。このイベントデータは、マウス左ボタンが押されたことを報告します。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Mouse.MouseMove" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>未処理の<see cref="E:System.Windows.Input.Mouse.MouseUp" /> ルーティングイベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。このイベントデータは、マウスボタンが離されたことを報告します。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.OnSpinDown(System.Windows.RoutedEventArgs)">
      <summary>スピンダウンアクションが発生したときに呼び出されます。</summary>
      <param name="e"><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinDown" />イベントに関連付けられた引数。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.OnSpinUp(System.Windows.RoutedEventArgs)">
      <summary>スピンアップアクションが発生したときに呼び出されます。</summary>
      <param name="e"><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinUp" />イベントに関連付けられた引数。</param>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinDown">
      <summary>スピンダウン時に発生します。</summary>
      <remarks>このイベントは、メソッドまたはユーザー操作によってスピンアップが行われたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinUp">
      <summary>スピンアップ時に発生します。</summary>
      <remarks>このイベントは、メソッドまたはユーザー操作によってスピンアップが行われたときに発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldSet">
      <summary>フィールドにアクセスするための基本クラスである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldSet" /> クラスを表します。このクラスは <see langword="abstract" /> で初期化できません。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsPresenter">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.Primitives.Field">Field</see> のコンテナーを追加するコントロールのビジュアルツリー内の場所を指定するために、フィールドコントロールのテンプレートで使用されます。このクラスは継承できません。</summary>
      <example> 次の例は、<see cref="!:GrapeCity.Windows.InputMan.Primitives.FieldsEditorControl" />の自己定義テンプレートを示します。これは、制御する2つのスプリットスピンボタンを追加します。 <code source="XmlCommentsSampleCode_XAML\FieldsEditorControl.xaml" region="Template for FieldsEditorControl" lang="xaml" Titile="Xaml Snippet" /></example>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsPresenter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday">
      <summary>曜日規則によって設定された、特定の年の臨時休業日を表します。</summary>
      <remarks>
        <para>曜日規則は、この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> の休日である日を定義する月、週、および曜日で構成されます。<b>Force</b> は、Year プロパティによって指定された特定の年に適用されることを意味します。</para>
        <para>たとえば、2009 年１月の第１週目の水曜日に <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" nolink="true" /> を定義するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.DayOfWeek" /> を <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.Wednesday" /> に、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.WeekInMonth" /> を <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.FirstWeek" /> に、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.Month" /> を <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.January" /> に、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.Year" nolink="true" /> を 2009 に、それぞれ設定します。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.#ctor(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks,GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks)">
      <summary>指定した曜日規則を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="year"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> の年を示す <see cref="T:System.Int32" /> 値。</param>
      <param name="month">月を示す <see cref="!:GrapeCity.Windows.InputMan.Months">Months</see> 列挙値。</param>
      <param name="weekInMonth">月の第 X 曜日を示す <see cref="!:GrapeCity.Windows.InputMan.Weeks">Weeks</see> 列挙値。</param>
      <param name="dayOfWeek">曜日を示す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks">DayOfWeeks</see> 列挙値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> が <see cref="F:System.DateTime.MinValue">DateTime.MinValue</see> の年（1）未満か、<see cref="F:System.DateTime.MaxValue">DateTime.MaxValue</see> の年（9999）を超えています。 </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="month" /> が <see cref="!:GrapeCity.Windows.InputMan.Months" /> で定義されていません。<paramref name="weekInMonth" /> が <see cref="!:GrapeCity.Windows.InputMan.Weeks" /> で定義されていません。<paramref name="dayOfWeek" /> が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks" /> で定義されていません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.#ctor(System.String,System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks,GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks)">
      <summary>指定した曜日規則を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">ForceDayOfWeekHolidayの名前を示す <see cref="T:System.String" /> 値。</param>
      <param name="year"><see cref="T:System.Int32" /> の年を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> 値。</param>
      <param name="month">月を示す <see cref="!:GrapeCity.Windows.InputMan.Months">Months</see> 列挙値。</param>
      <param name="weekInMonth">月の第 X 曜日を示す <see cref="!:GrapeCity.Windows.InputMan.Weeks">Weeks</see> 列挙値。</param>
      <param name="dayOfWeek">曜日を示す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks">DayOfWeeks</see> 列挙値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> が <see cref="F:System.DateTime.MinValue">DateTime.MinValue</see> の年（1）未満か、<see cref="F:System.DateTime.MaxValue">DateTime.MaxValue</see> の年（9999）を超えています。 </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="month" /> が <see cref="!:GrapeCity.Windows.InputMan.Months" /> で定義されていません。<paramref name="weekInMonth" /> が <see cref="!:GrapeCity.Windows.InputMan.Weeks" /> で定義されていません。<paramref name="dayOfWeek" /> が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks" /> で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.DayOfWeek">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> が定義された曜日を取得または設定します。</summary>
      <value>曜日を示す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks">DayOfWeeks</see> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks.None">DayOfWeeks.None</see> です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> 設定値が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks" /> で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.HolidayName">
      <summary>DayOfWeekHoliday の名前を取得または設定します。</summary>
      <value>DayOfWeekHoliday の名前。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.IsYearly">
      <summary>この休日の実装が毎年適用されるかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が毎年適用される場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday" />。それ以外の場合は <see langword="false" />。</value>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> は特定の年によって定義されるため、年次休日ではありません。したがって、このプロパティは常に <see langword="false" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.Month">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> が定義された月を取得または設定します。</summary>
      <value>月を示す <see cref="!:GrapeCity.Windows.InputMan.Months" /> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.Months.None">Months.None</see> です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> 設定値が <see cref="!:GrapeCity.Windows.InputMan.Months" /> で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.WeekInMonth">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> が定義された月の第 X 曜日を取得または設定します。</summary>
      <value>月の第 X 曜日を表す <see cref="!:GrapeCity.Windows.InputMan.Weeks">Weeks</see> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.Weeks.None">Weeks.None</see> です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> 設定値が <see cref="!:GrapeCity.Windows.InputMan.Weeks" /> で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.Year">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> が定義された年を取得または設定します。</summary>
      <value>年を示す<see cref="T:System.Int32" />値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> 年が <see cref="F:System.DateTime.MinValue">DateTime.MinValue</see> の年（1）未満か、<see cref="F:System.DateTime.MaxValue">DateTime.MaxValue</see> の年（9999）を超えています。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.Clone">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.IsDefined(System.DateTime)">
      <summary>指定した日付が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" /> かどうかを示す値を取得します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>
        日付が <see langword="true" /> の場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekHoliday.TypeOfDay(System.DateTime)">
      <summary>指定した日付の日のタイプを返します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>日のタイプを表す <see cref="!:GrapeCity.Windows.InputMan.DayType">DayType</see> 列挙体。</returns>
      <remarks>このメソッドは、日付が曜日指定の休日の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedHoliday">DayType.ForcedHoliday</see> を返し、それ以外の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.Normal">DayType.Normal</see> を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday">
      <summary>曜日規則によって設定された、特定の年の臨時営業日を表します。</summary>
      <remarks>
        <para>曜日規則は、この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> の休日である日を定義する月、週、および曜日で構成されます。<b>Force</b> は、Year プロパティによって指定された特定の年に適用されることを意味します。</para>
        <para>たとえば、2009 年１月の第１週目の水曜日に <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" nolink="true" /> を定義するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.DayOfWeek" /> を <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.Wednesday" /> に、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.WeekInMonth" /> を <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.FirstWeek" /> に、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.Month" /> を <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.January" /> に、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.Year" /> を <see cref="T:System.Int32" /> に、それぞれ設定します。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.#ctor">
      <summary>指定した曜日規則を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.#ctor(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks,GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks)">
      <summary>指定した曜日規則を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="year"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> の年を示す <see cref="T:System.Int32" /> 値。</param>
      <param name="month">月を示す <see cref="!:GrapeCity.Windows.InputMan.Months">Months</see> 列挙値。</param>
      <param name="weekInMonth">月の第 X 曜日を示す <see cref="!:GrapeCity.Windows.InputMan.Weeks">Weeks</see> 列挙値。</param>
      <param name="dayOfWeek">曜日を示す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks">DayOfWeeks</see> 列挙値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> が <see cref="F:System.DateTime.MinValue">DateTime.MinValue</see> の年（1）未満か、<see cref="F:System.DateTime.MaxValue">DateTime.MaxValue</see> の年（9999）を超えています。 </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="month" /> が <see cref="!:GrapeCity.Windows.InputMan.Months" /> で定義されていません。<paramref name="weekInMonth" /> が <see cref="!:GrapeCity.Windows.InputMan.Weeks" /> で定義されていません。<paramref name="dayOfWeek" /> が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks" /> で定義されていません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.#ctor(System.String,System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months,GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks,GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks)">
      <summary>指定した曜日規則を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">ForceDayOfWeekWorkdayの名前を示す <see cref="T:System.String" /> 値。</param>
      <param name="year"><see cref="T:System.Int32" /> の年を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> 値。</param>
      <param name="month">月を示す <see cref="!:GrapeCity.Windows.InputMan.Months">Months</see> 列挙値。</param>
      <param name="weekInMonth">月の第 X 曜日を示す <see cref="!:GrapeCity.Windows.InputMan.Weeks">Weeks</see> 列挙値。</param>
      <param name="dayOfWeek">曜日を示す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks">DayOfWeeks</see> 列挙値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> が <see cref="F:System.DateTime.MinValue">DateTime.MinValue</see> の年（1）未満か、<see cref="F:System.DateTime.MaxValue">DateTime.MaxValue</see> の年（9999）を超えています。 </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="month" /> が <see cref="!:GrapeCity.Windows.InputMan.Months" /> で定義されていません。<paramref name="weekInMonth" /> が <see cref="!:GrapeCity.Windows.InputMan.Weeks" /> で定義されていません。<paramref name="dayOfWeek" /> が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks" /> で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.DayOfWeek">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> が定義された曜日を取得または設定します。</summary>
      <value>曜日を示す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks">DayOfWeeks</see> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.DayOfWeeks.None">DayOfWeeks.None</see> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.HolidayName">
      <summary>ForceDayOfWeekWorkday の名前を取得または設定します。</summary>
      <value>ForceDayOfWeekWorkday の名前。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.IsYearly">
      <summary>この営業日の実装が毎年適用されるかどうかを決定します。</summary>
      <value>
        この営業日の実装が毎年適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> は特定の年によって定義されるため、年次休日ではありません。したがって、このプロパティは常に <see langword="false" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.Month">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> が定義された月を取得または設定します。</summary>
      <value>月を示す <see cref="!:GrapeCity.Windows.InputMan.Months" /> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.Months.None">Months.None</see> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.WeekInMonth">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> が定義された月の第 X 曜日を取得または設定します。</summary>
      <value>月の第 X 曜日を表す <see cref="!:GrapeCity.Windows.InputMan.Weeks">Weeks</see> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.Weeks.None">Weeks.None</see> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.Year">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> が定義された年を取得または設定します。</summary>
      <value>年を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.Clone">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.IsDefined(System.DateTime)">
      <summary>指定した日付が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" /> かどうかを示す値を取得します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>
        日付が <see langword="true" /> の場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceDayOfWeekWorkday.TypeOfDay(System.DateTime)">
      <summary>指定した日付の日のタイプを返します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>日のタイプを表す <see cref="!:GrapeCity.Windows.InputMan.DayType">DayType</see> 列挙体。</returns>
      <remarks>このメソッドは、日付が曜日指定の休日の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedWorkday">DayType.ForcedWorkday</see> を返し、それ以外の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.Normal">DayType.Normal</see> を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday">
      <summary>正確に指定された日付に基づく、特定の年のみに適用される休日（臨時休業日）の実装。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.#ctor(System.DateTime)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dateTime">臨時休業日を表す <see cref="T:System.DateTime" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.#ctor(System.String,System.DateTime)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">臨時休業日の名前を示す <see cref="T:System.String" /> 値。</param>
      <param name="dateTime">臨時休業日を表す <see cref="T:System.DateTime" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.#ctor(System.DateTime,System.DateTime)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="startDate">臨時休業期間の開始日を表す <see cref="T:System.DateTime" /> 値。</param>
      <param name="endDate">臨時休業期間の終了日を表す <see cref="T:System.DateTime" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.#ctor(System.String,System.DateTime,System.DateTime)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">臨時休業日の名前を示す <see cref="T:System.String" /> 値。</param>
      <param name="startDate">臨時休業期間の開始日を表す <see cref="T:System.DateTime" /> 値。</param>
      <param name="endDate">臨時休業期間の終了日を表す <see cref="T:System.DateTime" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.End">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" />の終了日を取得または設定します。</summary>
      <value>臨時休業期間の終了日を表す日付を示す <see cref="T:System.DateTime" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.HolidayName">
      <summary>臨時休業日の名前を取得または設定します。</summary>
      <value>臨時休業の名前。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.IsYearly">
      <summary>この休日の実装が毎年適用されるかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が毎年適用される場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday" />。それ以外の場合は <see langword="false" />。</value>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" /> は特定の年によって定義されるため、年次休日ではありません。したがって、このプロパティは常に <see langword="false" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.Start">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" />の開始日を取得または設定します。</summary>
      <value>臨時休業期間の開始日を表す日付を示す <see cref="T:System.DateTime" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.Clone">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.IsDefined(System.DateTime)">
      <summary>指定した日付が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" /> かどうかを示す値を取得します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>
        日付が <see langword="true" /> の場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday.TypeOfDay(System.DateTime)">
      <summary>指定した日付の日のタイプを返します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>日のタイプを表す <see cref="!:GrapeCity.Windows.InputMan.DayType">DayType</see> 列挙体。</returns>
      <remarks>このメソッドは、日付が休日の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedHoliday">DayType.ForcedHoliday</see> を返し、それ以外の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.Normal">DayType.Normal</see> を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday">
      <summary>正確に指定された日付に基づく、特定の年のみに適用される営業日（臨時営業日）の実装。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.#ctor(System.DateTime)">
      <summary>指定したDateTimeを使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dateTime">臨時営業日を表す <see cref="T:System.DateTime" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.#ctor(System.String,System.DateTime)">
      <summary>指定したDateTimeを使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">臨時営業日の名前を示す <see cref="T:System.String" /> 値。</param>
      <param name="dateTime">臨時営業日を表す <see cref="T:System.DateTime" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.#ctor(System.DateTime,System.DateTime)">
      <summary>指定したDateTimeを使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="startDate">臨時営業期間の開始日を表す <see cref="T:System.DateTime" /> 値。</param>
      <param name="endDate">臨時営業期間の終了日を表す <see cref="T:System.DateTime" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.#ctor(System.String,System.DateTime,System.DateTime)">
      <summary>指定したDateTimeを使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">臨時営業日の名前を示す <see cref="T:System.String" /> 値。</param>
      <param name="startDate">臨時営業期間の開始日を表す <see cref="T:System.DateTime" /> 値。</param>
      <param name="endDate">臨時営業期間の終了日を表す <see cref="T:System.DateTime" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.End">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" />の終了日を取得または設定します。</summary>
      <value>臨時営業期間の終了日を表す日付を示す <see cref="T:System.DateTime" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.HolidayName">
      <summary>臨時営業日の名前を取得または設定します。</summary>
      <value>臨時営業日の名前。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.IsYearly">
      <summary>この休日の実装が毎年適用されるかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が毎年適用される場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday" />。それ以外の場合は <see langword="false" />。</value>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" /> は特定の年によって定義されるため、年次休日ではありません。したがって、このプロパティは常に <see langword="false" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.Start">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" />の開始日を取得または設定します。</summary>
      <value>臨時営業期間の開始日を表す日付を示す <see cref="T:System.DateTime" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.Clone">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.IsDefined(System.DateTime)">
      <summary>指定した日付が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" /> かどうかを示す値を取得します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>
        日付が <see langword="true" /> の場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceWorkday.TypeOfDay(System.DateTime)">
      <summary>指定した日付の日のタイプを返します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>日のタイプを表す <see cref="!:GrapeCity.Windows.InputMan.DayType">DayType</see> 列挙体。</returns>
      <remarks>このメソッドは、日付が休日の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.ForcedWorkday">DayType.ForcedWorkday</see> を返し、それ以外の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.Normal">DayType.Normal</see> を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox">
      <summary>テキストボックスと、ユーザーが一覧から項目を選択できるリストボックスを含むドロップダウンを組み合わせた選択コントロールを表します。</summary>
      <remarks>
        <para> テキストボックスには現在選択されている項目が表示されます。項目が選択されていない場合は空になります。 </para>
        <para> <see cref="T:System.Windows.UIElement" /> を継承する項目をコンボボックスに設定した場合、選択された項目はビジュアルツリーに１回だけ表示できます。これは、ある項目を選択するとその項目が選択ボックスに表示され、項目のドロップダウンリストには表示されなくなることを意味します。項目を選択解除すると、その項目はドロップダウンリストに再び表示されます。<see cref="T:System.Windows.UIElement" nolink="true" /> を継承しない項目は、選択ボックスとドロップダウンリストの両方に同時に表示されます。 </para>
        <para> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> には２種類のデータ項目表示モードがあり、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.UseMultipleColumn" /> プロパティによって表示モードを指定します。 </para>
        <para>
          <p>
            <b>列と項目</b>
          </p> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.UseMultipleColumn" nolink="true" /> を <see langword="true" /> に設定すると、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> のデータはカスタマイズ可能なグリッドに表示されます。  </para>
        <para>既定では、ユーザーが <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemsSource" /> または <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Items" /> プロパティを設定すると、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> コントロールは自動的に列が生成されます。生成される列の型は、<see langword="bool" /> プロパティに連結されている場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListCheckBoxColumn" />、<see langword="ImageSource" /> プロパティに連結されている場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListImageColumn" />、これら以外のプロパティの場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn" /> です。 </para>
        <para> 列を生成するかどうかに関わらず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Columns" /> コレクションを使用して実行時にプログラムからコントロールの列を追加、挿入、削除、変更できます。また、XAML で列を指定することも可能で、この場合は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoGenerateColumns" /> を false に設定します。独自の列を作成する場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn" /> 型やカスタム列型などの追加の列型を使用できます。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn" nolink="true" /> 型は、シンプルなカスタム列を簡単に作成する手段を提供します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn.SubItemTemplate" /> プロパティを使用して、表示用の内容テンプレートを指定できます。 </para>
        <para> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Items" nolink="true" /> または <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemsSource" nolink="true" /> に設定した場合は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn" /> 内のカスタマイズされた <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> を表示する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.SubItems" /> を作成する必要があります。 </para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.UseMultipleColumn" nolink="true" /> を <see langword="false" /> に設定すると、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> のデータ項目は既定の表現で表示されます。<br /><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> は、項目データを設定するための項目コンテナーとして <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase" /> を生成します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> を項目データとして定義した場合は、<see cref="P:System.Windows.Controls.ContentControl.Content">ListItem.Content</see>、または <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.SubItems" nolink="true" /> 内の最初の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" nolink="true" /> の <see cref="P:System.Windows.Controls.ContentControl.Content" nolink="true">SubItem.Content</see> をリスト項目として表示するため、生成された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase" nolink="true" /> にその Content がラップされます。 </para>
        <para> コンボボックスの選択された項目を取得するには <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItem" /> プロパティを使用し、選択された項目のインデックスを取得するには <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedIndex" /> プロパティを使用します。 </para>
        <para>
          <p>
            <b><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> コントロールのカスタマイズ</b>
          </p> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> に表示される各項目のスタイルは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemContainerStyle" /> プロパティを設定することで適用できます。<br />同じプロパティ設定を複数の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> コントロールに適用するには、Style プロパティを使用します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> の視覚的な構造および視覚的な動作を変更するには、既定のスタイルおよびテンプレートをコピーし、変更します。<br />このコントロールの依存関係プロパティは、コントロールの既定のスタイルによって設定される場合があります。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> の依存関係プロパティが既定のスタイルによって設定されている場合、アプリケーションで <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> が表示されたときにプロパティが既定値から変更される場合があります。  </para>
        <para>
          <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
          <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
            <tr>
              <th>VisualStateGroup 名</th>
              <th>VisualState 名</th>
              <th>説明</th>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Normal</td>
              <td>コントロールが通常状態のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Disabled</td>
              <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>MouseOver</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>ActiveDropDown</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" nolink="true" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsDropDownOpen" /> がどちらも <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>Active</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>Inactive</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>Valid</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidFocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidUnfocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
            </tr>
          </table>
        </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AllowDropDownOpenProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AllowDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AlternatingItemBackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AlternatingItemBackground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AlternationCountProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AlternationCount" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoGenerateColumnsProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoGenerateColumns" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoOpenDropDownProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoOpenDropDown" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoSelectProperty">
      <summary>入力した文字に一致するアイテムを自動的に選択するかどうかを示す値を取得または設定します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CanUserResizeColumnsProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CanUserResizeColumns" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CanUserSortColumnsProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CanUserSortColumns" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CheckOnClickProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CheckOnClick" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ContentPathProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ContentPath" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DisabledBackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DisabledBackground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DisabledForegroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DisabledForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownButtonStyleProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcComboBox.DropDownButtonStyle" /> 依存関係プロパティを示します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownButtonVisibilityProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcComboBox.DropDownButtonVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownControlStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownControlStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownWidthProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcComboBox.DropDownWidth" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownWindowStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownWindowStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EditBoxStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EditBoxStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EditableBackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EditableBackground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EditableTemplateProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EditableTemplate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ExitOnLeftRightKeyProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ExitOnLeftRightKey" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.FocusDropDownControlOnOpenProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.FocusDropDownControlOnOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.HorizontalGridLineBrushProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.HorizontalGridLineBrush" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.HorizontalGridLineStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.HorizontalGridLineStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsAutoSelectCaseSensitiveProperty">
      <summary>オートセレクト時にアイテムを選択するとき、大文字と小文字を区別するかどうかを示す値を取得または設定します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsDropDownOpenProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsEditableProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsEditable" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsReadOnlyProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsReadOnly" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsSelectableProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsSelectable" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsSelectionBoxHighlightedProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsSelectionBoxHighlighted" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsSynchronizedWithCurrentItemProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsSynchronizedWithCurrentItem" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemBackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemBackground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemCheckBoxVisibilityProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemCheckBoxVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemContainerStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemContainerStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemTemplateProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemTemplate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemsSourceProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemsSource" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.MaxDropDownHeightProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcComboBox.MaxDropDownHeight" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.MaxDropDownItemsProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcComboBox.MaxDropDownItems" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedIndexProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedIndex" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItemProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItem" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValuePathProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValuePath" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValueProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectionBoxItemProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectionBoxItem" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectionBoxItemTemplateProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectionBoxItemTemplate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectionChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectionChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SpinButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SpinButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SpinButtonVisibilityProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcComboBox.SpinButtonVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.StaysOpenOnEditProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.StaysOpenOnEdit" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.TextProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Text" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.UnEditableTemplateProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EditableTemplate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.UseMultipleColumnProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.UseMultipleColumn" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.VerticalGridLineBrushProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.VerticalGridLineBrush" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.VerticalGridLineStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.VerticalGridLineStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AllowDropDownOpen">
      <summary>ドロップダウンウィンドウを開けるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがドロップダウンウィンドウを開くことを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
      <remarks>ユーザーは <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AllowDropDownOpen" /> プロパティを使用して、ドロップダウンウィンドウを表示するかどうかを制御できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AlternatingItemBackground">
      <summary><b>AlternationIndex</b> が1であるドロップダウン項目の背景の描画に使用される<see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <value><b>AlternationIndex</b> が1であるドロップダウン項目の背景の描画に使用されるブラシ。</value>
      <remarks>コントロールのドロップダウン項目はすべて、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemBackground" /> プロパティを使用して背景が描画されます。ただし、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AlternatingItemBackground" /> プロパティの値が <see langword="null" /> でない場合は、その値によって、<b>AlternationIndex</b> が1であるドロップダウン項目の既定の背景値がオーバーライドされます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AlternationCount">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" />の交互項目コンテナーの数を取得または設定します。これにより、交互項目コンテナーに固有の外観を与えることができます。これは依存関係プロパティです。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AlternationCount" /> は、交互項目をサポートするためにドロップダウンコントロールに設定されます。</value>
      <example> 次のサンプルは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> を作成し、2つの <see cref="T:System.Windows.Controls.AlternationConverter" /> オブジェクトを使用して、項目の <see cref="P:System.Windows.Controls.Control.Background" /> と <see cref="P:System.Windows.Controls.Control.FontStyle" /> を代替します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcComboBox.xaml" region="ComboBox_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoGenerateColumns">
      <summary>カラムを自動生成するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        カラムを自動生成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
      <remarks>自動生成された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" /> が現在の ListColumns に追加されます。AutoGenerateColumns の値を true から false に変更すると、自動生成された ListColumns が削除されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoOpenDropDown">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" />がフォーカスを取得したときにドロップダウンウィンドウが自動的に表示されるかどうかを示す <see cref="T:System.Boolean" /> 値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウン可能なコントロールがフォーカスを受け取ったときにドロップダウンウィンドウが自動的に表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks><b>AutoOpenDropDown</b> が <see langword="true" /> で、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AllowDropDownOpen" /> も <see langword="true" /> であるときは、ドロップダウンウィンドウが自動的に表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoSelect">
      <summary>入力した文字に一致するアイテムを自動的に選択するかどうかを示す値を取得または設定します。</summary>
      <value>
        AutoSelectが有効な場合は<see langword="true" />。それ以外の場合は<see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CanUserResizeColumns">
      <summary>ユーザーがマウスを使用してカラムの幅を調整できるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがカラムのサイズを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <remarks>個々の列に対してこの動作を設定するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserResize" /> プロパティを設定します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserResize" nolink="true" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CanUserResizeColumns" /> プロパティが両方とも設定されている場合は、false の値が true の値より優先されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CanUserSortColumns">
      <summary>ユーザーがカラムヘッダをクリックしてカラムを並べ替えられるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがカラムを並べ替えられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>個々の列に対してこの動作を設定するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserSort" /> プロパティを設定します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserSort" nolink="true" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CanUserSortColumns" /> プロパティが両方とも設定されている場合は、false の値が true の値より優先されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CheckOnClick">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> をマウスでクリックしたときに <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.IsChecked" /> プロパティの値を変更するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        マウスのクリック操作によって <see langword="true" /> を変更する場合は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.IsChecked" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.CheckedItems">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.IsChecked" /> プロパティが <see langword="true" /> に設定されているすべての <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> を取得します。これは読み取り専用の依存関係プロパティです。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ClearCommand">
      <summary>すべてのテキストをクリアするよう <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> に要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ClearCommand" /> コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャーは <b>F2</b> です。</value>
      <remarks>
        <para>このコマンドは、<see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="true" /> で、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsReadOnly" /> が <see langword="false" /> の場合にのみ実行できます。</para>
        <para>このコマンドは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> によってネイティブにサポートされており、コマンドパラメーターは無視されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Columns">
      <summary>コントロールのすべてのカラムを含むコレクションを取得します。</summary>
      <value>コントロールの列。</value>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Columns" /> は、列の追加や削除、または列のプロパティの更新に使用します。</para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Columns" nolink="true" /> コレクションに含まれる各列は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> の１つの列を定義します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Columns" nolink="true" /> コレクションの列は <see cref="!:GrapeCity.Windows.InputMan.ListColumn" /> から派生している必要があります。</para>
        <para> 次の表は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" nolink="true" /> に用意されている３つの定義済み列型を示します。 <table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>列型</th><th>データ型</th></tr><tr><td><see cref="!:GrapeCity.Windows.InputMan.ListTextColumn" /></td><td>テキストの表示に使用されます。</td></tr><tr><td><see cref="!:GrapeCity.Windows.InputMan.ListCheckBoxColumn" /></td><td>ブール型データの表示に使用されます。</td></tr><tr><td><see cref="!:GrapeCity.Windows.InputMan.ListImageColumn" /></td><td>画像の表示に使用されます。</td></tr></table></para>
        <para>さらに、<see cref="!:GrapeCity.Windows.InputMan.ListTemplateColumn" /> を使用して独自のカスタム列を定義することもできます。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> を <see cref="P:System.Windows.Controls.ItemsControl.Items" /> または <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 設定した場合は、<see cref="!:GrapeCity.Windows.InputMan.ListSubItemColumn" /> 内の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> を表示するために <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.SubItems" /> が使用されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Columns" nolink="true" /> コレクションは、生成された列が含まれているかどうかに関わらず、実行時に変更できます。ただし、XAML で列を指定する場合は、<see cref="!:GrapeCity.Windows.InputMan.GcComboBox.AutoGenerateColumns" /> を true に設定しないでください。</para>
        <para> 複数の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Columns" nolink="true" /> の <see cref="!:GrapeCity.Windows.InputMan.GcComboBox" /> コレクションに、同じ列を追加することはできません。そうすると、<see cref="T:System.InvalidOperationException" /> が発生します。 </para>
      </remarks>
      <example> 次のサンプルコードは、XAMLで <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Columns" /> コレクションの作成方法を示します。 このサンプルは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> クラスで使用できるより大きなサンプルの一部です。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcComboBox.xaml" region="ComboBox_004" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ContentPath">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" />に表示されるプロパティの名前を示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ContentPath" /> では、ドット付きのパスを使用してプロパティのサブプロパティを参照できます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ContentPath" nolink="true" /> プロパティは、項目を表示するためにドロップダウンコントロールに設定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DisabledBackground">
      <summary>コントロールが無効な状態のときの背景を表すブラシを取得または設定します。</summary>
      <value>コントロールが無効な状態のときに背景の塗りつぶしに使用されるブラシ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DisabledForeground">
      <summary>コントロールが無効な状態のときの前景を表すブラシを取得または設定します。</summary>
      <value>コントロールが無効な状態のときに前景の塗りつぶしに使用されるブラシ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownButtonStyle">
      <summary>ドロップダウンボタンの描画に使用されるスタイルを取得または設定します。</summary>
      <value>ドロップダウンボタンのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
      <remarks>このプロパティによって、ドロップダウンボタンの表示設定、レイアウト、動作などを設定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownButtonVisibility">
      <summary>ドロップダウンボタンの <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウンボタンの表示設定を示す <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> 列挙体。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.ShowAlways" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownButtonVisibility" /> プロパティは、ドロップダウンボタンが常に表示されるか、コントロールがフォーカスを取得したときにのみ表示されるか、まったく表示されないかを決定します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownControlStyle">
      <summary>ドロップダウンコントロールの描画に使用されるスタイルを取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウンコントロールのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
      <remarks>このプロパティによって、ドロップダウンコントロールの表示設定、レイアウト、動作などを設定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownWidth">
      <summary>ドロップダウンウィンドウの幅を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウンウィンドウの幅（ピクセル単位）。既定値は <see cref="F:System.Double.NaN" /> で、ドロップダウンウィンドウの幅がコントロールの幅と同じになることを意味します。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownWindowStyle">
      <summary><see cref="T:System.Windows.Style" />の<see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" />に適用される <see cref="T:System.Windows.Style" />。</value>
      <remarks><see cref="T:System.Windows.Style" /> に適用される <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" />。この <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" nolink="true" /> によって、<see cref="T:System.Windows.Style" nolink="true" /> のサイズ、ドロップダウンアニメーション、ドロップダウン方向などのプロパティを設定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EditBoxStyle">
      <summary>編集ボックスの描画に使用されるスタイルを取得または設定します。これは依存関係プロパティです。</summary>
      <value>編集ボックスのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
      <remarks>このプロパティによって、編集ボックスの表示設定、レイアウト、動作などを設定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EditableBackground">
      <summary>GcComboBox.IsEditable が true のときのコントロールの背景を表すブラシを取得または設定します。</summary>
      <value>GcComboBox.IsEditable が true のときにコントロールの背景の塗りつぶしに使用されるブラシ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EditableTemplate">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsEditable" /> が <see langword="true" /> に設定されている場合に使用されるテンプレートを取得または設定します。これは依存関係プロパティです。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ExitOnLeftRightKey">
      <summary>左右のどちらかの方向キーを押したときにフォーカスが前または次のタブオーダーのコントロールに自動的に移動するかどうかを取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.ExitOnLeftRightKey" /> 列挙値の１つ。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.ExitOnLeftRightKey.None" /> です。</value>
      <remarks>このプロパティの値は、入力フォーカスを次のコントロールに移動できるキーを示します。 キャレットがこのコントロールの最後の文字にあるときに［→］キーを押すと、このコントロールからフォーカスが離れます。 キャレットがこのコントロールの最初の文字の前にあるときに［←］キーを押すと、このコントロールからフォーカスが離れます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.FocusDropDownControlOnOpen">
      <summary>ドロップダウンウィンドウが開いたときにドロップダウンリストボックスにフォーカスを設定するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ドロップダウンリストボックスにフォーカスを設定する場合は<see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsEditable" /> プロパティが <see langword="true" /> の場合にのみ有効です。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsEditable" nolink="true" /> が <see langword="false" /> の場合、ドロップダウンリストボックスは常にフォーカスを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.HorizontalGridLineBrush">
      <summary>水平グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value>グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.HorizontalGridLineStyle">
      <summary>各水平グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.InputMan.LineStyle" />列挙値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>各グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.InputMan.LineStyle" />列挙値。</value>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.InputMan.LineStyle" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsAutoSelectCaseSensitive">
      <summary>オートセレクト時にアイテムを選択するとき、大文字と小文字を区別するかどうかを示す値を取得または設定します。</summary>
      <value>
        大文字と小文字を区別する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsDropDownOpen">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" />のドロップダウンが現在開いているかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ドロップダウンが開いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AllowDropDownOpen" /> プロパティが <see langword="false" /> の場合は、このプロパティを <see langword="true" /> に設定しても、このプロパティは <see langword="false" /> のままになります。</para>
        <para>このプロパティを変更すると、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownOpened" /> または <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownClosed" /> イベントが発生します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsEditable">
      <summary>ユーザーが<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" />の値を編集を入力できるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <remarks>ユーザーが <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsEditable" /> プロパティを変更すると、XAML が再解析されてドロップダウンコントロールが別のインスタンスに変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsReadOnly">
      <summary>このコントロールが読み取り専用かどうかを示す値を取得または設定します。</summary>
      <value>
        コントロールが読み取り専用の場合は <see langword="true" /> 。それ以外の場合は <see langword="false" />。<br />　既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティを <see langword="true" /> に設定すると、実行時にユーザーがコントロールの内容を変更できなくなります。このプロパティが <see langword="true" /> に設定されている場合でも、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Text" /> プロパティの値をコードで設定することは可能です。<see cref="P:System.Windows.UIElement.IsEnabled" /> プロパティによってコントロールを無効にする代わりにこの機能を使用することで、内容をコピーしたりツールチップを表示したりすることが可能となります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsSelectable">
      <summary>項目を選択できるかどうかを示す値を取得または設定します。</summary>
      <value>
        項目を選択できる場合は<see langword="true" /> 。それ以外の場合は<see langword="false" />. <br /> 既定値は <see langword="true" />です。</value>
      <remarks>このプロパティを <see langword="true" /> に設定すると、実行時にユーザーがコントロールの項目を選択できます。このプロパティを <see langword="false" /> に設定すると、ユーザーがドロップダウンリストから項目を選択できなくなりますが、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedIndex" /> プロパティの値をコードで設定することは可能です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsSelectionBoxHighlighted">
      <summary>選択されている項目が強調表示されるかどうかを示す値を取得します。これは依存関係プロパティです。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsSynchronizedWithCurrentItem">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItem" /> を <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティ内の現在の項目と常に同期するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        <see langword="true" /> が現在の項目と常に同期する場合は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItem" />。<see langword="false" /> が現在の項目と同期しない場合は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItem" nolink="true" />。<see langword="null" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItem" nolink="true" /> を使用する場合にのみ、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> が現在の項目と同期する場合は <see cref="T:System.ComponentModel.ICollectionView" />。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemBackground">
      <summary><b>AlternationIndex</b> が0であるドロップダウン項目の背景の描画に使用される<see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <value><b>AlternationIndex</b> が0であるドロップダウン項目の背景の描画に使用されるブラシ。</value>
      <remarks>コントロールのドロップダウン項目はすべて、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemBackground" /> プロパティを使用して背景が描画されます。ただし、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AlternatingItemBackground" /> プロパティの値が <see langword="null" /> でない場合は、その値によって、<b>AlternationIndex</b> が0であるドロップダウン項目の既定の背景値がオーバーライドされます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemCheckBoxVisibility">
      <summary>各 <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> の最初のサブ項目に含まれる <see cref="T:System.Windows.Controls.CheckBox" /> の表示設定を示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>最初のサブ項目に含まれる <see cref="T:System.Windows.Controls.CheckBox" /> の表示設定を示す列挙値の 1 つ。既定値は <see cref="F:System.Windows.Visibility.Collapsed" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemContainerGenerator">
      <summary>項目コンテナーのジェネレーターを取得します。</summary>
      <value>項目コンテナーのジェネレーター。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemContainerStyle">
      <summary>項目コンテナーの描画時に使用されるスタイルを取得または設定します。これは依存関係プロパティです。</summary>
      <value>項目コンテナーに適用されるスタイル。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemTemplate">
      <summary>各項目の表示に使用される<see cref="T:System.Windows.DataTemplate" /> を取得または設定します。</summary>
      <value>データオブジェクトの視覚化を指定するテンプレート。既定値は <see langword="null" /> です。</value>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemTemplate" /> プロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.UseMultipleColumn" /> が <see langword="tree" /> の場合にのみ有効です。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemTemplate" nolink="true" /> プロパティを使用して、データの視覚的表現を指定できます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemTemplate" nolink="true" /> は、ItemsSource をデータに連結するときに特に役立ちます。データオブジェクトの外観は <see cref="T:System.Windows.DataTemplate" /> を使用して定義します。<see cref="T:System.Windows.DataTemplate" nolink="true" /> の内容が、データオブジェクトの視覚的な構造になります。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemTemplate" nolink="true" /> を設定しない場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> には、コレクション内のオブジェクトの文字列表現が表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Items">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" />の内容の生成に使用されるコレクションを取得します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> に項目を追加するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Items" /> プロパティに項目を追加するか、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemsSource" /> プロパティをデータコレクションに連結します。Items には異なる型のオブジェクトを追加できます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemsSource" nolink="true" /> が <see langword="null" /> でない場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Items" nolink="true" /> プロパティ内の項目は読み取り専用になります。Items プロパティにオブジェクトを追加したり、Items プロパティ内のオブジェクトを変更したりすることはできません。</remarks>
      <example> 次のサンプルコードは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Items" />プロパティの使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcComboBox.xaml" region="ComboBox_005" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemsSource">
      <summary>コントロールの内容の生成に使用されるコレクションを取得または設定します。これは依存関係プロパティです。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.MaxDropDownHeight">
      <summary>ドロップダウンウィンドウの最大の高さを取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウンウィンドウの最大の高さ（ピクセル単位）。既定値は <see cref="F:System.Double.NaN">Double.NaN</see> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.MaxDropDownItems">
      <summary>ドロップダウン項目の最大数を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウン項目の最大数。 既定値は 8 です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedIndex">
      <summary>選択されている項目の表示インデックスを取得または設定します。これは依存関係プロパティです。</summary>
      <value>選択されている項目の表示インデックス。既定値は -1 です。</value>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedIndex" /> は表示インデックスです。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException"> 選択されたインデックスが -１未満であるか、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Items" /> の数を超えています。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItem">
      <summary>選択されている項目を取得または設定します。これは依存関係プロパティです。</summary>
      <value>選択されている項目。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValue">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValuePath" />を使用して取得された、選択されている項目の値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValuePath" /> を使用して取得された、選択されている項目の値。項目が選択されていない場合は <see langword="null" />。既定値は <see langword="null" /> です。</value>
      <example> 次のサンプルコードは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValue" />プロパティおよび<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValuePath" />の使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcComboBox.xaml" region="ComboBox_006" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValuePath">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValue" /> プロパティの <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItem" /> プロパティを取得するために使用されるプロパティパスを取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValue" /> プロパティの <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItem" /> プロパティを取得するために使用されるプロパティパス。既定値は <see cref="F:System.String.Empty" /> です。</value>
      <example> 次のサンプルコードは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValue" />プロパティおよび<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedValuePath" />の使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcComboBox.xaml" region="ComboBox_006" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectionBoxItem">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" />で選択されている項目を取得します。これは依存関係プロパティです。</summary>
      <value>選択されている項目。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectionBoxItemTemplate">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectionBoxItem" /> のテンプレートを取得します。これは依存関係プロパティです。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SpinButtonStyle">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.SpinButton" /> の描画に使用される <see cref="T:System.Windows.Style" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>スピンボタンのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
      <remarks>このプロパティによって、スピンボタンの表示設定、レイアウト、動作などを設定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SpinButtonVisibility">
      <summary>スピンボタンの <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>スピンボタンの表示設定を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility" /> 列挙体。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.NotShown" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SpinButtonVisibility" /> プロパティは、スピンボタンが常に表示されるか、コントロールがフォーカスを取得したときにのみ表示されるか、まったく表示されないかを決定します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SpinDownCommand">
      <summary>SpinDown ボタンをクリックするよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SpinDownCommand" /> コマンドを表します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SpinUpCommand">
      <summary>SpinUp ボタンをクリックするよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SpinUpCommand" /> コマンドを表します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.StaysOpenOnEdit">
      <summary>ユーザーが TextBox をクリックしたときにドロップダウンコントロールを開いたままにするかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ドロップダウンコントロールを開いたままにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SwitchDropDownCommand">
      <summary>ドロップダウンウィンドウの開閉を切り替える <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SwitchDropDownCommand" /> コマンドを表します。</summary>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SwitchDropDownCommand" /> は、ドロップダウン状態を切り替えるために使用されます。既定のキージェスチャは Alt+Up、Alt+Down、および F4 です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Text">
      <summary>このコントロールに関連付けられたテキストを取得または設定します。これは依存関係プロパティです。</summary>
      <value>コントロールに表示されるテキスト。既定値は <see langword="null" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Text" /> プロパティは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> の編集コントロールに表示される文字列値を取得します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsEditable" /> が <see langword="true" /> の場合、このプロパティを設定すると、テキストボックスに初期テキストが入力されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsEditable" nolink="true" /> が <see langword="false" /> の場合、この値を設定しても効果はありません。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.UnEditableTemplate">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.IsEditable" /> が <see langword="false" /> に設定されている場合に使用されるテンプレートを取得または設定します。これは依存関係プロパティです。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.UseMultipleColumn">
      <summary>グリッドを使用してデータを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        グリッドを使用してデータを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <example> 次のサンプルコードは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.UseMultipleColumn" />プロパティの使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcComboBox.xaml" region="ComboBox_005" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.VerticalGridLineBrush">
      <summary>垂直グリッド線の描画に使用される<see cref="T:System.Windows.Media.Brush" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.VerticalGridLineStyle">
      <summary>各垂直グリッド線のスタイルを示す<see cref="!:GrapeCity.Windows.InputMan.LineStyle" /> 列挙値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>各グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.InputMan.LineStyle" />列挙値。</value>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.InputMan.LineStyle" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.BeginInit">
      <summary>この要素の初期化プロセスを開始します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.EndInit">
      <summary>要素の初期化プロセスが完了したことを示します。</summary>
      <exception cref="T:System.InvalidOperationException">
        要素に対してまだ <see cref="M:System.Windows.FrameworkElement.BeginInit" /> が呼び出されていないときに <see cref="M:System.Windows.FrameworkElement.EndInit" /> が呼び出されました。</exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.GetItemDisplayIndex(System.Int32)">
      <summary>項目の表示インデックスを取得します。</summary>
      <param name="itemIndex"><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Items" />に基づく項目インデックス。</param>
      <returns><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" />によって表示されるときのインデックス。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="itemIndex" /> が 0 未満です。 <br />または、<paramref name="itemIndex" /> が項目の数を超えています。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.GetItemIndex(System.Int32)">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Items" />に基づく項目インデックスを取得します。</summary>
      <param name="itemDisplayIndex">項目の表示インデックス。</param>
      <returns><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" />によって表示されるときのインデックス。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="itemDisplayIndex" /> が 0 未満です。 <br />または、<paramref name="itemDisplayIndex" /> が項目の数を超えています。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnAutoGeneratingColumn(GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoGeneratingColumn" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.AutoGeneratingListColumnEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnDropDownClosed(System.EventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownClosed" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>このメソッドの目的は、共通言語ランタイム（CLR）のイベントパターン On* メソッドに似ています。このメソッドは、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownClosed" /> イベントを発生させるための手段を提供します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnDropDownOpened(System.EventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownOpened" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>このメソッドの目的は、共通言語ランタイム（CLR）のイベントパターン On* メソッドに似ています。このメソッドは、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownOpened" /> イベントを発生させるための手段を提供します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnItemCheckChanged(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ItemCheckEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemCheck" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.ItemCheckEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnKeyExit(GrapeCity.Wpf.SpreadSheet.CellType.Editors.KeyExitEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.KeyExit" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnKeyExit</b> メソッドを使用すると、デリゲートを結び付けずに派生クラスでイベントを処理することもできます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意：</b><para />派生クラスで <b>OnKeyExit</b> をオーバーライドする場合は、登録されたデリゲートがイベントを受け取ることができるように、基本クラスの <b>OnKeyExit</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
      <remarks>この実装は、コントロールがフォーカスを失ったときにそのコントロールの外観を更新します。コントロールがフォーカスを失ったことを報告する目的で、このメソッドを使用しないでください。LostKeyboardFocus メソッドは、<see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> イベントのイベントハンドラが呼び出される前に呼び出されます。 このメソッドを使用すると、派生クラスでデリゲートを結び付けずに <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" nolink="true" /> イベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。 <p><b>継承時の注意</b></p> 派生クラスで <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" nolink="true" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" nolink="true" /> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.UIElement.MouseEnter" />イベントがこの要素で発生したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.UIElement.MouseLeave" />イベントがこの要素で発生したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>未処理の<see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> ルーティングイベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。このイベントデータは、マウス左ボタンが離されたことを報告します。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>派生クラスでデリゲートを結び付けずにイベントを処理するため、<see cref="E:System.Windows.UIElement.MouseWheel" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.MouseWheelEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnPrepareListItem(GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.PrepareListItem" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.PrepareListItemEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
      <remarks>この実装は、コンボボックスの主要内容とドロップダウンのどちらが現在アクティブであるかに応じて、そのアクティブな方にキーダウンイベントをルーティングします。<see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" /> メソッドは、PreviewKeyDown イベントのイベントハンドラが呼び出される前に呼び出されます。このメソッドを使用すると、デリゲートを結び付けずに派生クラスで PreviewKeyDown イベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。この実装は PreviewKeyDown イベントデータの処理済み状態（Handled プロパティ）を変更しません。  <p><b>継承時の注意</b></p> <see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" nolink="true" /> をオーバーライドする場合は、Handled を true に設定することで、登録されたデリゲートがイベントを受け取らないようにすることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" />のいずれかの依存関係プロパティの有効値が更新されるたびに呼び出されます。変更が発生した具体的な依存関係プロパティが引数パラメーターで報告されます。<see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティと変更前後の値を含むイベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcComboBox.SelectionChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnTextChanged(System.Windows.RoutedEventArgs)">
      <summary>このコントロールの内容が変更されたときに発生します。</summary>
      <param name="e"><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.TextChanged" />イベントに関連付けられた引数。</param>
      <remarks>このメソッドは <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.TextChanged" /> イベントを発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OnTextChanging(GrapeCity.Wpf.SpreadSheet.CellType.Editors.TextChangingEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.TextChanging" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.TextChangingEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnTextChanging</b> メソッドを使用すると、デリゲートを結び付けずに派生クラスでイベントを処理することもできます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意：</b><para />派生クラスで <b>OnTextChanging</b> をオーバーライドする場合は、登録されたデリゲートがイベントを受け取ることができるように、基本クラスの <b>OnTextChanging</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.OpenDropDown">
      <summary>コントロールのドロップダウンウィンドウを開きます。</summary>
      <remarks>このメソッドは、プログラムコードによってドロップダウンウィンドウを開く手段を提供します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Sort(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn,System.Nullable{System.ComponentModel.ListSortDirection})">
      <summary>指定した<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" /> を特定の方向にソートします。</summary>
      <param name="column">ソートされた <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" />。</param>
      <param name="sortDirection">並べ替え操作の方向。</param>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoGeneratingColumn">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemsSource" /> プロパティが変更され、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.AutoGenerateColumns" /> プロパティが <see langword="true" /> のときに、連結されたデータ型のパブリックな非静的プロパティごとに１回ずつ発生します。</summary>
      <remarks>このイベントは、生成された各カラムがコントロールに追加される前にそのカラムを変更する機会を提供します。 また、このイベントをキャンセルして特定のカラムが追加されないようにすることもできます。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownClosed">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" /> が閉じたときに発生します。</summary>
      <remarks><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownClosed" /> イベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって閉じたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownOpened">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" /> が開いたときに発生します。</summary>
      <remarks><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.DropDownOpened" /> イベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって開いたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.ItemCheck">
      <summary><see cref="!:GrapeCity.Windows.InputMan.ListItem.IsChecked" /> が変更されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.KeyExit">
      <summary>特定のキーを入力したことでコントロールがフォーカスを失ったときに発生します。</summary>
      <remarks>このイベントは、キーボード操作によってコントロールからフォーカスが移動した場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.PrepareListItem">
      <summary>データを提示する ListItem を準備するときに 1 回だけ発生します。</summary>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectionChanged">
      <summary>この要素の<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.SelectedItem" /> プロパティの値が変更されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.TextChanged">
      <summary>テキスト要素の内容が変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Text" /> プロパティが変更された後に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.TextChanging">
      <summary>コントロールのテキストが変更される直前に発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcComboBox.Text" /> プロパティが変更される前に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime">
      <summary>型の値について編集機能と表示機能を拡張するコントロールを表します。</summary>
      <remarks>
        <para> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> コントロールを使用すると、機能的な日時入力インタフェースを迅速かつ効率的に設計できます。 </para>
        <para> ユーザーはテキストフィールドに直接日時を入力できます。 そうすると、入力した日時が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Text" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value" /> プロパティに設定されます。また、ドロップダウンカレンダーから日付を選択することもでき、この場合も選択した日付が Text プロパティと Value プロパティに設定されます。GcDateTime の FieldSet に含まれる Fields を変更すると、同じ値を異なる表示テキストで表現できます。 </para>
        <para> 表示書式を変更することで、コントロールがキーボードフォーカスを失ったときにフィールドの内容を変更できます。これは GcDateTime の DisplayText プロパティに影響します。 </para>
        <para> ユーザーはドロップダウンカレンダーから DateTime を選択できます。 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownCalendarStyle" />によってドロップダウンカレンダーを設定することもできます。 </para>
        <para>
<b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
          <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
            <tr>
              <b>VisualStateGroup 名</b>
              <th>VisualState 名</th>
              <th>説明</th>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Normal</td>
              <td>コントロールが通常状態のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Disabled</td>
              <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />.のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>ReadOnly</td>
              <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsReadOnly" /> が <see langword="true" />.のときの外観を表します。</td>l </tr>
            <tr>
              <td>CommonStates</td>
              <td>MouseOver</td>
              <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />.のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>ActiveDropDown</td>
              <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.IsDropDownOpen" /> がどちらも <see langword="true" />.のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>Active</td>
              <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" nolink="true" /> が <see langword="true" />.のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>Inactive</td>
              <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" nolink="true" /> が <see langword="false" />.のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Full</td>
              <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsFull" /> が <see langword="true" />.のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Completed</td>
              <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsCompleted" /> が <see langword="true" />.のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Empty</td>
              <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsEmpty" /> が <see langword="true" />.のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Part</td>
              <td> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsFull" nolink="true" />、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsCompleted" nolink="true" /> 、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsEmpty" nolink="true" /> のすべてが <see langword="false" />.のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>Valid</td>
              <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />.を返すときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidFocused</td>
              <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidUnfocused</td>
              <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
            </tr>
          </table>
        </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.#ctor">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.AllowDropDownOpenProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.AllowDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.AutoOpenDropDownProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.AutoOpenDropDown" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ControlValidatorSetProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.ControlValidatorSet" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DefaultActiveFieldIndexProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.DefaultActiveFieldIndex" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DisplayFieldSetProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.DisplayFieldSet" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownButtonStyleProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.DropDownButtonStyle" /> 依存関係プロパティを示します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownButtonVisibilityProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.DropDownButtonVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownCalendarStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownCalendarStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownWindowStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownWindowStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ExitOnLastCharProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.ExitOnLastChar" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FieldSetProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.FieldSet" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FieldsEditModeProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.FieldsEditMode" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FirstDayOfWeekProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FirstDayOfWeek" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FocusedDateProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FocusedDate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.HighlightTextProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.HighlightText" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.IsDropDownOpenProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.IsDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.IsInvalidTextProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.IsInvalidText" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.IsTodayHighlightedProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.IsTodayHighlighted" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDateProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.MaxDate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDateProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.MinDate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.NumberChangedEvent">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.NumberChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.NumberProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.Number" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.PromptCharProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.PromptChar" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.RecommendedValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.RecommendedValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ShowLiteralsProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.ShowLiterals" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ShowRecommendedValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.ShowRecommendedValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinButtonVisibilityProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.SpinButtonVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinIncrementValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.SpinIncrementValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinModeProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.SpinMode" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.TabActionProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.TabAction" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ValidationTriggerProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.ValidationTrigger" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ValueChangedEvent">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.ValueChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.Value" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.WatermarkDisplayEmptyEraForegroundProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.WatermarkDisplayEmptyEraForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.WatermarkDisplayEmptyEraProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.WatermarkDisplayEmptyEra" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.WatermarkEmptyEraForegroundProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.WatermarkEmptyEraForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.WatermarkEmptyEraProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.WatermarkEmptyEra" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ActiveField">
      <summary>コントロールの現在アクティブなフィールドを取得します。</summary>
      <value>現在のアクティブフィールドを示す <see cref="!:GrapeCity.Windows.InputMan.Fields.DateField" /> 値。</value>
      <remarks>このプロパティは、現在のアクティブフィールドを示す値を返します。これは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> のフィールドコレクション内の唯一のアクティブフィールドです。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.AllowDropDownOpen">
      <summary>ドロップダウンを開けるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがドロップダウンを開くことを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
      <remarks>ユーザーはこのプロパティを使用して、ドロップダウンウィンドウを表示するかどうかを制御できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand">
      <summary>入力候補値を適用するよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" /> コマンドを表します。</summary>
      <remarks>
        <para>入力候補値が "2007/11/12 13:14:15" で、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ShowRecommendedValue" /> が <see langword="true" /> の場合、このコマンドは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> にこの値を適用します。このコマンドの既定のキージェスチャは <b>Ctrl+Enter</b> です。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。</para>
        <para>入力候補値の優先度は表示フィールドおよび透かしよりも下です。透かしまたは表示フィールドが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" nolink="true" /> は機能します。  </para>
      </remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_003" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.AutoOpenDropDown">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> がフォーカスを取得したときにドロップダウンウィンドウが自動的に表示されるかどうかを示す <see cref="T:System.Boolean" /> 値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウン可能なコントロールがフォーカスを受け取ったときにドロップダウンウィンドウが自動的に表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks><b>AutoOpenDropDown</b> が <see langword="true" /> で、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.AllowDropDownOpen" /> も <see langword="true" /> であるときは、ドロップダウンウィンドウが自動的に表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.BlackoutDates">
      <summary>ドロップダウンカレンダーで選択不可としてマークされている日付のコレクションを取得します。</summary>
      <value>選択できない日付のコレクション。既定値は空のコレクションです。</value>
      <remarks>
        <para> このコレクションに含まれる日付には、ドロップダウンカレンダー上で灰色の×印が付きます。 </para>
        <para> 過去の日付すべてを選択できないようにするには、このプロパティによって返されるコレクションによって提供される <see cref="!:GrapeCity.Windows.InputMan.BlackoutDatesCollection.AddDatesInPast" /> メソッドを使用します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ControlValidatorSet">
      <summary><see cref="!:GrapeCity.Windows.InputMan.ControlValidator" /> のコレクションを示す <see cref="!:GrapeCity.Windows.InputMan.ControlValidatorSet" /> を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ControlValidatorSet" /> プロパティの <see cref="!:GrapeCity.Windows.InputMan.ControlValidatorSet" /> 値。既定値は <see langword="null" /> です。</value>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> では、<see cref="!:GrapeCity.Windows.InputMan.GcDateTime.Value" /> プロパティが有効かどうかを検証するために <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" /> を定義できます。このコレクションに含まれる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" nolink="true" /> が１つずつ検証され、ある１つの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" nolink="true" /> で不合格になると検証は終了します。</remarks>
      <example> 次のサンプルコードは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" />を使用してコントロール値を検証する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDate.xaml" region="ControlValidator_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DefaultActiveFieldIndex">
      <summary>既定のアクティブな編集可能フィールドのインデックスを取得または設定します。これは依存関係プロパティです。</summary>
      <value>既定のアクティブフィールドを示す <see cref="T:System.Int32" /> 値。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DefaultActiveFieldIndex" /> は、編集可能フィールドのインデックスを表します。コントロールがフォーカスを取得すると、既定のアクティブフィールドがアクティブになります。-１より大きい値を指定する必要があります。編集可能な最後のフィールドのインデックスより大きい値を設定すると、コントロールがキーボードフォーカスを取得したときに編集可能な最後のフィールドがアクティブになります。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が-1未満です。 </exception>
      <example>
        <code>
                GcDateTime date1 = new GcDateTime();
                date1.DefaultActiveFieldIndex = 1;
              </code>
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DisplayFieldSet">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" />コントロールの<see cref="!:GrapeCity.Windows.InputMan.Fields.DateDisplayFieldSet" />を取得または設定します。</summary>
      <value>表示フィールドセットのコレクションを示す <see cref="!:GrapeCity.Windows.InputMan.Fields.DateDisplayFieldSet" /> オブジェクト。</value>
      <remarks>新しい表示フィールドセットを設定することで、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> にキーボードフォーカスがないときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" nolink="true" /> の現在の値を異なるパターンで表示できます。また、このプロパティを通じて表示フィールドのコレクションにアクセスすることもできます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownButtonStyle">
      <summary>ドロップダウンボタンの描画に使用されるスタイルを取得または設定します。</summary>
      <value>ドロップダウンボタンのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
      <remarks>このプロパティによって、ドロップダウンボタンの表示設定、レイアウト、動作などを設定できます。</remarks>
      <example> 次のサンプルコードは、<see cref="!:GrapeCity.Windows.InputMan.GcNumber.DropDownButtonStyle" /> および <see cref="!:GrapeCity.Windows.InputMan.GcNumber.SpinButtonStyle" /> プロパティの使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\SideButton.xaml" region="SideButton_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownButtonVisibility">
      <summary>ドロップダウンサイドボタンの <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>スピンサイドボタンの表示設定を示す <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> 列挙体。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.ShowAlways" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownButtonVisibility" /> プロパティは、ドロップダウンサイドボタンが常に表示されるか、コントロールがフォーカスを取得したときにのみ表示されるか、まったく表示されないかを決定します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownCalendarStyle">
      <summary>ドロップダウンカレンダーの描画に使用される <see cref="T:System.Windows.Style" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value>ドロップダウンカレンダーに適用される <see cref="T:System.Windows.Style" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownWindowStyle">
      <summary><see cref="T:System.Windows.Style" />の<see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" />に適用される <see cref="T:System.Windows.Style" />。</value>
      <remarks><see cref="T:System.Windows.Style" /> に適用される <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" />。この <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" nolink="true" /> によって、<see cref="T:System.Windows.Style" nolink="true" /> のサイズ、ドロップダウンアニメーション、ドロップダウン方向などのプロパティを設定できます。</remarks>
      <example> 次のサンプルコードは、<see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" />のスタイルの設定方法を示します。このサンプルには、コントロールの <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" nolink="true" /> にいくつかのプロパティを設定する方法が含まれています。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\DropDownWindow.xaml" region="DropDownWindow_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ExitOnLastChar">
      <summary>コントロールに最後の文字が入力されると同時にフォーカスがタブオーダーの次のコントロールに移動するかどうかを取得または設定します。</summary>
      <value>
        コントロールに入力コントロールで定義された最後の文字が入力されると同時にフォーカスがタブオーダーの次のコントロールに移動する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティを使用すると、ユーザーが入力を終えると同時にコントロールから離れるようにすることができます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FieldSet">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" />のフィールドコレクションを示す <see cref="!:GrapeCity.Windows.InputMan.Fields.DateFieldSet" /> を取得または設定します。</summary>
      <value>FieldSet プロパティの <see cref="!:GrapeCity.Windows.InputMan.Fields.DateFieldSet" /> 値。</value>
      <remarks>ユーザーはこのプロパティによって <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> のフィールドを独自に定義できます。このプロパティを設定するにはいくつかの方法があります。たとえば、<see cref="!:GrapeCity.Windows.InputMan.Fields.DateFieldSet" /> インスタンスを作成したり、XAML コードで Style によって設定したりすることが可能です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FieldsEditMode">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" />のフィールド編集モードを取得または設定します。</summary>
      <value>フィールド編集モードを示す <see cref="!:GrapeCity.Windows.InputMan.FieldsEditMode" /> 列挙値。既定値は <see cref="!:GrapeCity.Windows.InputMan.FieldsEditMode.LeftSide" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> コントロールのフィールドの編集方法を示します。値が <see cref="!:GrapeCity.Windows.InputMan.FieldsEditMode.LeftSide" /> の場合、ユーザーは左から右へ文字を入力します。値が <see cref="!:GrapeCity.Windows.InputMan.FieldsEditMode.RightSide" /> の場合は、右から左へ文字を入力します。値が <see cref="!:GrapeCity.Windows.InputMan.FieldsEditMode.Unfixed" /> の場合は、右から左へ文字を入力し、フィールドへの入力が完了していなくても値が設定されます。たとえば、現在のモードが <see cref="!:GrapeCity.Windows.InputMan.FieldsEditMode.Unfixed" nolink="true" /> の場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField" /> に "１" を入力すると、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateMonthField" nolink="true" /> の値が１に変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FirstDayOfWeek">
      <summary>ドロップダウンカレンダーでの週の開始曜日を取得または設定します。これは依存関係プロパティです。</summary>
      <value>週の開始曜日を表す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeek" /> 値。既定値は <see cref="!:GrapeCity.Windows.InputMan.DayOfWeek.NotSet" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FirstDayOfWeek" /> が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeek.NotSet" /> の場合、ドロップダウンカレンダーの日付は現在のカルチャの <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> に従って表示されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeek" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FocusedDate">
      <summary>ドロップダウンカレンダーでフォーカスが設定された日を取得または設定します。これは依存関係プロパティです。</summary>
      <value>フォーカスが設定された日を表す null 許容の DateTime 値。 既定値は <see langword="null" /> です。</value>
      <remarks>このプロパティを設定することで、ドロップダウンカレンダーでフォーカスを設定する日付を指定できます。この更新はドロップダウンが開いたときに行われます <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FocusedDate" /> が <see langword="null" />の場合、ドロップダウンカレンダーのフォーカス設定日は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value" />.に更新されます。 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value" nolink="true" /> がまだ <see langword="null" />の場合は、 <see cref="P:System.DateTime.Today" /> に更新されます。</para><para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FocusedDate" nolink="true" /> が <see langword="null" />でない場合、ドロップダウンカレンダーのフォーカス設定日は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FocusedDate" nolink="true" />.に更新されます。 </para></remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.HighlightText">
      <summary>コントロールがフォーカスを受け取ったときのテキストの選択方法を取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.HighlightText" /> 列挙値の１つ。既定値は <see cref="!:GrapeCity.Windows.InputMan.HighlightText.None" /> です。</value>
      <remarks>ユーザーはこのプロパティに <see cref="!:InputMan.HighlightText" /> 列挙値を設定することで、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" nolink="true" /> がキーボードフォーカスを取得したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> のどの部分が選択されるかを指定できます。ある特定のフィールドまたはコントロールのテキスト全体を選択するか、何も選択しないかを指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.IsDropDownOpen">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" />のドロップダウンが現在開いているかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ドロップダウンが開いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.AllowDropDownOpen" /> プロパティが <see langword="false" /> の場合は、このプロパティを <see langword="true" /> に設定しても、このプロパティは <see langword="false" /> のままになります。</para>
        <para>このプロパティを変更すると、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownOpened" /> または <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownClosed" /> イベントが発生します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.IsInvalidText">
      <summary>テキストが無効かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <value>テキストが無効かどうかを示す <see cref="T:System.Boolean" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.IsTodayHighlighted">
      <summary>現在の日付が強調表示されるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        現在の日付が強調表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate">
      <summary>範囲要素の設定可能な最大値を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> の最大日付を示す <see cref="T:System.DateTime" /> 値。</value>
      <remarks>
        <para> 既定値は <see cref="F:System.DateTime.MaxValue">DateTime.MaxValue</see>です。ユーザーが <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" /> を超えて<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value" /> プロパティをスピンアップすると、 <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> がキーボードフォーカスを失った後に値が検証されます。 </para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" nolink="true" /> より大きい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" nolink="true" /> と同じ値に変更されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" nolink="true" /> より小さい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" nolink="true" /> は変更されず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" nolink="true" /> と同じ値に変更されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate">
      <summary>範囲要素の設定可能な最小値を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> の最小日付を示す <see cref="T:System.DateTime" /> 値。</value>
      <remarks>
        <para> 既定値は <see cref="F:System.DateTime.MinValue">DateTime.MinValue</see>です。ユーザーが <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value" /> を超えて<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" /> プロパティをスピンアップすると、 <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> がキーボードフォーカスを失った後に値が検証されます。 </para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" /> より大きい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" nolink="true" /> と同じ値に変更されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" nolink="true" /> より小さい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" nolink="true" /> は変更されず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" nolink="true" /> と同じ値に変更されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Number">
      <summary>基になる値を長い整数形式で取得または設定します。</summary>
      <value>長い整数形式の日付時刻値（yyyyMMddHHmmss）。</value>
      <remarks>このプロパティを０に設定することで、基になる値を <see langword="null" /> にクリアできます。このプロパティを変更すると、<see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.Text" /> プロパティと <see cref="!:GrapeCity.Windows.InputMan.GcDateTime.Value" /> プロパティにそれが反映されます。</remarks>
      <exception cref="T:System.ArgumentNullException"> 設定された値が <see cref="T:System.DateTime" /> 値に変換できません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.PromptChar">
      <summary>入力用のプロンプトとして使用される文字を取得または設定します。</summary>
      <value>入力用のプロンプトとして使用される文字。既定値はアンダースコア（"_"）です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が有効でないか、<see cref="F:System.Char.MinValue" /> です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>エディタの入力候補値を示す <see cref="T:System.DateTime" /> 値。既定値は <see cref="P:System.DateTime.Now" /> です。</value>
      <remarks>
        <para> 入力候補値は、入力候補となる日時をユーザーにヒントとして提示するために使用されます。 </para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。 </para>
        <para> 入力候補値の優先度は表示フィールドおよび透かしよりも下です。透かしまたは表示フィールドが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SetNowCommand">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" />を <see cref="P:System.DateTime.Now">DateTime.Now</see> に設定するよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SetNowCommand" /> コマンドを表します。</summary>
      <remarks>このコマンドは特定のキージェスチャーに登録できます。このコマンドの既定のキージェスチャーは F5 です。</remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_003" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ShowLiterals">
      <summary>リテラルの表示方法を取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.ShowLiterals" /> 列挙値の１つ。既定値は <see cref="!:GrapeCity.Windows.InputMan.ShowLiterals.Always" /> です。</value>
      <remarks>ユーザーが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> コントロールを編集するとき、このプロパティの値に従って、対応するフィールドが表示される前または表示された後にリテラルが表示されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が有効な <see cref="!:GrapeCity.Windows.InputMan.ShowLiterals" /> ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ShowRecommendedValue">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.RecommendedValue" /> を表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>
        <para> このプロパティを <see langword="true" />に設定した場合は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.RecommendedValue" />に基づいて、 <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> のフィールドに明るいテキストが表示されます。フィールドセットに和暦年フィールドが含まれる場合は、対応する年号も表示されます。 </para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。 </para>
        <para> 入力候補値の優先度は表示フィールドおよび透かしよりも下です。透かしまたは表示フィールドが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinButtonStyle">
      <summary><see cref="T:System.Windows.Style" /> の描画に使用される <see cref="!:GrapeCity.Windows.InputMan.Primitives.SpinButton" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>スピンボタンのプロパティの設定に使用される <see cref="T:System.Windows.Style" /> 値。</value>
      <remarks>このプロパティによって、スピンボタンの表示設定、レイアウト、動作などを設定できます。</remarks>
      <example> 次のサンプルコードは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownButtonStyle" /> および <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinButtonStyle" /> プロパティの使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\SideButton.xaml" region="SideButton_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinButtonVisibility">
      <summary>スピンサイドボタンの <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>スピンサイドボタンの表示設定を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility" /> 列挙体。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.NotShown" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinButtonVisibility" /> プロパティは、スピンサイドボタンが常に表示されるか、コントロールがフォーカスを取得したときにのみ表示されるか、まったく表示されないかを決定します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinIncrementValue">
      <summary>スピン増分値を取得または設定します。</summary>
      <value>スピン増分値を示す <see cref="T:System.TimeSpan" /> 値。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value" /> プロパティを増減する量を示します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinMode">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> のスピン方法を示すモードを取得または設定します。</summary>
      <value>スピンモードを示す <see cref="!:GrapeCity.Windows.InputMan.DateSpinMode" /> 値。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSpinMode.Field" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value" /> のスピン動作を決定します。列挙値が <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSpinMode.Field" /> の場合は、現在のアクティブフィールドのみがスピンします。列挙値が <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSpinMode.Value" /> の場合は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" nolink="true" /> の値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SpinIncrementValue" /> に指定された増分量でスピンします。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SwitchDropDownCommand">
      <summary>ドロップダウンウィンドウの開閉を切り替える <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SwitchDropDownCommand" /> コマンドを表します。</summary>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.SwitchDropDownCommand" /> は、ドロップダウン状態を切り替えるために使用されます。既定のキージェスチャは Alt+Up、Alt+Down、および F4 です。</remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_003" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.TabAction">
      <summary>［Tab］キーを押したときにフォーカスを前後のコントロールに移動するか、またはコントロール内の前後のフィールドに移動するかを決定する値を取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.TabAction" /> 列挙値の１つ。既定値は <see cref="!:GrapeCity.Windows.InputMan.TabAction.Control" /> です。</value>
      <remarks>このプロパティは、ユーザーが［Tab］キーを押したときのキャレットのジャンプアクションを決定します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が有効な <see cref="!:GrapeCity.Windows.InputMan.TabAction" /> ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ValidationTrigger">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.Value" />プロパティを検証するタイミングを決定する値を取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.ValidationTrigger" /> 値の１つ。既定値は <see cref="!:GrapeCity.Windows.InputMan.ValidationTrigger.LostFocus" /> です。</value>
      <example> 次のサンプルコードは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" />を使用してコントロール値を検証する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDate.xaml" region="ControlValidator_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime" />コントロールに割り当てられた値を取得または設定します。</summary>
      <value>コントロールに割り当てられている null 許容の日付時刻値。既定値は <see cref="P:System.DateTime.Now" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.WatermarkDisplayEmptyEra">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" />にフォーカスがない場合に、その値が和暦表示できないときに表示される 空の和暦の表示用の透かしを取得または設定します。</summary>
      <value>空の和暦用の透かしを示す <see cref="T:System.String" /> 値。</value>
      <remarks>このプロパティは <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DisplayFieldSet" /> プロパティと連携して機能します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraDisplayField" /> 表示フィールドがない場合、この透かしは表示されません。また、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> 値が <see langword="null" /> の場合にも、この透かしは表示されません。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.WatermarkDisplayEmptyEraForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.WatermarkDisplayEmptyEra" />を描画する描画ブラシを示す前景を取得または設定します。</summary>
      <value>空の和暦用の前景を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.WatermarkEmptyEra">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" />にフォーカスがない場合に、その値が和暦表示できないときに表示される透かしを取得または設定します。</summary>
      <value>空の和暦用の透かしを示す <see cref="T:System.String" /> 値。</value>
      <remarks>EmptyEra 透かしは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> 値が <see langword="null" /> 以外で、その値が和暦表示できず、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.FieldSet" /> に <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateEraField" /> が含まれている場合に表示されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.WatermarkEmptyEraForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.WatermarkEmptyEra" />を描画する描画ブラシを示す前景を取得または設定します。</summary>
      <value>空の和暦用の透かしの前景を示す <b>Brush</b> 値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DoSpinDown(System.TimeSpan)">
      <summary>指定した<see cref="T:System.TimeSpan" /> に従ってスピンダウンを実行します。</summary>
      <param name="increment">増分量。</param>
      <remarks>このメソッドは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> の値を指定された <see cref="T:System.TimeSpan" /> 値だけ減らします。スピン結果は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" /> によって制限されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinAllowWrap" /> が <see langword="true" /> の場合は、スピンを循環させることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DoSpinUp(System.TimeSpan)">
      <summary>指定した<see cref="T:System.TimeSpan" /> に従ってスピンアップを実行します。</summary>
      <param name="increment">増分量。</param>
      <remarks>このメソッドは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> の値を指定された <see cref="T:System.TimeSpan" /> 値だけ増やします。スピン結果は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MaxDate" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.MinDate" /> によって制限されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.SpinAllowWrap" /> が <see langword="true" /> の場合は、スピンを循環させることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.OnDropDownClosed(System.EventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownClosed" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>このメソッドの目的は、共通言語ランタイム（CLR）のイベントパターン On* メソッドに似ています。このメソッドは、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownClosed" /> イベントを発生させるための手段を提供します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.OnDropDownOpened(System.EventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownOpened" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>このメソッドの目的は、共通言語ランタイム（CLR）のイベントパターン On* メソッドに似ています。このメソッドは、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownOpened" /> イベントを発生させるための手段を提供します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.OnIsActiveChanged(System.Windows.RoutedEventArgs)">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" />プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.OnNumberChanged(System.Windows.RoutedEventArgs)">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.Number" />プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
      <remarks>このメソッドは、共通言語ランタイム（CLR）の On* メソッドに似ています。<see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.NumberChangedEvent" /> ルーティングイベントを処理するイベントハンドラを呼び出すための手段を提供します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" />のいずれかの依存関係プロパティの有効値が更新されるたびに呼び出されます。変更が発生した具体的な依存関係プロパティが引数パラメーターで報告されます。<see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティと変更前後の値を含むイベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.OnValueChanged(System.Windows.RoutedEventArgs)">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value" />プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
      <remarks>このメソッドの目的は、共通言語ランタイム（CLR）のイベントパターン On* メソッドに似ています。このメソッドは、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ValueChanged" /> ルーティングイベントを発生させるための手段を提供します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.OpenDropDown">
      <summary>コントロールのドロップダウンウィンドウを開きます。</summary>
      <remarks>このメソッドは、プログラムコードによってドロップダウンウィンドウを開く手段を提供します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownClosed">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" /> が閉じたときに発生します。</summary>
      <remarks><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownClosed" /> イベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって閉じたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownOpened">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" /> が開いたときに発生します。</summary>
      <remarks><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.DropDownOpened" /> イベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって開いたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.NumberChanged">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDateTime.Number" />プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.ValueChanged">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value" />プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator">
      <summary>加算、減算、乗算、除算などの計算を実行できる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />コントロールを表します。</summary>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" /> コントロールは単独で使用するほかに、<see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> コントロールのドロップダウン部分として使用することもできます。詳細については、<see cref="!:GrapeCity.Windows.InputMan.GcNumber" nolink="true" /> を参照してください。</para>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" nolink="true" /> コントロールで計算を行うには、マウスを使用してコントロールのボタンをクリックするか、キーボードのキーを押します。次の表にキーボード操作の一覧を示します。</para>
        <list type="table">
          <listheader>
            <term>キーの組み合わせ</term>
            <description>電卓の操作</description>
          </listheader>
          <item>
            <term>Esc, Ctrl+Delete</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.C" />。現在の計算をクリアします。</description>
          </item>
          <item>
            <term>Delete</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.CE" />。表示されている数字をクリアします。</description>
          </item>
          <item>
            <term>Back</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Backspace" />。表示されている数字の最後の桁を削除します。</description>
          </item>
          <item>
            <term>D0, NumPad0</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Digit0" />。この数字を電卓の表示部に入力します。</description>
          </item>
          <item>
            <term>D1, NumPad1</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Digit1" />。この数字を電卓の表示部に入力します。</description>
          </item>
          <item>
            <term>D2, NumPad2</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Digit2" />。この数字を電卓の表示部に入力します。</description>
          </item>
          <item>
            <term>D3, NumPad3</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Digit3" />。この数字を電卓の表示部に入力します。</description>
          </item>
          <item>
            <term>D4, NumPad4</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Digit4" />。この数字を電卓の表示部に入力します。</description>
          </item>
          <item>
            <term>D5, NumPad5</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Digit5" />。この数字を電卓の表示部に入力します。</description>
          </item>
          <item>
            <term>D6, NumPad6</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Digit6" />。この数字を電卓の表示部に入力します。</description>
          </item>
          <item>
            <term>D7, NumPad7</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Digit7" />。この数字を電卓の表示部に入力します。</description>
          </item>
          <item>
            <term>D8, NumPad8</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Digit8" />。この数字を電卓の表示部に入力します。</description>
          </item>
          <item>
            <term>D9, NumPad9</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Digit9" />。この数字を電卓の表示部に入力します。</description>
          </item>
          <item>
            <term>Decimal, OemComma, OemPeriod</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.DecimalPoint" />。小数点を挿入します。</description>
          </item>
          <item>
            <term>F9</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Sign" />。表示されている数字の符号を変更します。</description>
          </item>
          <item>
            <term>Add, Shift+OemPlus</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Add" />。加算します。</description>
          </item>
          <item>
            <term>Subtract, Shift+OemMinus</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Subtract" />。減算します。</description>
          </item>
          <item>
            <term>Multiply, Shift+Oem1</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Multiply" />。乗算します。</description>
          </item>
          <item>
            <term>Divide, OemQuestion</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Divide" />。除算します。</description>
          </item>
          <item>
            <term>Shift+D5</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Percentage" />。乗算の結果をパーセントで表示します。１つ目の数字を入力して［*］をクリックし、２つ目の数字を入力して［%］をクリックします。たとえば、50 * 25% は 12.5 になります。また、パーセントを使用した演算を行うこともできます。１つ目の数字を入力して演算子（［+］、［-］、［*］、［/］のいずれか）をクリックし、２つ目の数字を入力して［%］をクリックしてから、［=］をクリックします。</description>
          </item>
          <item>
            <term>OemTilde</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.SquareRoot" />。表示されている数字の平方根を計算します。</description>
          </item>
          <item>
            <term>R</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Reciprocal" />。表示されている数字の逆数を計算します。</description>
          </item>
          <item>
            <term>Return, Shift+OemMinus</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.Equal" />。前の２つの数字の演算を実行します。最後の演算を繰り返すには、［=］をもう一度クリックします。</description>
          </item>
          <item>
            <term>Ctrl+L</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.MemoryClear" />。メモリに記憶されている数字をクリアします。</description>
          </item>
          <item>
            <term>Ctrl+R</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.MemoryRecall" />。メモリに記憶されている数字を呼び出します。数字はメモリに残ります。</description>
          </item>
          <item>
            <term>Ctrl+M</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.MemorySave" />。表示されている数字をメモリに記憶します。</description>
          </item>
          <item>
            <term>Ctrl+P</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.MemoryPlus" />。表示されている数字をすでにメモリに記憶されている数字に加算しますが、それらの合計は表示しません。</description>
          </item>
          <item>
            <term>Ctrl+Q</term>
            <description>
              <see cref="!:GrapeCity.Windows.InputMan.CalculatorOperation.MemoryMinus" />。表示されている数字をすでにメモリに記憶されている数字から減算しますが、減算の結果は表示しません。</description>
          </item>
        </list>
        <para>
          <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧:</b>
          <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
            <tr>
              <th>VisualStateGroup 名</th>
              <th>VisualState 名</th>
              <th>説明</th>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Normal</td>
              <td>コントロールが通常状態のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Disabled</td>
              <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CalculationStates</td>
              <td>HasErrors</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasError" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CalculationStates</td>
              <td>Empty</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasError" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>Valid</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidFocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidUnfocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
          </table>
        </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.DisplayTextProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.DisplayText" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.EditButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.EditButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ErrorMessageStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ErrorMessageStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasErrorProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasError" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasMemoryProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasMemory" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HistoryProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.History" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HistoryStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HistoryStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.IsShowHistoryProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.IsShowHistory" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.MathButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.MathButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.MemoryButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.MemoryButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.MemoryStatusStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.MemoryStatusStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.NumericButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.NumericButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.OutputStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.OutputStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ResetButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ResetButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ValueChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ValueChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ValueProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.Value" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.DisplayText">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />の表示テキストを取得します。これは依存関係プロパティです。</summary>
      <value>コントロールの表示テキストを表す <see cref="T:System.String" /> 値。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.Value" /> が <see langword="null" />以外で、なおかつ <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" /> にエラーがない場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.DisplayText" /> は値の表示文字列です。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" nolink="true" /> にエラーがある場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.DisplayText" nolink="true" /> は計算にエラーがあることを知らせるエラー情報文字列です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.EditButtonStyle">
      <summary>編集ボタンの描画に使用される <see cref="T:System.Windows.Style" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value>編集ボタンに適用される <see cref="T:System.Windows.Style" />。</value>
      <example> 次のサンプルコードは、<see cref="T:System.Windows.Style" />を使用して<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalculator.xaml" region="Calculator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ErrorMessageStyle">
      <summary>エラーメッセージ部の描画に使用される<see cref="T:System.Windows.Style" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>エラーメッセージ部に適用される<see cref="T:System.Windows.Style" />。</value>
      <example> 次のサンプルコードは、<see cref="T:System.Windows.Style" />を使用して<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalculator.xaml" region="Calculator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasError">
      <summary>この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />のインスタンスにエラーがあるかどうかを示す値を取得します。これは依存関係プロパティです。</summary>
      <value>
        この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" /> のインスタンスにエラーがある場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasError" /> が <see langword="true" /> の場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" /> は以下のエラー状態になります。<term><description><para>ゼロによる除算</para><para>数字がゼロで除算されました。これは数字をゼロで除算するか、ゼロに対して <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Reciprocal" /> を呼び出したときに発生します。</para><item><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.DisplayText" /> は "0 で除算しようとしました。" になります。</item></description><description><para><item>無効入力</item></para><para>演算子のパラメーターが無効です。これは負の数字に対して <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.SquareRoot" /> を呼び出したときに発生します。</para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.DisplayText" nolink="true" /> は "無効な値です。" になります。</description>オーバーフロー値がオーバーフローしました。これは計算結果が <see cref="T:System.Double" /> の範囲から外れたときに発生します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.DisplayText" nolink="true" /> は "演算操作の結果オーバーフローが発生しました。" になります。</term><list type="bullet"><item><description><para> </para></description></item></list></remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasMemory">
      <summary>この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />のインスタンスがメモリ記憶値を持つかどうかを示す値を取得します。これは依存関係プロパティです。</summary>
      <value>
        この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" /> のインスタンスがメモリ記憶値を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>数字が記憶されているとき、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasMemory" /> は <see langword="true" /> になります。たとえば、数字を入力して［<b>MS</b>］ボタンをクリックすると、この <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HasMemory" nolink="true" /> は<see langword="true" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.History">
      <summary>現在の計算の履歴テキスト文字列を取得します。これは依存関係プロパティです。</summary>
      <value>履歴テキスト文字列。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.HistoryStyle">
      <summary>履歴部の描画に使用される <see cref="T:System.Windows.Style" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>履歴部に適用される<see cref="T:System.Windows.Style" />。</value>
      <example> 次のサンプルコードは、<see cref="T:System.Windows.Style" />を使用して<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalculator.xaml" region="Calculator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.IsShowHistory">
      <summary>計算の履歴を表示するかどうかを取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        計算の履歴を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.MathButtonStyle">
      <summary>演算ボタンの描画に使用される <see cref="T:System.Windows.Style" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value>演算ボタンに適用される <see cref="T:System.Windows.Style" />。</value>
      <example> 次のサンプルコードは、<see cref="T:System.Windows.Style" />を使用して<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalculator.xaml" region="Calculator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.MemoryButtonStyle">
      <summary>メモリボタンの描画に使用される <see cref="T:System.Windows.Style" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value>メモリボタンに適用される <see cref="T:System.Windows.Style" />。</value>
      <example> 次のサンプルコードは、<see cref="T:System.Windows.Style" />を使用して<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalculator.xaml" region="Calculator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.MemoryStatusStyle">
      <summary>メモリ状態部の描画に使用される <see cref="T:System.Windows.Style" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>メモリ状態部に適用される<see cref="T:System.Windows.Style" />。</value>
      <example> 次のサンプルコードは、<see cref="T:System.Windows.Style" />を使用して<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalculator.xaml" region="Calculator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.NumericButtonStyle">
      <summary>数字ボタンの描画に使用される <see cref="T:System.Windows.Style" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value>数字ボタンに適用される <see cref="T:System.Windows.Style" />。</value>
      <example> 次のサンプルコードは、<see cref="T:System.Windows.Style" />を使用して<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalculator.xaml" region="Calculator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.OutputStyle">
      <summary>出力部の描画に使用される <see cref="T:System.Windows.Style" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>出力部に適用される<see cref="T:System.Windows.Style" />。</value>
      <example> 次のサンプルコードは、<see cref="T:System.Windows.Style" />を使用して<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalculator.xaml" region="Calculator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ProcessCommand">
      <summary>コマンドパラメーターによって指定された操作を処理するよう電卓に要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ProcessCommand" />コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャはコマンドパラメーターによって異なります。<list type="table"><listheader><term>キーの組み合わせ</term><description>電卓の操作</description></listheader><item><term>Esc, Ctrl+Delete</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.C" />。現在の計算をクリアします。</description></item><item><term>Delete</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.CE" />。表示されている数字をクリアします。</description></item><item><term>Back</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Backspace" />。表示されている数字の最後の桁を削除します。</description></item><item><term>D0, NumPad0</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit0" />。この数字を電卓の表示部に入力します。</description></item><item><term>D1, NumPad1</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit1" />。この数字を電卓の表示部に入力します。</description></item><item><term>D2, NumPad2</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit2" />。この数字を電卓の表示部に入力します。</description></item><item><term>D3, NumPad3</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit3" />。この数字を電卓の表示部に入力します。</description></item><item><term>D4, NumPad4</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit4" />。この数字を電卓の表示部に入力します。</description></item><item><term>D5, NumPad5</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit5" />。この数字を電卓の表示部に入力します。</description></item><item><term>D6, NumPad6</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit6" />。この数字を電卓の表示部に入力します。</description></item><item><term>D7, NumPad7</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit7" />。この数字を電卓の表示部に入力します。</description></item><item><term>D8, NumPad8</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit8" />。この数字を電卓の表示部に入力します。</description></item><item><term>D9, NumPad9</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit9" />。この数字を電卓の表示部に入力します。</description></item><item><term>Decimal, OemComma, OemPeriod</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.DecimalPoint" />。小数点を挿入します。</description></item><item><term>F9</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Sign" />。表示されている数字の符号を変更します。</description></item><item><term>Add, Shift+OemPlus</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Add" />。加算します。</description></item><item><term>Subtract, Shift+OemMinus</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Subtract" />。減算します。</description></item><item><term>Multiply, Shift+Oem1</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Multiply" />。乗算します。</description></item><item><term>Divide, OemQuestion</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Divide" />。除算します。</description></item><item><term>Shift+D5</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Percentage" />。乗算の結果をパーセントで表示します。１つ目の数字を入力して［*］をクリックし、２つ目の数字を入力して［%］をクリックします。たとえば、50 * 25% は 12.5 になります。また、パーセントを使用した演算を行うこともできます。１つ目の数字を入力して演算子（［+］、［-］、［*］、［/］のいずれか）をクリックし、２つ目の数字を入力して［%］をクリックしてから、［=］をクリックします。</description></item><item><term>OemTilde</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.SquareRoot" />。表示されている数字の平方根を計算します。</description></item><item><term>R</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Reciprocal" />。表示されている数字の逆数を計算します。</description></item><item><term>Return, Shift+OemMinus</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Equal" />。前の２つの数字の演算を実行します。最後の演算を繰り返すには、［=］をもう一度クリックします。</description></item><item><term>Ctrl+L</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.MemoryClear" />。メモリに記憶されている数字をクリアします。</description></item><item><term>Ctrl+R</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.MemoryRecall" />。メモリに記憶されている数字を呼び出します。数字はメモリに残ります。</description></item><item><term>Ctrl+M</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.MemorySave" />。表示されている数字をメモリに記憶します。</description></item><item><term>Ctrl+P</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.MemoryPlus" />。表示されている数字をすでにメモリに記憶されている数字に加算しますが、それらの合計は表示しません。</description></item><item><term>Ctrl+Q</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.MemoryMinus" />。表示されている数字をすでにメモリに記憶されている数字から減算しますが、減算の結果は表示しません。</description></item></list></value>
      <remarks>このコマンドは <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalculator" /> によってネイティブにサポートされています。コマンドパラメーターは必須です。</remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_004" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ResetButtonStyle">
      <summary>リセットボタンの描画に使用される <see cref="T:System.Windows.Style" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value>リセットボタンに適用される <see cref="T:System.Windows.Style" />。</value>
      <example> 次のサンプルコードは、<see cref="T:System.Windows.Style" />を使用して<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" />の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalculator.xaml" region="Calculator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.Value">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator" /> の値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>コントロールの値を表す null 許容の 10 進数値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> イベントがこの要素で発生する直前に呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.OnValueChanged(System.Windows.RoutedEventArgs)">
      <summary>この電卓の値が変更されたとき、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ValueChanged" /> イベントを発生させるために呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ValueChanged">
      <summary>電卓の値が変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar">
      <summary>ビジュアルなカレンダー表示を使用してユーザーが日付を選択できるようにする <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> コントロールを表します。</summary>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> コントロールは単独で使用するほかに、<see cref="!:GrapeCity.Windows.InputMan.GcDateTime" /> コントロールのドロップダウン部分として使用することもできます。詳細については、<see cref="!:GrapeCity.Windows.InputMan.GcDateTime" nolink="true" /> を参照してください。</para>
        <para>次の表に、一般に <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" nolink="true" /> に関連付けられているタスクについての情報を示します。  <list type="table"><listheader><term>タスク</term><description>実装</description></listheader><item><term><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" nolink="true" /> の表示を１月、１年、または 10 年にする。</term><description><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> プロパティを <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" />、<see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" />、<see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Decade" /> のいずれかに設定します。</description></item><item><term>ユーザーが単一の日付、単一の日付範囲、複数の日付範囲のいずれを選択できるかを指定する。</term><description><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectionMode" /> を使用します。</description></item><item><term>選択できない日付を指定する。</term><description><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.BlackoutDates" /> プロパティを使用します。</description></item><item><term><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" nolink="true" /> の日付範囲を指定する。</term><description><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate" /> プロパティを使用します。</description></item><item><term>現在の日付が強調表示されるかどうかを指定する。</term><description><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.IsTodayHighlighted" /> プロパティを使用します。既定では、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.IsTodayHighlighted" nolink="true" /> は <see langword="true" /> です。</description></item></list></para>
        <para>
          <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
          <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
            <tr>
              <th>VisualStateGroup 名</th>
              <th>VisualState 名</th>
              <th>説明</th>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Normal</td>
              <td>コントロールが通常状態のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Disabled</td>
              <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>Valid</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidFocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidUnfocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
          </table>
        </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.AllowSelectionProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.AllowSelection" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarDayButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarDayButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarDayButtonStyleSelectorProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.CalendarDayButtonStyleSelector" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarHeaderButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarHeaderButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarItemStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarItemStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarSelectionBackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarSelectionBackground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarYearProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarYear" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ClickDateEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ClickDate" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayModeChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayModeChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayModeProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DoubleClickDateEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DoubleClickDate" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EmptyRowProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EmptyRow" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayModeProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FirstDayOfWeekProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FirstDayOfWeek" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FirstFiscalMonthProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FirstFiscalMonth" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDateChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDateChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDateProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.HolidaySettingProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.HolidaySetting" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.InnerMarginProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.InnerMargin" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.IsTodayHighlightedProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.IsTodayHighlighted" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDateProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDateProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MonthFormatProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MonthFormat" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ScrolledEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.Scrolled" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectedDateProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectedDate" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectedDatesChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectedDatesChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectionModeProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectionMode" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ShowContextMenuProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ShowContextMenu" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ShowTrailingProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ShowTrailing" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayModeProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.TodayBackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.TodayBackground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.TodayForegroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.TodayForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekNumberStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekNumberStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekTitleStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekTitleStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekTitleStyleSelectorProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.WeekTitleStyleSelector" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.YearFormatProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.YearFormat" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.YearMonthFormatProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.YearMonthFormat" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.AllowSelection">
      <summary>選択可能な日のタイプを取得または設定します。これは依存関係プロパティです。</summary>
      <value>選択できる日のタイプを示す <see cref="!:GrapeCity.Windows.InputMan.AllowSelection" /> 列挙値。</value>
      <remarks>
        <see cref="!:GrapeCity.Windows.InputMan.AllowSelection.AnyDay" /> は、すべての日を選択できることを示します。<see cref="!:GrapeCity.Windows.InputMan.AllowSelection.Holiday" /> は、すべての休日（<see cref="!:GrapeCity.Windows.InputMan.Holiday" />、<see cref="!:GrapeCity.Windows.InputMan.DayOfWeekHoliday" />、<see cref="!:GrapeCity.Windows.InputMan.ForceHoliday" />、<see cref="!:GrapeCity.Windows.InputMan.ForceDayOfWeekHoliday" />、<see cref="!:GrapeCity.Windows.InputMan.WeeklyHoliday" /> で定義された日付や振替休日など）を選択できることを示します。<see cref="!:GrapeCity.Windows.InputMan.AllowSelection.Workday" /> は、すべての営業日（通常日や <see cref="!:GrapeCity.Windows.InputMan.ForceWorkday" />、<see cref="!:GrapeCity.Windows.InputMan.ForceDayOfWeekWorkday" /> で定義された日付など）を選択できることを示します。</remarks>
      <exception cref="T:System.ArgumentException"> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.AllowSelection" /> プロパティに設定された値が <see cref="!:GrapeCity.Windows.InputMan.AllowSelection" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.BlackoutDates">
      <summary>選択不可としてマークされている日付のコレクションを取得します。</summary>
      <value>選択できない日付のコレクション。既定値は空のコレクションです。</value>
      <remarks>
        <para> このコレクションに含まれる日付には、カレンダー上で灰色の×印が付きます。</para>
        <para> 過去の日付すべてを選択できないようにするには、このプロパティによって返されるコレクションによって提供される <see cref="!:GrapeCity.Windows.InputMan.BlackoutDatesCollection.AddDatesInPast" /> メソッドを使用します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarButtonStyle">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarButton" /> に適用される <see cref="T:System.Windows.Style" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarButton" />。</value>
      <remarks>これは <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarButton" /> のスタイルを設定するためのプロパティです。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarDayButtonStyle">
      <summary><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" /> に適用される <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" />。</value>
      <remarks>これは <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" /> のスタイルを設定するためのプロパティです。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarDayButtonStyleSelector">
      <summary>条件に従って <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarDayButtonStyleSelector" /> の外観を変更するために使用する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarDayButtonStyleSelector" /> は基本クラスからの単純な実装であり、事前に定義した条件に従って <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> の外観（いくつかのプロパティ）を変更する簡単な手段を提供します。このインタフェースではユーザーの複雑な要件を満たせない場合は、代わりにテンプレートのカスタマイズを使用できます。</remarks>
      <example> 次のサンプルは、Xamlで <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> を使用して <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekTitleStyleSelector" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarDayButtonStyleSelector" /> の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalendar.xaml" region="StyleSelector_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarHeaderButtonStyle">
      <summary><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarHeaderButton" /> に適用される <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarHeaderButton" />。</value>
      <remarks>これは <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarHeaderButton" /> のスタイルを設定するためのプロパティです。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarItemStyle">
      <summary><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarItem" /> に適用される <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarItem" />。</value>
      <remarks>これは <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarItem" /> のスタイルを設定するためのプロパティです。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarSelectionBackground">
      <summary>選択されているボタンの背景を表すブラシを取得または設定します。これは依存関係プロパティです。</summary>
      <value>選択されているボタンの背景を塗りつぶすブラシ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarYear">
      <summary>会計年度または通常の年を表示するカレンダー年を取得または設定します。これは依存関係プロパティです。</summary>
      <value>カレンダー年。既定値は <see cref="!:GrapeCity.Windows.InputMan.CalendarYear.Normal" /> です。</value>
      <exception cref="T:System.ArgumentException"> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarYear" /> プロパティに設定された値が <see cref="!:GrapeCity.Windows.InputMan.CalendarYear" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode">
      <summary>カレンダーに表示する単位を 1 月、1 年、10 年のいずれにするかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> に表示する時間の長さを示す値。</value>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> には、１月、１年、または 10 年を表示できます。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" /> から <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" /> までの値にのみ設定できます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> プロパティの値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" nolink="true" /> と同じである場合、マウスをクリックするかキーボードの［Space］または［Enter］キーを押すと、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectionMode" /> に従って日付が選択されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> プロパティの値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" nolink="true" /> より大きい場合（つまり、DisplayMode が <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" /> で、StartDisplayMode が <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" /> の場合）、マウスをクリックするかキーボードの［Space］または［Enter］キーを押すと、カレンダーが<b>ズームイン</b>します。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" nolink="true" /> プロパティより小さい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" nolink="true" /> に設定されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" nolink="true" /> プロパティより大きい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" nolink="true" /> に設定されます。  </para>
      </remarks>
      <exception cref="T:System.ArgumentException"> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> プロパティに設定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EmptyRow">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> に空白週の行がどのように表示されるかを取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> に空白週の行がどのように表示されるかを示す <see cref="!:GrapeCity.Windows.InputMan.EmptyRow" /> 列挙体。</value>
      <remarks>このプロパティの設定は <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month">Month</see> 表示モードの日のレイアウトにのみ影響し、表示されている月が、日数が 28 日の <b>２月</b> である必要があります。この場合、隣接日が空白週の行になります。</remarks>
      <exception cref="T:System.ArgumentException"> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EmptyRow" /> プロパティに設定された値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EmptyRow" nolink="true" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode">
      <summary>使用可能な表示モード範囲の終了表示モードを取得または設定します。これは依存関係プロパティです。</summary>
      <value>終了表示モード。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> プロパティより小さい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" nolink="true" /> に設定されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" /> プロパティより小さい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" nolink="true" /> に設定されます。</remarks>
      <exception cref="T:System.ArgumentException"> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" /> プロパティに設定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FirstDayOfWeek">
      <summary>週の開始曜日を取得または設定します。これは依存関係プロパティです。</summary>
      <value>週の開始曜日を表す <see cref="!:GrapeCity.Windows.InputMan.DayOfWeek" /> 値。既定値は <see cref="!:GrapeCity.Windows.InputMan.DayOfWeek.NotSet" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FirstDayOfWeek" /> が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeek.NotSet" /> の場合、コントロールの日付はカルチャの <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> に従って表示されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.DayOfWeek" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FirstFiscalMonth">
      <summary>会計年度の開始月を取得または設定します。これは依存関係プロパティです。</summary>
      <value>会計年度の開始月を表す <see cref="!:GrapeCity.Windows.InputMan.Month" /> 値。既定値は <see cref="!:GrapeCity.Windows.InputMan.Month.Default" /> です。</value>
      <exception cref="T:System.ArgumentException"> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FirstFiscalMonth" /> プロパティに設定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDate">
      <summary>フォーカスが設定された日を取得または設定します。これは依存関係プロパティです。</summary>
      <value>フォーカスが設定された日を表す <see cref="T:System.DateTime" /> 値。 既定値は <see cref="P:System.DateTime.Today" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.HolidaySetting">
      <summary>コントロールの休日設定を取得または設定します。これは依存関係プロパティです。</summary>
      <value>休日設定。</value>
      <remarks>このプロパティには <see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" /> または <see cref="!:GrapeCity.Windows.InputMan.HolidayGroup" /> を設定できます。<see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" nolink="true" /> をアクティブまたは非アクティブにするには、<see cref="!:GrapeCity.Windows.InputMan.HolidaySetting.IsActive" /> プロパティを設定するか、UI 操作によってメニュー項目のチェックマークをオン／オフします。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.InnerMargin">
      <summary>内側のカレンダー表示の余白を取得または設定します。これは依存関係プロパティです。</summary>
      <value>内側の余白。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.IsTodayHighlighted">
      <summary>現在の日付が強調表示されるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        現在の日付が強調表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate">
      <summary>コントロールに表示できる最大の日付を取得または設定します。これは依存関係プロパティです。</summary>
      <value>コントロールに表示できる最大の日付を示す <see cref="T:System.DateTime" /> 値。既定値は 9999/12/31 です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate" /> より大きい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" nolink="true" /> と同じ値に変更されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" nolink="true" /> より小さい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" nolink="true" /> は変更されず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" nolink="true" /> と同じ値に変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate">
      <summary>コントロールに表示できる最小の日付を取得または設定します。これは依存関係プロパティです。</summary>
      <value>コントロールに表示できる最小の日付を示す <see cref="T:System.DateTime" /> 値。既定値は 0001/01/01 です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate" /> より大きい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" nolink="true" /> と同じ値に変更されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" nolink="true" /> より小さい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" nolink="true" /> は変更されず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MaxDate" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MinDate" nolink="true" /> と同じ値に変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MonthFormat">
      <summary>月の書式を取得または設定します。これは依存関係プロパティです。</summary>
      <value>月の書式を示す <see cref="T:System.String" /> 値。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.MonthFormat" /> は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> コントロールが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" /> モードのときに <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarButton" /> の内容の表示に使用される書式パターンです。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectedDate">
      <summary>選択されている日付、または選択されている日付範囲内の最初の日付を取得または設定します。日付が選択されていない場合は <see langword="null" /> になります。これは依存関係プロパティです。</summary>
      <value>選択されている日付。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectedDates">
      <summary>選択されている日付のコレクションを取得します。</summary>
      <value>現在選択されている日付を含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectedDatesCollection" /> オブジェクト。既定値は空のコレクションです。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectionMode">
      <summary>許可される選択の種類を示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>現在の選択モードを示す値。既定値は <see cref="!:GrapeCity.Windows.InputMan.CalendarSelectionMode.SingleDate" /> です。</value>
      <exception cref="T:System.ArgumentException"> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectionMode" /> プロパティに設定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarSelectionMode" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ShowContextMenu">
      <summary>コンテキストメニューを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        コンテキストメニューを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ShowTrailing">
      <summary>隣接日を表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        隣接日を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode">
      <summary>使用可能な表示モード範囲の開始表示モードを取得または設定します。これは依存関係プロパティです。</summary>
      <value>開始表示モード。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> プロパティより大きい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" nolink="true" /> に設定されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" /> プロパティより大きい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndDisplayMode" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" nolink="true" /> に設定されます。</remarks>
      <exception cref="T:System.ArgumentException"> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" /> プロパティに設定された値が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.TodayBackground">
      <summary>今日の日付ボタンの背景を表すブラシを取得または設定します。これは依存関係プロパティです。</summary>
      <value>今日の日付ボタンの背景を塗りつぶすブラシ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.TodayForeground">
      <summary>今日の日付ボタンの前景を表すブラシを取得または設定します。これは依存関係プロパティです。</summary>
      <value>今日の日付ボタンの前景を塗りつぶすブラシ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekNumberStyle">
      <summary><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumber" /> に適用される <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumber" />。</value>
      <remarks>これは <see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumber" /> のスタイルを設定するためのプロパティです。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekTitleStyle">
      <summary><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitle" /> に適用される <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Windows.Style" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitle" />。</value>
      <remarks>これは <see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitle" /> のスタイルを設定するためのプロパティです。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekTitleStyleSelector">
      <summary>条件に従って <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekTitleStyleSelector" /> の外観を変更するために使用する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekTitleStyleSelector" /> は基本クラスからの単純な実装であり、事前に定義した条件に従って <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> の外観（いくつかのプロパティ）を変更する簡単な手段を提供します。このインタフェースではユーザーの複雑な要件を満たせない場合は、代わりにテンプレートのカスタマイズを使用できます。</remarks>
      <example> 次のサンプルは、Xamlで <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> を使用して <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.WeekTitleStyleSelector" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.CalendarDayButtonStyleSelector" /> の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalendar.xaml" region="StyleSelector_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.YearFormat">
      <summary>年の書式を取得または設定します。これは依存関係プロパティです。</summary>
      <value>年の書式を示す <see cref="T:System.String" /> 値。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.YearFormat" /> は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> コントロールが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Decade" /> モードのときに <see cref="!:GrapeCity.Windows.InputMan.Primitives.CalendarButton" /> の内容の表示に使用される書式パターンです。また、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" nolink="true" /> コントロールが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" /> または <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Decade" nolink="true" /> モードのときには、見出しがこの書式パターンで表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.YearMonthFormat">
      <summary>書式設定された見出しテキストの年月表示書式を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> が <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" /> のときの見出しテキストの書式を定義する <see cref="T:System.String" />。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.YearMonthFormat" /> は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> コントロールが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" /> モードのときに見出しの表示に使用される書式パターンです。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.BeginInit">
      <summary>この要素の初期化プロセスを開始するときに呼び出されます。</summary>
      <exception cref="T:System.InvalidOperationException"> <see cref="M:System.Windows.FrameworkElement.BeginInit" /> が入れ子で呼び出されました。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.EndInit">
      <summary>要素の初期化プロセスが完了したことを示します。</summary>
      <exception cref="T:System.InvalidOperationException">
        要素に対してまだ <see cref="M:System.Windows.FrameworkElement.BeginInit" /> が呼び出されていないときに <see cref="M:System.Windows.FrameworkElement.EndInit" /> が呼び出されました。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.GetDatesInView(GrapeCity.Wpf.SpreadSheet.CellType.Editors.PickDayType)">
      <summary>現在表示されている指定した種類の日付を取得します。</summary>
      <param name="type">取得する日のタイプを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PickDayType" /> 列挙値の１つ。</param>
      <returns>取得条件を満たすすべての日付を含む <see cref="T:System.DateTime" /> 配列。</returns>
      <remarks>
        <para>このメソッドの戻り値は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> に設定されている <see cref="!:GrapeCity.Windows.InputMan.CalendarMode" /> 列挙値によって異なります。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" /> の場合、戻り値はコントロールに表示されている月から取得されます。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" /> の場合、戻り値はコントロールに表示されている年から取得されます。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Decade" /> の場合、戻り値はコントロールに表示されている 10 年から取得されます。 </para>
      </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> <paramref name="type" /> が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PickDayType" /> の無効な値の場合。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.GetDatesInView">
      <summary>現在表示されているすべての日付を取得します。</summary>
      <returns>現在表示されているすべての日付を含む <see cref="T:System.DateTime" /> の配列。</returns>
      <remarks>
        <para>このメソッドの戻り値は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> に設定されている <see cref="!:GrapeCity.Windows.InputMan.CalendarMode" /> 列挙値によって異なります。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" /> の場合、戻り値はコントロールに表示されている月から取得されます。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" /> の場合、戻り値はコントロールに表示されている年から取得されます。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Decade" /> の場合、戻り値はコントロールに表示されている 10 年から取得されます。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.OnClickDate(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClickDateEventArgs)">
      <summary>カレンダーのボタンの上でマウスがクリックされたとき、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ClickDate" /> イベントを発生させるために呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.ClickDateEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.OnDisplayModeChanged(GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventArgs)">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> プロパティが変更されたとき、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayModeChanged" /> イベントを発生させるために呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.CalendarModeChangedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.OnDoubleClickDate(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClickDateEventArgs)">
      <summary>カレンダーのボタンの上でマウスがダブルクリックされたとき、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DoubleClickDate" /> イベントを発生させるために呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.ClickDateEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.OnFocusedDateChanged(GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateEventArgs)">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDate" /> プロパティが変更されたとき、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDateChanged" /> イベントを発生させるために呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.CalendarDateEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.KeyDown" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.OnScrolled(System.Windows.RoutedEventArgs)">
      <summary>前の日付または次の日付に移動するとき、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.Scrolled" /> イベントを発生させるために呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectedDatesChanged" /> ルーティングイベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.Scroll(System.Int32)">
      <summary>指定したオフセット量をスクロールします。</summary>
      <param name="offset">オフセット。</param>
      <remarks>このメソッドは、指定したオフセットだけスクロールするよう <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> に要求しますが、オフセットの単位は表示モードによって異なります。表示モードが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" /> の場合、コントロールは<b>月</b>単位でスクロールし、<see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" /> の場合は<b>年</b>単位、<see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" nolink="true" /> の場合は <b>10 年</b>単位でスクロールします。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ZoomIn">
      <summary>カレンダーにズームインします。</summary>
      <remarks>このメソッドは、表示モードを下位のモードに変更するよう <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> に要求します。つまり、コントロールの表示モードが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" /> のときは何もせず、<see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" /> のときは <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" nolink="true" /> に変更し、<see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Decade" /> のときは <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" nolink="true" /> に変更します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ZoomOut">
      <summary>カレンダーからズームアウトします。</summary>
      <remarks>このメソッドは、表示モードを上位のモードに変更するよう <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> に要求します。つまり、コントロールの表示モードが <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Decade" /> のときは何もせず、<see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" /> のときは <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Decade" nolink="true" /> に変更し、<see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month" /> のときは <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Year" nolink="true" /> に変更します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ClickDate">
      <summary>カレンダーのボタンの上でマウスがクリックされたときに発生します。</summary>
      <remarks>このイベントは、カレンダーのボタンの上でマウスがクリックされたときに発生します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" /> より大きいときは、ボタンの上でマウスをクリックするとカレンダーがズームインします。この場合、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.ClickDate" /> イベントは発生しません。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayModeChanged">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> プロパティが変更された場合に発生します。このプロパティの変更は、ユーザー操作だけでなく、連結やその他の値の設定によっても起こります。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DoubleClickDate">
      <summary>カレンダーのボタンの上でマウスがダブルクリックされたときに発生します。</summary>
      <remarks>このイベントは、カレンダーのボタンの上でマウスがダブルクリックされたときに発生します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DisplayMode" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.StartDisplayMode" /> より大きいときは、ボタンの上でマウスをクリックするとカレンダーがズームインします。この場合、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.DoubleClickDate" /> イベントは発生しません。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDateChanged">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDate" /> プロパティが変更されたとき、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDateChanged" /> イベントを発生させるために呼び出されます。</summary>
      <remarks>
        <para>このイベントは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDate" /> プロパティが変更された場合に発生します。このプロパティの変更は、ユーザー操作だけでなく、連結やその他の値の設定によっても起こります。</para>
        <para><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.FocusedDateChanged" />  イベントは、マウス操作時にはカレンダーのボタンの上でマウスが押されたときに発生し、キーボード操作時にはキーが押されたときに発生します。</para>
        <para>カレンダーがスクロールする場合、このイベントは、マウス操作時には <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.Scrolled" /> イベントの前に発生し、キーボードによる移動または前へ／次へボタンの押し下げ時には <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.Scrolled" nolink="true" /> イベントの後に発生します。  </para>
      </remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.Scrolled">
      <summary>この要素で表示がスクロールされたときに発生します。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> は、前の日付または次の日付に移動するとスクロールします。<b>PageUp</b> を押すか、見出しにある前へボタンをクリックすると、前の日付に移動します。<b>PageDown</b> を押すか、見出しにある次へボタンをクリックすると、次の日付に移動します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar.SelectedDatesChanged">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> の選択が変更されたときに発生します。</summary>
      <remarks>このイベントは、選択が変更されるたびに発生します。選択の変更は、ユーザー操作だけでなく、バインディングや他の値の設定によっても起こります。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox">
      <summary>データ項目の一覧を表示するコントロールを表します。</summary>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> は <see cref="T:System.Windows.Controls.ItemsControl" /> です。これは任意の型のオブジェクト（文字列、画像、パネルなど）のコレクションを格納できることを意味します。詳細については、<see cref="T:System.Windows.Controls.ItemsControl" nolink="true" /> クラスを参照してください。</para>        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" nolink="true" /> には２種類のデータ項目表示モードがあり、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.UseMultipleColumn" /> プロパティによって表示モードを指定します。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.UseMultipleColumn" nolink="true" /> を <see langword="true" /> に設定すると、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" nolink="true" /> のデータはカスタマイズ可能なグリッドに表示されます。</para>        <para>既定では、ユーザーが <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> または <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティを設定すると、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" nolink="true" />コントロールは自動的に列が生成されます。生成される列の型は、<see langword="bool" /> プロパティに連結されている場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListCheckBoxColumn" />、<see langword="ImageSource" /> プロパティに連結されている場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListImageColumn" />、これら以外のプロパティの場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn" /> です。列を生成するかどうかに関わらず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Columns" /> コレクションを使用して実行時にプログラムからコントロールの列を追加、挿入、削除、変更できます。また、XAML で列を指定することも可能で、この場合は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AutoGenerateColumns" /> を false に設定します。独自の列を作成する場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn" /> 型やカスタム列型などの追加の列型を使用できます。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn" nolink="true" /> 型は、シンプルなカスタム列を簡単に作成する手段を提供します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn.SubItemTemplate" /> プロパティを使用して、表示用の内容テンプレートを指定できます。</para><para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> を <see cref="P:System.Windows.Controls.ItemsControl.Items" nolink="true" /> または <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" nolink="true" /> に設定した場合は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.SubItems" /> 内のカスタマイズされた <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn" /> を作成する必要があります。この表示モードでは、<see cref="T:System.Windows.Controls.ItemsControl" nolink="true" /> から継承されたプロパティの一部（<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />、<see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" />、<see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" />l など）が無効になります</para>
         <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.UseMultipleColumn" nolink="true" /> を <see langword="false" /> に設定すると、<td><td><td><para><para><see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" nolink="true" /></para></para></td></td></td><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" nolink="true" /> のデータ項目は <see cref="T:System.Windows.Controls.ItemsControl" nolink="true" /> の既定の表現で表示されます。<br /><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" nolink="true" /> は、項目データを設定するための項目コンテナーとして <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase" /> を生成します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> を項目データとして定義した場合は、<see cref="P:System.Windows.Controls.ContentControl.Content">ListItem.Content</see>、または <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.SubItems" nolink="true" /> 内の最初の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" nolink="true" />  の<see cref="P:System.Windows.Controls.ContentControl.Content" nolink="true">SubItem.Content</see> をリスト項目として表示するため、生成された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase" nolink="true" /> にその Content がラップされます。<br />この表示モードでは、<see cref="T:System.Windows.Controls.ItemsControl" nolink="true" /> から継承されたプロパティの一部（<see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" nolink="true" /> など）が無効になります。. </para>
        <para>
          <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
          <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
            <tr>
              <th>VisualStateGroup 名</th>
              <th>VisualState 名</th>
              <th>説明</th>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Normal</td>
              <td>コントロールが通常状態のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Disabled</td>
              <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>Active</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsActive" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>Inactive</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>Valid</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidFocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidUnfocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
            </tr>
          </table>
        </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AlternatingItemBackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AlternatingItemBackground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AutoGenerateColumnsProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AutoGenerateColumns" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserResizeColumnsProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserResizeColumns" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserSortColumnsProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserSortColumns" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CheckOnClickProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CheckOnClick" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CheckedItemsProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CheckedItems" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ColumnWidthProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ColumnWidth" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HeaderHeightProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HeaderHeight" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HeaderStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HeaderStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HorizontalGridLineBrushProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HorizontalGridLineBrush" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HorizontalGridLineStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HorizontalGridLineStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HorizontalScrollBarVisibilityProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HorizontalScrollBarVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsActiveChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsActiveChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsActiveProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsActive" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsSynchronizedWithCurrentItemProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsSynchronizedWithCurrentItem" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemBackgroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemBackground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemCheckBoxStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemCheckBoxStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemCheckBoxVisibilityProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemCheckBoxVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MaxColumnWidthProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MaxColumnWidth" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MinColumnWidthProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MinColumnWidth" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedEvent">
      <summary><see cref="E:GrapeCity.Windows.InputMan.GcListBox.Selected" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedIndexProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedIndex" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedItemProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedItem" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValuePathProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValuePath" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValueProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectionChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectionChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ShowHeaderProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ShowHeader" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SubItemStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SubItemStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.UnselectedEvent">
      <summary><see cref="E:GrapeCity.Windows.InputMan.GcListBox.Unselected" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.UseMultipleColumnProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.UseMultipleColumn" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.VerticalGridLineBrushProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.VerticalGridLineBrush" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.VerticalGridLineStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.VerticalGridLineStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.VerticalScrollBarVisibilityProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.VerticalScrollBarVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AlternatingItemBackground">
      <summary><see cref="P:GrapeCity.Windows.InputMan.GcListBox.AlternationIndex" /> が１である項目の背景の描画に使用される <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Windows.InputMan.GcListBox.AlternationIndex" /> が1である項目の背景の描画に使用されるブラシ。</value>
      <remarks>コントロール内の項目はすべて、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemBackground" /> プロパティを使用して背景が描画されます。ただし、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AlternatingItemBackground" /> プロパティの値が <see langword="null" /> でない場合は、その値によって、<see cref="P:GrapeCity.Windows.InputMan.GcListBox.AlternationIndex" /> が１である項目の既定の背景値がオーバーライドされます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AutoGenerateColumns">
      <summary>カラムを自動生成するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        カラムを自動生成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Columns" /> コレクションは、生成された列が含まれているかどうかに関わらず、実行時に変更できます。ただし、XAML で列を指定する場合は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AutoGenerateColumns" /> を false に設定する必要があります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserResizeColumns">
      <summary>ユーザーがマウスを使用してカラムの幅を調整できるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがカラムのサイズを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <remarks>個々の列に対してこの動作を設定するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserResize" /> プロパティを設定します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserResize" nolink="true" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserResizeColumns" /> プロパティが両方とも設定されている場合は、false の値が true の値より優先されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserSortColumns">
      <summary>ユーザーがカラムヘッダをクリックしてカラムを並べ替えられるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ユーザーがカラムを並べ替えられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>個々の列に対してこの動作を設定するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserSort" /> プロパティを設定します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserSort" nolink="true" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserSortColumns" /> プロパティが両方とも設定されている場合は、false の値が true の値より優先されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CheckOnClick">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> をマウスでクリックしたときに <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.IsChecked" /> プロパティの値を変更するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        マウスのクリック操作によって <see langword="true" /> を変更する場合は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.IsChecked" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CheckedItems">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.IsChecked" /> プロパティが <see langword="true" /> に設定されているすべての <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> を取得します。これは読み取り専用の依存関係プロパティです。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ColumnWidth">
      <summary>コントロールのカラムの標準幅または自動サイズ設定モードを取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> の列の標準幅または自動サイズ設定モードを表す構造体。既定値は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.SizeToHeader" /> です。</value>
      <remarks>既定では、カラムの幅はその内容に合わせて自動的に調整されます。 このプロパティは、コントロール内の明示的な Width 設定を持たないすべてのカラムの幅設定に影響します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Columns">
      <summary>コントロールのすべてのカラムを含むコレクションを取得します。</summary>
      <value>コントロールの列。</value>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Columns" /> は、列の追加や削除、または列のプロパティの更新に使用します。</para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Columns" nolink="true" /> コレクションに含まれる各列は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> の１つの列を定義します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Columns" nolink="true" /> コレクションの列は <see cref="!:GrapeCity.Windows.InputMan.ListColumn" /> から派生している必要があります。</para>
        <para> 次の表は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" nolink="true" /> に用意されている３つの定義済み列型を示します。 <table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>列型</th><th>データ型</th></tr><tr><td><see cref="!:GrapeCity.Windows.InputMan.ListTextColumn" /></td><td>テキストの表示に使用されます。</td></tr><tr><td><see cref="!:GrapeCity.Windows.InputMan.ListCheckBoxColumn" /></td><td>ブール型データの表示に使用されます。</td></tr><tr><td><see cref="!:GrapeCity.Windows.InputMan.ListImageColumn" /></td><td>画像の表示に使用されます。</td></tr></table></para>
        <para>さらに、<see cref="!:GrapeCity.Windows.InputMan.ListTemplateColumn" /> を使用して独自のカスタム列を定義することもできます。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> を <see cref="P:System.Windows.Controls.ItemsControl.Items" /> または <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 設定した場合は、<see cref="!:GrapeCity.Windows.InputMan.ListSubItemColumn" /> 内の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> を表示するために <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.SubItems" /> が使用されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Columns" nolink="true" /> コレクションは、生成された列が含まれているかどうかに関わらず、実行時に変更できます。ただし、XAML で列を指定する場合は、<see cref="!:GrapeCity.Windows.InputMan.GcListBox.AutoGenerateColumns" /> を true に設定しないでください。</para>
        <para> 複数の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Columns" nolink="true" /> の <see cref="!:GrapeCity.Windows.InputMan.GcListBox" /> コレクションに、同じ列を追加することはできません。そうすると、<see cref="T:System.InvalidOperationException" /> が発生します。 </para>
      </remarks>
      <example> 次のサンプルコードは、XAMLで <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Columns" /> コレクションの作成方法を示します。 このサンプルは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> クラスで使用できるより大きなサンプルの一部です。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcListBox.xaml" region="ListBox_004" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HeaderHeight">
      <summary>カラムヘッダ行の高さを取得または設定します。これは依存関係プロパティです。</summary>
      <value>カラムヘッダ行の高さ（ピクセル単位）。既定値は <see cref="F:System.Double.NaN">Double.NaN</see>. です。</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> このプロパティを設定するとき、指定した値が 4 より小さいか、32768 を超えています。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HeaderStyle">
      <summary>カラムヘッダの描画時に使用されるスタイルを取得または設定します。これは依存関係プロパティです。</summary>
      <value>カラムヘッダに適用されるスタイル。既定値は <see langword="null" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HorizontalGridLineBrush">
      <summary>水平グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" />を取得または設定します。これは依存関係プロパティです。</summary>
      <value>グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HorizontalGridLineStyle">
      <summary>各水平グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.InputMan.LineStyle" />列挙値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>各グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.InputMan.LineStyle" />列挙値。</value>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.InputMan.LineStyle" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.HorizontalScrollBarVisibility">
      <summary>水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を表示するかどうかを示す値を取得または設定します。</summary>
      <value>水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を表示するかどうかを示す <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 値。既定値は <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsActive">
      <summary>コントロールにキーボードフォーカスがあるかどうかを示す値を取得します。</summary>
      <value>
        このインスタンスにキーボードフォーカスがある場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>キーボードフォーカスがコントロールまたはコントロールのサブツリーにある場合、そのコントロールはアクティブです。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsSynchronizedWithCurrentItem">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedItem" /> を <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティ内の現在の項目と常に同期するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        <see langword="true" /> が現在の項目と常に同期する場合は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedItem" />。<see langword="false" /> が現在の項目と同期しない場合は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedItem" nolink="true" />。<see langword="null" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedItem" nolink="true" /> を使用する場合にのみ、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> が現在の項目と同期する場合は <see cref="T:System.ComponentModel.ICollectionView" />。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemBackground">
      <summary><see cref="T:System.Windows.Media.Brush" /> が0である項目の背景の描画に使用される <see cref="P:GrapeCity.Windows.InputMan.GcListBox.AlternationIndex" /> を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Windows.InputMan.GcListBox.AlternationIndex" /> が0である項目の背景の描画に使用されるブラシ。</value>
      <remarks>コントロール内の項目はすべて、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemBackground" /> プロパティを使用して背景が描画されます。ただし、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AlternatingItemBackground" /> プロパティの値が <see langword="null" /> でない場合は、その値によって、<see cref="P:GrapeCity.Windows.InputMan.GcListBox.AlternationIndex" /> が0である項目の既定の背景値がオーバーライドされます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemCheckBoxStyle">
      <summary>各 <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> の最初のサブ項目に含まれる <see cref="T:System.Windows.Controls.CheckBox" /> の描画時に使用されるスタイルを取得または設定します。これは依存関係プロパティです。</summary>
      <value>最初のサブ項目に含まれる <see cref="T:System.Windows.Controls.CheckBox" /> に適用されるスタイル。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemCheckBoxVisibility">
      <summary>各 <see cref="T:System.Windows.Controls.CheckBox" /> の最初のサブ項目に含まれる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> の表示設定を示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>最初のサブ項目に含まれる <see cref="T:System.Windows.Controls.CheckBox" /> の表示設定を示す列挙値の 1 つ。既定値は <see cref="F:System.Windows.Visibility.Collapsed" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MaxColumnWidth">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> の列の最大幅を取得または設定します。これは依存関係プロパティです。</summary>
      <value>カラムの最大幅（ピクセル単位）。既定値は <see cref="F:System.Double.PositiveInfinity">Double.PositiveInfinity</see> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MinColumnWidth">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> の列の最小幅を取得または設定します。これは依存関係プロパティです。</summary>
      <value>カラムの最小幅（ピクセル単位）。既定値は 20 です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MoveDownCommand">
      <summary>選択項目を次の項目に移動する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MoveDownCommand" /> コマンドを表します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MoveToEndCommand">
      <summary>選択項目を最後の項目に移動する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MoveToEndCommand" /> コマンドを表します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MoveToHomeCommand">
      <summary>選択項目を最初の項目に移動する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MoveToHomeCommand" /> コマンドを表します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MoveUpCommand">
      <summary>選択項目を前の項目に移動する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MoveUpCommand" /> コマンドを表します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedIndex">
      <summary>選択されている項目の表示インデックスを取得または設定します。これは依存関係プロパティです。</summary>
      <value>選択されている項目の表示インデックス。既定値は -1 です。</value>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedIndex" /> は表示インデックスです。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException"> 選択されたインデックスが -１未満であるか、<see cref="P:System.Windows.Controls.ItemsControl.Items" /> の数を超えています。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedItem">
      <summary>選択されている項目を取得または設定します。これは依存関係プロパティです。</summary>
      <value>選択されている項目。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValue">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValuePath" />を使用して取得された、選択されている項目の値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValuePath" /> を使用して取得された、選択されている項目の値。項目が選択されていない場合は <see langword="null" />。既定値は <see langword="null" /> です。</value>
      <example> 次のサンプルコードは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValue" />プロパティおよび<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValuePath" />の使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcListBox.xaml" region="ListBox_006" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValuePath">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValue" /> プロパティの <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedItem" /> プロパティを取得するために使用されるプロパティパスを取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValue" /> プロパティの <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedItem" /> プロパティを取得するために使用されるプロパティパス。既定値は <see cref="F:System.String.Empty" /> です。</value>
      <example> 次のサンプルコードは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValue" />プロパティおよび<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedValuePath" />の使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcListBox.xaml" region="ListBox_006" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ShowHeader">
      <summary>カラムヘッダを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>カラムヘッダを表示するかどうかを示す値。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SubItemStyle">
      <summary>サブ項目のデータの描画時に使用されるスタイルを取得または設定します。これは依存関係プロパティです。</summary>
      <value>サブ項目に適用されるスタイル。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.UseMultipleColumn">
      <summary>グリッドを使用してデータを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        グリッドを使用してデータを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.VerticalGridLineBrush">
      <summary>垂直グリッド線の描画に使用される<see cref="T:System.Windows.Media.Brush" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.VerticalGridLineStyle">
      <summary>各垂直グリッド線のスタイルを示す<see cref="!:GrapeCity.Windows.InputMan.LineStyle" /> 列挙値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>各グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.InputMan.LineStyle" />列挙値。</value>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.InputMan.LineStyle" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.VerticalScrollBarVisibility">
      <summary>垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を表示するかどうかを示す値を取得または設定します。</summary>
      <value>垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を表示するかどうかを示す <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 値。既定値は <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" /> です。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AddSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary><see cref="E:GrapeCity.Windows.InputMan.GcListBox.Selected" /> 添付イベントのハンドラを追加します。</summary>
      <param name="element">このイベントをリッスンする要素。</param>
      <param name="handler">追加するイベントハンドラ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AddUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary><see cref="E:GrapeCity.Windows.InputMan.GcListBox.Unselected" /> 添付イベントのハンドラを追加します。</summary>
      <param name="element">このイベントをリッスンする要素。</param>
      <param name="handler">追加するイベントハンドラ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.BeginInit">
      <summary>この要素の初期化プロセスを開始します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary><see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> メソッドの効果を取り消します。</summary>
      <param name="element">コンテナー要素。</param>
      <param name="item">項目。</param>
      <remarks><see cref="T:System.Windows.Controls.ItemsControl" /> を継承したクラスでは、このメソッドをオーバーライドして、<see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> メソッドで実行された１つ以上のアクションを元に戻すことができます。ClearContainerForItemOverride をオーバーライドする場合は必ず、独自に作成する ClearContainerForItemOverride 実装から基本実装を呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.EndInit">
      <summary>要素の初期化プロセスが完了したことを示します。</summary>
      <exception cref="T:System.InvalidOperationException">
        要素に対してまだ <see cref="M:System.Windows.FrameworkElement.BeginInit" /> が呼び出されていないときに <see cref="M:System.Windows.FrameworkElement.EndInit" /> が呼び出されました。</exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.GetContainerForItemOverride">
      <summary>特定の項目の表示に使用される要素を作成または識別します。</summary>
      <returns>特定の項目の表示に使用される要素。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.GetItemDisplayIndex(System.Int32)">
      <summary>項目の表示インデックスを取得します。</summary>
      <param name="itemIndex"><see cref="P:System.Windows.Controls.ItemsControl.Items" />に基づく項目インデックス。</param>
      <returns>表示インデックスの値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="itemIndex" /> が 0 未満か、項目数以上です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.GetItemIndex(System.Int32)">
      <summary><see cref="P:System.Windows.Controls.ItemsControl.Items" />に基づく項目インデックスを取得します。</summary>
      <param name="itemDisplayIndex">項目の表示インデックス。</param>
      <returns><see cref="P:System.Windows.Controls.ItemsControl.Items" /> に基づく項目インデックスの値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="itemDisplayIndex" /> が 0 未満か、項目数以上です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が自身のコンテナーかどうか（または自身のコンテナーにすることができるかどうか）を判断します。</summary>
      <param name="item">確認する項目。</param>
      <returns>項目が自身のコンテナーである（または自身のコンテナーにすることができる）場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MeasureOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの Measure パスの動作を提供します。このメソッドをオーバーライドして独自の Measure パスの動作を定義できます。</summary>
      <param name="availableSize">このオブジェクトが子オブジェクトに与えることができるサイズ。値として無限大（<see cref="F:System.Double.PositiveInfinity" />）を指定し、このオブジェクトがどのような内容にもサイズを合わせられるようにすることができます。</param>
      <returns>子オブジェクトの割り当てサイズの計算や、固定コンテナーサイズなどの他の考慮事項に基づいて、このオブジェクトでレイアウト時に必要と判断されたサイズ。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.OnAutoGeneratingColumn(GrapeCity.Wpf.SpreadSheet.CellType.Editors.AutoGeneratingListColumnEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AutoGeneratingColumn" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.AutoGeneratingListColumnEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.OnIsActiveChanged(System.Windows.RoutedEventArgs)">
      <summary>未処理の <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsActiveChanged" />イベントがこの要素で発生したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.RoutedEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException"> <paramref name="e" /> が <see langword="null" /> の場合発生します。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.OnItemCheckChanged(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ItemCheckEventArgs)">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcListBox.ItemCheck" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.ItemCheckEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary><see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />。</param>
      <remarks>このメソッドは、<see cref="!:GrapeCity.Windows.InputMan.GcListBox" /> の項目コレクションが変更されたときに GcListBox の内容を調整します。必要であれば、このメソッドは選択されている項目を変更します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.OnPrepareListItem(GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.PrepareListItem" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="!:GrapeCity.Windows.InputMan.PrepareListItemEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" />のいずれかの依存関係プロパティの有効値が更新されるたびに呼び出されます。変更が発生した具体的な依存関係プロパティが引数パラメーターで報告されます。<see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティと変更前後の値を含むイベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcListBox.SelectionChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定した項目を表示するために、指定した要素を準備します。</summary>
      <param name="element">指定した項目の表示に使用される要素。</param>
      <param name="item">表示する項目。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.RemoveSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary><see cref="E:GrapeCity.Windows.InputMan.GcListBox.Selected" /> 添付イベントのハンドラを削除します。</summary>
      <param name="element">このイベントをリッスンする要素。</param>
      <param name="handler">削除するイベントハンドラ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.RemoveUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary><see cref="E:GrapeCity.Windows.InputMan.GcListBox.Unselected" /> 添付イベントのハンドラを削除します。</summary>
      <param name="element">このイベントをリッスンする要素。</param>
      <param name="handler">削除するイベントハンドラ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ScrollToIndex(System.Int32)">
      <summary>オブジェクトが表示されるようにスクロールします。もし表示されていない場合は、ビューポートの上側または下側に揃う位置にスクロールして表示されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Sort(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn,System.Nullable{System.ComponentModel.ListSortDirection})">
      <summary>指定した<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" /> を特定の方向にソートします。</summary>
      <param name="column">ソートされた <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn" />。</param>
      <param name="sortDirection">並べ替え操作の方向。</param>
      <exception cref="T:System.InvalidOperationException"> UseMultipleColumn が false の場合、カラムの並べ替えはできません。 </exception>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AutoGeneratingColumn">
      <summary><see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> プロパティが変更され、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.AutoGenerateColumns" /> プロパティが <see langword="true" /> のときに、連結されたデータ型のパブリックな非静的プロパティごとに１回ずつ発生します。</summary>
      <remarks>このイベントは、生成された各カラムがコントロールに追加される前にそのカラムを変更する機会を提供します。 また、このイベントをキャンセルして特定のカラムが追加されないようにすることもできます。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsActiveChanged">
      <summary>この要素の<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.IsActive" /> プロパティの値が変更されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemCheck">
      <summary><see cref="!:GrapeCity.Windows.InputMan.ListItem.IsChecked" /> が変更されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.PrepareListItem">
      <summary>データを提示する ListItem を準備するときに 1 回だけ発生します。</summary>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectionChanged">
      <summary>この要素の<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.SelectedItems" /> プロパティの値が変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask">
      <summary>特定の書式をユーザーが定義できるエディタコントロールを表します。</summary>
      <remarks>
        <para>ユーザーはさまざまな <see cref="!:GrapeCity.Windows.InputMan.Fields.MaskField" /> を <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" /> に追加して目的の書式を設定できます。テキストフィルタフィールド、リテラル表示フィールド、および列挙値選択フィールドがサポートされています。</para>
        <para>現在の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" nolink="true" /> の状態を知らせるヒントとして透かし文字列を表示することもできます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkNull" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.WatermarkDisplayNull" /> を設定することにより、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" nolink="true" /> の内容が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" nolink="true" /> の場合に異なる文字列を表示できます。</para>
        <para>
          <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
          <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
            <tr>
              <th>VisualStateGroup 名</th>
              <th>VisualState 名</th>
              <th>説明</th>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Normal</td>
              <td>コントロールが通常状態のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Disabled</td>
              <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>ReadOnly</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsReadOnly" /> が <see langword="true" /> のときの外観を表します。</td>l </tr>
            <tr>
              <td>CommonStates</td>
              <td>MouseOver</td>
              <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>Active</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>Inactive</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Full</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Completed</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Empty</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Part</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsCompleted" nolink="true" /> 、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>Valid</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidFocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidUnfocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
            </tr>
          </table>
        </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.AutoConvertProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.AutoConvert" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.DefaultActiveFieldIndexProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.DefaultActiveFieldIndex" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ExitOnLastCharProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.ExitOnLastChar" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.FieldSetProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.FieldSet" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.HighlightTextProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.HighlightText" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.PromptCharProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.PromptChar" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.RecommendedValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.RecommendedValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ShowLiteralsProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.ShowLiterals" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ShowRecommendedValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.ShowRecommendedValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.SpinButtonStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.SpinButtonStyle" /> 依存関係プロパティを示します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.SpinButtonVisibilityProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.SpinButtonVisibility" /> 依存関係プロパティを示します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.TabActionProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.TabAction" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ValueChangedEvent">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.ValueChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.Value" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ActiveField">
      <summary>現在アクティブであり、キャレットが表示されて入力が受け付けられるフィールドを取得します。</summary>
      <value>現在のアクティブフィールドを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field" /> 値。</value>
      <remarks>このプロパティは、アクティブなフィールドを示します。これはキャレットがそのフィールド内にあることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ApplyRecommendedValueCommand">
      <summary>入力候補値を適用するよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ApplyRecommendedValueCommand" /> コマンドを表します。</summary>
      <remarks>
        <para>入力候補値が "123456789" で、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.FieldSet" /> が "\D{3}-\D{6}" の場合、このコマンドは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" /> にこの値を適用します。このコマンドの既定のキージェスチャは Ctrl+Enter です。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.FieldSet" nolink="true" /> にフィールドが含まれていない場合は、入力候補値は表示されず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。</para>
        <para>入力候補値の優先度は透かしよりも下です。透かしが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_003" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.AutoConvert">
      <summary>入力された文字を入力コントロールに従って自動的に変換するかどうかを取得または設定します。<para>これは依存関係プロパティです。 </para></summary>
      <value>
        入力コントロールに従って文字が自動的に変換される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" /> の変換動作を制御します。<see langword="false" /> に設定した場合、コントロールの入力文字は、受け入れ可能な対応する文字に変換されません。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.DefaultActiveFieldIndex">
      <summary>既定のアクティブな編集可能フィールドのインデックスを取得または設定します。これは依存関係プロパティです。</summary>
      <value>既定のアクティブフィールドを示す <see cref="T:System.Int32" /> 値。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.DefaultActiveFieldIndex" /> は、編集可能フィールドのインデックスを表します。コントロールがフォーカスを取得すると、既定のアクティブフィールドがアクティブになります。-１より大きい値を指定する必要があります。編集可能な最後のフィールドのインデックスより大きい値を設定すると、コントロールがキーボードフォーカスを取得したときに編集可能な最後のフィールドがアクティブになります。</remarks>
      <example> 次のサンプルコードは、DefaultActiveFieldIndexを使用して、mask1がフォーカスを取得したときにキャレット位置を2番目の編集可能なフィールドに移動する方法を説明します。 <code>
                GcMask mask1 = new GcMask();
                mask1.FieldSet.Fields.AddRange("\D{3}-\D{4});
                mask1.DefaultActiveFieldIndex = 1;
              </code></example>
      <exception cref="T:System.ArgumentException"> 指定された値が-1未満です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ExitOnLastChar">
      <summary>コントロールに最後の文字が入力されると同時にフォーカスがタブオーダーの次のコントロールに移動するかどうかを取得または設定します。</summary>
      <value>
        コントロールに入力コントロールで定義された最後の文字が入力されると同時にフォーカスがタブオーダーの次のコントロールに移動する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティが <see langword="true" /> に設定されている場合、ユーザーが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" /> セルの最後まで入力すると、キーボードフォーカスが自動的に次のコントロールに設定されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:System.Boolean" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.FieldSet">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask" /> のすべてのフィールドのラッパーを示す <see cref="!:GrapeCity.Windows.InputMan.Fields.MaskFieldSet" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>フィールドコレクションラッパーを表す <see cref="!:GrapeCity.Windows.InputMan.Fields.MaskFieldSet" />。</value>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.FieldSet" /> は依存関係プロパティです。XAML で "\D{3}-(aa|bb|cc)" のような書式を指定することにより、このプロパティを設定できます。また、setter によってこのプロパティを設定することもできます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.HighlightText">
      <summary>コントロールがフォーカスを受け取ったときのテキストの選択方法を取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.HighlightText" /> 列挙値の１つ。既定値は <see cref="!:GrapeCity.Windows.InputMan.HighlightText.None" /> です。</value>
      <remarks>このプロパティを使用して、コントロールがキーボードフォーカスを取得したときの動作を制御できます。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" /> のすべてのテキストを選択するか、現在アクティブなフィールドを選択するか、何も選択しないかを指定します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.HighlightText" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.PromptChar">
      <summary>入力用のプロンプトとして使用される文字を取得または設定します。</summary>
      <value>入力用のプロンプトとして使用される文字。既定値はアンダースコア（"_"）です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が有効な文字ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>エディタの既定値を示す <see cref="T:System.String" /> 値。</value>
      <remarks>
        <para> 入力候補値は、入力候補となる文字列をユーザーにヒントとして提示するために使用されます。</para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。 </para>
        <para>入力候補値の優先度は透かしよりも下です。透かしが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ShowLiterals">
      <summary>ユーザーの入力時にリテラルを表示するかどうかを取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.ShowLiterals" /> 列挙値の１つ。既定値は <see cref="!:GrapeCity.Windows.InputMan.ShowLiterals.Always" /> です。</value>
      <remarks>このプロパティは、ユーザーがテキストを入力するときにリテラルを表示するかどうかを制御します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.ShowLiterals" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        入力候補値を表示する場合は<see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。 </para>
        <para>入力候補値の優先度は透かしよりも下です。透かしが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.SpinButtonStyle">
      <summary>スピンボタンが描画されるときに使用されるスピンボタンのスタイルを取得または設定します。</summary>
      <value>スピンボタンが描画されるときに使用されるスタイル。</value>
      <remarks>このプロパティによって、スピンボタンの表示設定、レイアウト、動作などを設定できます。</remarks>
      <example> 次のサンプルコードは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinButtonStyle" /> プロパティの使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\SideButton.xaml" region="SideButton_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.SpinButtonVisibility">
      <summary>スピンサイドボタンの <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>スピンサイドボタンの表示設定を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility" /> 列挙体。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.NotShown" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.SpinButtonVisibility" /> プロパティは、スピンサイドボタンが常に表示されるか、コントロールがフォーカスを取得したときにのみ表示されるか、まったく表示されないかを決定します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.TabAction">
      <summary>［Tab］キーを押したときにフォーカスを前後のコントロールに移動するか、またはコントロール内の前後のフィールドに移動するかを取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.TabAction" /> 列挙値の１つ。既定値は <see cref="!:GrapeCity.Windows.InputMan.TabAction.Control" /> です。</value>
      <remarks>このプロパティは、ユーザーが［Tab］キーを押したときの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" /> の動作を定義します。フィールド間でキャレットを移動するか、コントロール間でフォーカスを移動できます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.TabAction" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.Value">
      <summary>コントロールに割り当てられている基になる値を取得または設定します。</summary>
      <value>マスクコントロールの値を示す <see cref="T:System.String" /> 値。</value>
      <remarks>これは <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.Text" /> プロパティとは異なります。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.Value" /> にはリテラルは含まれません。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.OnValueChanged(System.Windows.RoutedEventArgs)">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask.ValueChanged" /> ルーティングイベントを発生します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<b>OnValueChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。<note> 派生クラスで <b>OnValueChanged</b> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <b>OnValueChanged</b> メソッドを呼び出してください。  </note></remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask.ValueChanged">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask" /> で値プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="!:GrapeCity.Windows.InputMan.GcMask.Value" /> プロパティがコードの実行またはユーザー操作によって変更された場合に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber">
      <summary>数字の入力やドロップダウン電卓による計算を実行できる数値エディタコントロールを表します。</summary>
      <remarks>
        <para> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> コントロールは正および負の数値の入力機能を備えており、機能的な数値入力インタフェースを迅速かつ効率的に設計するのに役立ちます。ユーザーはデータの入力中にいつでもマイナス記号（"-"）を押して正の値を負に切り替えることができます。また、プラス記号（"+"）を押すと負の値が正に変わります。 </para>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> コントロールには固有の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.FieldSet" /> プロパティがあり、このプロパティに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" /> 値を設定することで、異なる桁パターン、符号文字列、および小数点記号を使用できます。書式を使用してユーザーの入力動作を制限できます。さらに、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" /> プロパティを設定することによって値の範囲を限定することも可能です。 </para>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> コントロールは表示フィールドをサポートします。新しい <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet" /> プロパティを設定するか、その内容を変更すると、コントロールがキーボードフォーカスを失ったときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> の表示テキストが変更されます。 </para>
        <para> ユーザーはドロップダウン電卓を開いて簡単に計算を実行できます。ドロップダウン電卓の表示や動作は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownCalculatorStyle" /> プロパティによって定義します。 </para>
        <para>
          <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
          <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
            <tr>
              <th>VisualStateGroup 名</th>
              <th>VisualState 名</th>
              <th>説明</th>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Normal</td>
              <td>コントロールが通常状態のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>Disabled</td>
              <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>CommonStates</td>
              <td>ReadOnly</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsReadOnly" /> が <see langword="true" /> のときの外観を表します。</td></tr>
            <tr>
              <td>CommonStates</td>
              <td>MouseOver</td>
              <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>ActiveDropDown</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.IsDropDownOpen" /> がどちらも <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>Active</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>ActiveStates</td>
              <td>Inactive</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Full</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Completed</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Empty</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>InputStates</td>
              <td>Part</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditorControl.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>SignStates</td>
              <td>Negative</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SignState" /> が <see cref="!:GrapeCity.Windows.InputMan.SignState.Negative" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>SignStates</td>
              <td>Positive</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SignState" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.SignState.Positive" /> のときの外観を表します。</td>
            </tr>
            <tr>
              <td>SignStates</td>
              <td>NoSign</td>
              <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SignState" nolink="true" /> が <see cref="!:GrapeCity.Windows.InputMan.SignState.None" /> を返すときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>Valid</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidFocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
            </tr>
            <tr>
              <td>ValidationStates</td>
              <td>InvalidUnfocused</td>
              <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
            </tr>
          </table>
        </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.AllowDeleteToNullProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.AllowDeleteToNull" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.AllowDropDownOpenProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.AllowDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.AutoOpenDropDownProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.AutoOpenDropDown" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ControlValidatorSetProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.ControlValidatorSet" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DisplayFieldSetProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.DisplayFieldSet" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownButtonStyleProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.DropDownButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownButtonVisibilityProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.DropDownButtonVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownCalculatorStyleProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.DropDownCalculatorStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownWindowStyleProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.DropDownWindowStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.FieldSetProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.FieldSet" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.HighlightTextProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.HighlightText" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.IsDropDownOpenProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.IsDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.MaxValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.MinValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.NegativeForegroundProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.NegativeForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.RecommendedValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.RecommendedValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ShowRecommendedValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.ShowRecommendedValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SignStateProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SignState" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinButtonStyleProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.SpinButtonStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinButtonVisibilityProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.SpinButtonVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinIncrementValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.SpinIncrementValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinModeProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.SpinMode" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ValidationTriggerProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.ValidationTrigger" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ValueChangedEvent">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ValueChanged" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.Value" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkDisplayZeroForegroundProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.WatermarkDisplayZeroForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkDisplayZeroProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.WatermarkDisplayZero" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkZeroForegroundProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.WatermarkZeroForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkZeroProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.WatermarkZero" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ActiveField">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の現在アクティブなフィールドを取得します。</summary>
      <value>アクティブフィールドを示す <see cref="!:GrapeCity.Windows.InputMan.Fields.Primitives.Field" /> 値。</value>
      <remarks>アクティブフィールドとは、現在の入力フィールドを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.AllowDeleteToNull">
      <summary>UI での削除操作によってすべてのテキストが削除されたときに値を<see langword="null" /> と 0 のどちらにするかを示す値を取得または設定します。</summary>
      <value>UI での削除操作によってすべてのテキストが削除されたときに値を <see langword="null" /> にするかどうかを示す <see cref="T:System.Boolean" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.AllowDropDownOpen">
      <summary>ドロップダウンを開けるかどうかを示す値を取得または設定します。</summary>
      <value>
        ドロップダウンを開くことを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand">
      <summary>入力候補値を適用するよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" /> コマンドを表します。</summary>
      <remarks>
        <para>入力候補値が "123.45" で、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ShowRecommendedValue" /> が <see langword="true" /> の場合、このコマンドは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> にこの値を適用します。このコマンドの既定のキージェスチャは Ctrl+Enter です。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。</para>
        <para>入力候補値の優先度は表示フィールドおよび透かしよりも下です。透かしまたは表示フィールドが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" nolink="true" /> は機能します。  </para>
      </remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_005" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.AutoOpenDropDown">
      <summary>コントロールがアクティブになったときにドロップダウンが自動的に開くかどうかを示す値を取得または設定します。</summary>
      <value>
        コントロールがアクティブになったときにドロップダウンが自動的に開く場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ControlValidatorSet">
      <summary><see cref="!:GrapeCity.Windows.InputMan.ControlValidatorSet" /> のコレクションを示す <see cref="!:GrapeCity.Windows.InputMan.ControlValidator" /> を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ControlValidatorSet" /> プロパティの <see cref="!:GrapeCity.Windows.InputMan.ControlValidatorSet" /> 値。既定値は <see langword="null" /> です。</value>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> では、<see cref="!:GrapeCity.Windows.InputMan.GcNumber.Value" /> プロパティが有効かどうかを検証するために <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" /> を定義できます。このコレクションに含まれる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" nolink="true" /> が１つずつ検証され、ある１つの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" nolink="true" /> で不合格になると検証は終了します。</remarks>
      <example> 次のサンプルコードは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" />を使用してコントロール値を検証する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcNumber.xaml" region="ControlValidator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Decimal">
      <summary>現在の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> の小数部の値を取得します。 <seealso cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /><seealso cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /><seealso cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Integer" /></summary>
      <value>入力された数値の小数部を示す null 許容の 10 進数値。</value>
      <remarks>
        <para>このプロパティを使用して、実行時に現在の値の小数部を取得できます。また、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Integer" /> プロパティを使用して整数部を取得することもできます。例：</para>
        <para> number1.Value = -1234.120<br /> この例では、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Decimal" /> は -0.12 を返し、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Integer" nolink="true" /> プロパティは -1234 を返します。</para>
        <para> number1.Value = 1234<br />この例では、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Decimal" nolink="true" /> は０を返し、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Integer" nolink="true" /> プロパティは 1234 を返します。</para>
        <para>基になる値が <see langword="null" /> に設定されている場合、このプロパティは <see langword="null" /> を返します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DisplayFieldSet">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.NumberDisplayFieldSet" />の<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" />を取得または設定します。</summary>
      <value>表示フィールドセットのコレクションを示す <see cref="!:GrapeCity.Windows.InputMan.Fields.NumberDisplayFieldSet" /> オブジェクト。</value>
      <remarks>このプロパティは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> のラッパーを提供します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownButtonStyle">
      <summary>ドロップダウンボタンが描画されるときに使用されるドロップダウンボタンのスタイルを取得または設定します。</summary>
      <value>ドロップダウンボタンに使用される <see cref="T:System.Windows.Style" />。</value>
      <remarks>このプロパティによって、ドロップダウンボタンの表示設定、レイアウト、動作などを設定できます。</remarks>
      <example> 次のサンプルコードは、<see cref="!:GrapeCity.Windows.InputMan.GcNumber.DropDownButtonStyle" /> および <see cref="!:GrapeCity.Windows.InputMan.GcNumber.SpinButtonStyle" /> プロパティの使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\SideButton.xaml" region="SideButton_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownButtonVisibility">
      <summary>ドロップダウンサイドボタンの <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>スピンサイドボタンの表示設定を示す <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> 列挙体。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.NotShown" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownButtonVisibility" /> プロパティは、ドロップダウンサイドボタンが常に表示されるか、コントロールがアクティブになったときにのみ表示されるか、まったく表示されないかを決定します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownCalculatorStyle">
      <summary>ドロップダウン電卓が描画されるときに使用されるドロップダウン電卓のスタイルを取得または設定します。</summary>
      <value>ドロップダウン電卓のプロパティの設定に使用される <see cref="T:System.Windows.Style" />。既定値は <see langword="null" /> です。</value>
      <remarks>このプロパティによって、ドロップダウン電卓の表示設定、レイアウト、動作などを設定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownWindowStyle">
      <summary>ドロップダウンウィンドウが描画されるときに使用されるドロップダウンウィンドウのスタイルを取得または設定します。</summary>
      <value>ドロップダウンウィンドウに適用される <see cref="T:System.Windows.Style" />。</value>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" /> に使用されるスタイル。このスタイルによって、<see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" nolink="true" /> のサイズ、ドロップダウンアニメーション、ドロップダウン方向などのプロパティを設定できます。</remarks>
      <example> 次のサンプルコードは、<see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" />のスタイルの設定方法を示します。このサンプルには、コントロールの <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" nolink="true" /> にいくつかのプロパティを設定する方法が含まれています。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\DropDownWindow.xaml" region="DropDownWindow_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.FieldSet">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の <see cref="!:GrapeCity.Windows.InputMan.Fields.NumberFieldSet" /> 値を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.FieldSet" /> プロパティの <see cref="!:GrapeCity.Windows.InputMan.Fields.NumberFieldSet" /> 値。</value>
      <remarks>ユーザーはこのプロパティによって <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> のフィールドを独自に定義できます。このプロパティを設定するにはいくつかの方法があります。たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" /> インスタンスを作成したり、XAML コードで <see cref="T:System.Windows.Style" /> によって設定したりすることが可能です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.HighlightText">
      <summary>コントロールがフォーカスを受け取ったときにテキストを強調表示するかどうかを示す値を取得または設定します。</summary>
      <value>テキストを強調表示するかどうかを示す <see cref="T:System.Boolean" /> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> がキーボードフォーカスを取得したときにすべてのテキストを選択するかどうかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Integer">
      <summary>現在の数値 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> の整数部の値を取得します。 <seealso cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /><seealso cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /><seealso cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Decimal" /></summary>
      <value>入力された数値の整数部を示す null 許容の 10 進数値。</value>
      <remarks>
        <para>このプロパティを使用して、実行時に現在の値の整数部を取得できます。また、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Decimal" /> プロパティを使用して小数部を取得することもできます。例：</para>
        <para> number1.Value = -1234.120<br /> この例では、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Integer" /> は -1234 を返し、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Decimal" nolink="true" /> プロパティは -0.12 を返します。</para>
        <para> number1.Value = 1234<br />この例では、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Integer" nolink="true" /> は1234を返し、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Decimal" nolink="true" /> プロパティは 0 を返します。</para>
        <para>基になる値が <see langword="null" /> に設定されている場合、このプロパティは <see langword="null" /> を返します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.IsDropDownOpen">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> のドロップダウンが現在開いているかどうかを示す値を取得または設定します。</summary>
      <value>
        このインスタンスのドロップダウンが開いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue">
      <summary>設定可能な範囲の最大値を示す 10 進数値を取得または設定します。</summary>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" /> は、コードの実行によるかユーザー操作によるかを問わず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> の最大値を制御します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" nolink="true" /> より大きい場合は、コントロールがキーボードフォーカスを失ったときに <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ControlValidatorSet" /> の設定に従って値が検証されます。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" nolink="true" /> より大きい値に設定すると、, <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" nolink="true" /> と同じ値に変更されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" nolink="true" /> より小さい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" nolink="true" /> は変更されず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" nolink="true" /> と同じ値に変更されます。  </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue">
      <summary>設定可能な範囲の最小値を示す 10 進数値を取得または設定します。</summary>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" /> は、コードの実行によるかユーザー操作によるかを問わず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> の最小値を制御します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" nolink="true" /> より大きい場合は、コントロールがキーボードフォーカスを失ったときに <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ControlValidatorSet" /> の設定に従って値が検証されます。</para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" /> より大きい値に設定すると、, <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" nolink="true" /> と同じ値に変更されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" nolink="true" /> を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" nolink="true" /> より小さい値に設定すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" nolink="true" /> は変更されず、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MaxValue" nolink="true" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.MinValue" nolink="true" /> と同じ値に変更されます。  </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.NegativeForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> 値がゼロ未満のときの前景を示すブラシを取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> がゼロ未満のときの前景を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>エディタの既定値を示す <see cref="T:System.Decimal" /> 値。</value>
      <remarks>
        <para>入力候補値は、入力候補となる 10 進数値をユーザーにヒントとして提示するために使用されます。これは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> がアクティブなときにのみ表示されます。</para>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。</para>
        <para>入力候補値の優先度は表示フィールドおよび透かしよりも下です。透かしまたは表示フィールドが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SetZeroCommand">
      <summary>現在の値をゼロに設定するよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SetZeroCommand" /> コマンドを表します。</summary>
      <value>ゼロを設定する、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> へのルーティングコマンド。</value>
      <remarks>このコマンドの既定のキージェスチャーは F2 です。</remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_005" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        入力候補値を表示する場合は<see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>
        <para> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.FieldSet" /> にフィールドが含まれていない場合は、入力候補値は表示されず、 <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" /> を実行しても何も起こりません。 </para>
        <para> 入力候補値の優先度は表示フィールドおよび透かしよりも下です。透かしまたは表示フィールドが表示される場合は、入力候補値は表示されませんが、この場合でも <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ApplyRecommendedValueCommand" nolink="true" /> は機能します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SignState">
      <summary>符号状態を取得します。符号状態は、現在の値が 0 より大きいか、0 より小さいか、または <see langword="null" /> であるかを示します。</summary>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> が <see langword="null" /> の場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SignState" /> は <see cref="!:GrapeCity.Windows.InputMan.SignState.None" /> になります。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" nolink="true" /> が０より大きい場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SignState" nolink="true" /> は <see cref="!:GrapeCity.Windows.InputMan.SignState.Positive" /> になります。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" nolink="true" /> が０より小さい場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SignState" nolink="true" /> は <see cref="!:GrapeCity.Windows.InputMan.SignState.Negative" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinButtonStyle">
      <summary>スピンボタンが描画されるときに使用されるスピンボタンのスタイルを取得または設定します。</summary>
      <value>スピンボタンに使用される <see cref="T:System.Windows.Style" /> 値。</value>
      <remarks>スピンボタンについては、このプロパティによってのみプロパティを設定できます。スピンボタンの表示設定、レイアウト、動作などを設定できます。</remarks>
      <example> 次のサンプルコードは、<see cref="!:GrapeCity.Windows.InputMan.GcNumber.DropDownButtonStyle" /> および <see cref="!:GrapeCity.Windows.InputMan.GcNumber.SpinButtonStyle" /> プロパティの使用方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\SideButton.xaml" region="SideButton_001" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinButtonVisibility">
      <summary>スピンサイドボタンの <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>スピンサイドボタンの表示設定を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility" /> 列挙体。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.ShowAlways" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinButtonVisibility" /> プロパティは、スピンサイドボタンが常に表示されるか、コントロールがフォーカスを取得したときにのみ表示されるか、まったく表示されないかを決定します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.ButtonVisibility" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinIncrementValue">
      <summary>スピン増分値を取得または設定します。</summary>
      <value><b>decimal</b> 値。既定値は 0 です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> プロパティを増減する量を示します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinMode">
      <summary>スピンパターンを示すスピンモード値を取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.NumberSpinMode" /> 列挙値。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSpinMode.Field" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberField" /> のスピン動作を指定します。値が <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSpinMode.Field" /> の場合は、現在のアクティブフィールドを増減します。値が <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSpinMode.Value" /> の場合は、値全体を <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinIncrementValue" /> 刻みで増減します。値が <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSpinMode.Digits" /> の場合は、現在のアクティブフィールドの特定の桁を増減します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.NumberSpinMode" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SwitchDropDownCommand">
      <summary>ドロップダウンウィンドウを開くよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SwitchDropDownCommand" /> コマンドを表します。</summary>
      <value>ドロップダウン状態を切り替える、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> へのルーティングコマンド。</value>
      <remarks>このコマンドの既定のキージェスチャーは、Alt+Up、Alt+Down、および F4 です。</remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_005" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SwitchSignCommand">
      <summary>値の符号を切り替えるよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SwitchSignCommand" /> コマンドを表します。</summary>
      <value>符号を切り替える、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> へのルーティングコマンド。</value>
      <remarks>このコマンドの既定のキージェスチャーは、Subtract と OemMinus です。</remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_005" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ThreeZeroCommand">
      <summary>現在の値の末尾にゼロを３個追加するよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ThreeZeroCommand" /> コマンドを表します。</summary>
      <value>末尾にゼロを３個追加する、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> へのルーティングコマンド。</value>
      <remarks>このコマンドは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> によってネイティブにサポートされています。</remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_005" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ValidationTrigger">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber.Value" />プロパティを検証するタイミングを決定する値を取得または設定します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.ValidationTrigger" /> 値の１つ。既定値は <see cref="!:GrapeCity.Windows.InputMan.ValidationTrigger.LostFocus" /> です。</value>
      <example> 次のサンプルコードは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" />を使用してコントロール値を検証する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcNumber.xaml" region="ControlValidator_002" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" />コントロールに割り当てられた値を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の値を示す null 許容の 10 進数値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ValueSign">
      <summary>コントロールの値の符号を取得または設定します。</summary>
      <value>値の符号を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl" /> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の値の範囲を決定します。<see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl.Positive" /> の場合は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> で正の値のみが許可されます。<see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl.Negative" /> の場合は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" nolink="true" /> で負の値のみが許可されます。<see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl.NoControl" /> の場合は、値は制御されません。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.ValueSignControl" /> 型ではありません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkDisplayZero">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> がゼロで、なおかつ <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> がアクティブでないときの、透かしテキストを取得または設定します。</summary>
      <value><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkDisplayZero" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された文字列に無効な文字（'\r' など）が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkDisplayZeroForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkDisplayZero" /> を描画する前景を取得または設定します。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkDisplayZero" /> の前景を示す <see cref="T:System.Windows.Media.Brush" /> 値。</value>
      <remarks>このプロパティを <see langword="null" /> に設定すると、描画する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の前景を使用して <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkDisplayZero" /> が表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkZero">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> が０のときの透かしテキストを取得または設定します。</summary>
      <value><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkZero" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された文字列に無効な文字（'\r' など）が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkZeroForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkZero" /> を描画する前景を取得または設定します。</summary>
      <value><see cref="T:System.Windows.Media.Brush" /> の前景を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkZero" /> 値。</value>
      <remarks>このプロパティを <see langword="null" /> に設定すると、描画する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の前景を使用して <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.WatermarkZero" /> が表示されます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DoSpinDown(System.Decimal)">
      <summary>スピンダウンを実行します。</summary>
      <param name="increment"><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> を減少させる量。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DoSpinUp(System.Decimal)">
      <summary>スピンアップを実行します。</summary>
      <param name="increment"><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value" /> を増加させる量。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.OnDropDownClosed(System.EventArgs)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> のドロップダウンが開いたことを報告し、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownClosed" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.OnDropDownOpened(System.EventArgs)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> のドロップダウンが閉じたことを報告し、<see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownOpened" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.OnIsActiveChanged(System.Windows.RoutedEventArgs)">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" />プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.OnSelectionChanged(System.Windows.RoutedEventArgs)">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionStart" /> プロパティまたは <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.SelectionLength" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>この編集コントロールの内容が変更されたときに発生します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.OnTextChanging(GrapeCity.Wpf.SpreadSheet.CellType.Editors.TextChangingEventArgs)">
      <summary>この編集コントロールの内容が変更される直前に発生します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.OnValueChanged(System.Windows.RoutedEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ValueChanged" /> ルーティングイベントを発生します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<b>OnValueChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。<note> 派生クラスで <b>OnValueChanged</b> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <b>OnValueChanged</b> メソッドを呼び出してください。  </note></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.OpenDropDown">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> のドロップダウンウィンドウを開きます。</summary>
      <remarks>このメソッドは <see cref="!:GrapeCity.Windows.InputMan.GcNumber.IsDropDownOpen" /> プロパティに影響を与えます。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownClosed">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" /> が閉じたときに発生します。</summary>
      <remarks>このイベントは、<see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" /> がコードの実行またはユーザー操作によって閉じたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.DropDownOpened">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の <see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" /> が開いたときに発生します。</summary>
      <remarks>このイベントは、<see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow" /> がコードの実行またはユーザー操作によって開いたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.ValueChanged">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> で値プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<b>Value</b> プロパティがコードの実行またはユーザー操作によって変更された場合に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox">
      <summary>特定の書式を持つテキストの表示または編集に使用できる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> コントロールを表します。</summary>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> は、いくつかのカプセル化されたコンポーネントで構成された複合コントロールです。したがって、一部のイベントはカプセル化された子要素で処理されるため、格納元コントロールまでバブルアップしません。そのため、アプリケーション開発者はイベントのトンネリングバージョン（"Preview" というプレフィックスによって識別されます）をリッスンする必要があります。</para>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> は書式なしテキストと書式付きテキストの両方をサポートします。</para>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> 内のテキストを水平および垂直方向に揃えるには、<see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> プロパティと <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> プロパティを使用します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> をページのレイアウト内で揃えるには、<see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> プロパティと <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> プロパティを使用します。</para>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> の周囲の境界線を非表示にする最良の方法は、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> の <see cref="P:System.Windows.Controls.Control.BorderThickness" /> プロパティを０に設定することです。</para>
        <para>スクロールバーは、既定では <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> に表示されません。スクロールバーを表示するには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.VerticalScrollBarVisibility" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.HorizontalScrollBarVisibility" /> プロパティを <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" /> または <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" /> に設定します。</para> 通常、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> のテキストが変更されたことを検出するには、<see cref="E:System.Windows.UIElement.KeyDown" /> ではなく <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.TextChanged" /> イベントを使用します。 <para><b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>ReadOnly</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditBase.IsReadOnly" /> が <see langword="true" /> のときの外観を表します。</td>l </tr><tr><td>CommonStates</td><td>MouseOver</td><td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>ActiveStates</td><td>Active</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>ActiveStates</td><td>Inactive</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td></tr></table></para></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsCrLfProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsCrLf" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsReturnProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsReturn" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsTabProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsTab" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AutoConvertProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AutoConvert" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AutoWordSelectionProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AutoWordSelection" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.CountWrappedLineProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.CountWrappedLine" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.EllipsisProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Ellipsis" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.EllipsisStringProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.EllipsisString" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ExitOnLastCharProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ExitOnLastChar" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.FormatProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Format" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GridLineBrushProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GridLineBrush" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GridLineStyleProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GridLineStyle" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.HighlightTextProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.HighlightText" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.HorizontalScrollBarVisibilityProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.HorizontalScrollBarVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLengthProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLength" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLengthUnitProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLengthUnit" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLineCountProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLineCount" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLinesProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLines" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MinLinesProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MinLines" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MultilineProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Multiline" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.RecommendedValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcTextBox.RecommendedValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ShowOverflowTipProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ShowOverflowTip" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ShowRecommendedValueProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcTextBox.ShowRecommendedValue" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.TextWrappingProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.TextWrapping" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.VerticalScrollBarVisibilityProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.VerticalScrollBarVisibility" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkDisplayNullForegroundProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcTextBox.WatermarkDisplayNullForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkDisplayNullProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcTextBox.WatermarkDisplayNull" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkNullForegroundProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcTextBox.WatermarkNullForeground" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkNullProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcTextBox.WatermarkNull" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsCrLf">
      <summary>文字列を貼り付けるときに CrLf 文字をどのように処理するかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>文字列を <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> に貼り付けるときに CrLf 文字をどのように処理するかを示す <see cref="!:GrapeCity.Windows.InputMan.CrLfMode" /> 列挙体。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.CrLfMode.Cut" /> です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Multiline" /> が <see langword="false" /> の場合にのみ機能します。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsCrLf" /> を <see cref="!:GrapeCity.Windows.InputMan.CrLfMode.Cut" /> に設定すると、最初の CrLf 文字より前の部分文字列のみが貼り付け時に残されます。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsCrLf" nolink="true" /> を <see cref="!:GrapeCity.Windows.InputMan.CrLfMode.Filter" /> に設定すると、文字列内のすべての CrLf 文字が除去されます。</remarks>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.InputMan.CrLfMode" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsReturn">
      <summary>複数行の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> コントロールで ENTER キーを押したときにコントロール内のテキストを改行するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。コントロールに新しいテキスト行を作成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="true" /> です。</value>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> コントロールが ENTER キーに反応するのは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsReturn" /> が <see langword="true" /> で、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Multiline" /> が <see langword="true" /> である場合のみです。この ENTER キーは <b>VK_RETURN</b> 仮想キーコードに対応します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AcceptsTab">
      <summary>ユーザーが［Tab］キーを押したときにテキスト編集コントロールがどのように応答するかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        ［Tab］キーを押したときに現在のカーソル位置にタブ文字を挿入する場合は <see langword="true" />。タブストップとしてマークされている次のコントロールにフォーカスを移動し、タブ文字を挿入しない場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>［Tab］キーは <b>VK_TAB</b> 仮想キーコードに対応します。<note> <see cref="P:System.Windows.Input.ApplicationCommands.Paste" /> コマンドを実行するなどの方法でコントロールに貼り付けると、タブ文字（'\t'）はスペース（' '）に置換されます。  </note></remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ApplyRecommendedValueCommand">
      <summary>入力候補値を適用するよう要求する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ApplyRecommendedValueCommand" /> コマンドを表します。</summary>
      <remarks>入力候補値が "1234567890abcdefg" で、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ShowRecommendedValue" /> が <see langword="true" /> の場合、このコマンドは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> にこの値を適用します。このコマンドの既定のキージェスチャはありません。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AutoConvert">
      <summary>入力された文字を入力マスクに従って自動的に変換するかどうかを取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        入力マスクに従って文字が自動的に変換される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="true" /> です。</value>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AutoConvert" /> プロパティを <see langword="true" /> に設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを "A" に設定した場合、小文字を入力すると自動的に大文字に変換されます。</para>
        <para>全角文字入力マスクに半角文字を入力した場合、入力した文字は自動的に全角に変換されます。また、コントロールで半角文字のみが許可されている場合には、全角のスペースは自動的に半角のスペースに変換されます。  </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AutoWordSelection">
      <summary>ユーザーがマウスをドラッグして単語の一部を選択したときに残りの部分を選択するかどうかを決定する値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        単語の自動選択が有効である場合は<see langword="true" />。それ以外の場合は<see langword="false" />。既定値は <see langword="false" /> です。</value>
      <remarks>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AutoWordSelection" /> を有効にすると、ユーザーがマウスをドラッグして単語の一部を選択するたびに、選択範囲が単語全体を含むように自動的に拡大されます。ユーザーは、選択時にマウスポインタを一瞬逆方向にドラッグすることによって、単語全体の自動選択を無効にすることができます。この操作によって単語全体の自動選択が取り消され、単語の一部または全体を正確に選択できます。 </para>
        <para><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.AutoWordSelection" nolink="true" /> が無効な場合は、選択範囲が単語全体を含むように自動的に拡大されることはありません。この場合、選択範囲は常に手動で指定したとおりになります。</para>
        <para>
          <note type="cnotes">自動選択は、ユーザーがドラッグする最初の単語には影響しません。その最初の単語の境界を越えてはじめて、自動選択が有効になります。 </note>
        </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ClearCommand">
      <summary>すべてのテキストをクリアするよう <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ClearCommand" /> に要求する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> コマンドを表します。</summary>
      <value>要求されたコマンド。既定のキージェスチャーは <b>F2</b> です。</value>
      <remarks>
        <para>このコマンドは、<see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="true" /> で、なおかつ <see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.IsReadOnly" /> が <see langword="false" /> の場合にのみ実行できます。</para>
        <para>このコマンドは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> によってネイティブにサポートされており、コマンドパラメーターは無視されます。 </para>
      </remarks>
      <example>
        <para>次の例では、InputMan コントロールに <see cref="T:System.Windows.Input.RoutedCommand" /> をフックする方法を示します。</para>
        <para>InputMan には、アプリケーションプログラマがよく使用する一般的なコマンドのライブラリが用意されています。コマンドライブラリを構成するクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditingCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarCommands" />、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlNavigationCommands" /> です。また、一部のコマンドは一部のコントロールクラスで定義されています。 </para>
        <para> InputMan の多くのコントロールには、コマンドライブラリにある一部のコマンドのサポートが組み込まれています。 たとえば、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> では、<see cref="P:System.Windows.Input.ApplicationCommands.Paste" />、<see cref="P:System.Windows.Input.ApplicationCommands.Copy" />、<see cref="P:System.Windows.Input.ApplicationCommands.Cut" />、<see cref="P:System.Windows.Input.ApplicationCommands.Undo" /> などの多くのアプリケーション編集コマンドがサポートされます。アプリケーション開発者は、コントロールで使用するこれらのコマンドを取得するのに特別な作業を行う必要はありません。コマンドが実行したときに <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> がコマンドターゲットの場合は、コントロールに組み込まれている <see cref="T:System.Windows.Input.CommandBinding" /> を使用してコマンドが処理されます。 </para>
        <para> 次は、<see cref="T:System.Windows.Input.KeyBinding" /> がコマンドのターゲットである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> で定義されたコマンドに対して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> をコマンドソースとして使用する方法を示します。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> が操作を実行する方法を定義するすべてのロジックは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> コントロールに組み込まれています。 </para>
        <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="Command_006" />
      </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.CountWrappedLine">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLineCount" /> プロパティによって行数を制限するときに折り返し行をカウントするかどうかを示す <see cref="T:System.Boolean" /> 値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        折り返された行をカウントする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>この <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.CountWrappedLine" /> プロパティを <see langword="true" /> に、<see cref="!:GrapeCity.Windows.InputMan.GcTextBox.Multiline" /> プロパティを <see langword="true" /> に、<see cref="!:GrapeCity.Windows.InputMan.GcTextBox.MaxLineCount" /> プロパティをゼロ以外の値に、それぞれ設定した場合、この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> は行数が <see cref="!:GrapeCity.Windows.InputMan.GcTextBox.MaxLineCount" nolink="true" /> の値未満であるテキストのみを受け入れます。</remarks>
      <seealso cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLineCount" />
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Ellipsis">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> のテキストが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" nolink="true" /> の指定された長さを超えていることを表す省略記号（...）の表示方法を示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.EllipsisMode" /> 列挙体。<see cref="!:GrapeCity.Windows.InputMan.EllipsisMode.None" /> は、省略記号文字列が表示されないことを意味します。<see cref="!:GrapeCity.Windows.InputMan.EllipsisMode.EllipsisEnd" /> は、文字列の末尾を文字単位でトリミングします。<see cref="!:GrapeCity.Windows.InputMan.EllipsisMode.EllipsisPath" /> は、文字列の中央部分を文字単位でトリミングします。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.EllipsisMode.None" nolink="true" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Ellipsis" /> プロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Multiline" /> が <see langword="false" /> の場合にのみ効果があります。テキストがこのコントロールの幅より長くて、なおかつこのコントロールにフォーカスがないときは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.EllipsisString" /> プロパティで指定された省略記号文字列が表示されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.EllipsisMode" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.EllipsisString">
      <summary>テキストの幅がコントロールより長い場合に省略記号として表示する文字列を取得または設定します。これは依存関係プロパティです。</summary>
      <value>省略記号として使用する文字列を示す <see cref="T:System.String" /> 値。<br />既定値は <b>(...)</b> です。</value>
      <remarks>このプロパティで指定した文字列は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Ellipsis" /> が <see cref="!:GrapeCity.Windows.InputMan.EllipsisMode.EllipsisEnd" /> または <see cref="!:GrapeCity.Windows.InputMan.EllipsisMode.EllipsisPath" /> に設定されている場合に使用されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ExitOnLastChar">
      <summary>コントロールに最後の文字が入力されると同時にフォーカスがタブオーダーの次のコントロールに移動するかどうかを取得または設定します。 これは依存関係プロパティです。</summary>
      <value>
        コントロールに入力コントロールで定義された最後の文字が入力されると同時にフォーカスがタブオーダーの次のコントロールに移動する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>最後に入力した文字によってテキストがコントロールの最大文字数を超えた場合、入力フォーカスが次のコントロールに移動します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Format">
      <summary>コントロールで使用する入力書式を取得または設定します。これは依存関係プロパティです。</summary>
      <value>コントロールにどのようなテキストを入力できるかを示す文字列。<br />既定値は <see cref="F:System.String.Empty">String.Empty</see> です。</value>
      <remarks>このプロパティは、入力できる文字および記号の種類を指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GridLineBrush">
      <summary>グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>グリッド線の描画に使用される <see cref="T:System.Windows.Media.Brush" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GridLineStyle">
      <summary>各グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.InputMan.LineStyle" /> 列挙値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>各グリッド線のスタイルを示す <see cref="!:GrapeCity.Windows.InputMan.LineStyle" />列挙値。</value>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.InputMan.LineStyle" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.HighlightText">
      <summary>コントロールのテキストを強調表示するかどうかを取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        コントロールがフォーカスを受け取ったときにすべてのテキストを選択する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <para>このプロパティを使用して、コントロールがフォーカスを受け取ったときにコントロールのすべてのテキストを強調表示できます。</para>
        <para><see langword="true" /> の場合は、内容全体が選択されます。</para>
        <para><see langword="false" />（既定値）の場合は、内容は選択されず、EditBase.<see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionStart" /> プロパティと <see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.SelectionLength" /> プロパティの設定に従ってキャレットが配置されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.HorizontalScrollBarVisibility">
      <summary>水平スクロールバーを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 列挙体で定義された値。 既定値は <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /> です。</value>
      <exception cref="T:System.ArgumentException"> 値が <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.LineCount">
      <summary>テキストボックスに含まれる行の総数を取得します。</summary>
      <value>テキストボックスに含まれる行の総数。レイアウト情報が使用できない場合は -1。</value>
      <remarks>テキストの折り返しが有効な場合、テキストボックスの幅を変更するとこの値が変わることがあります。 返される値は、テキストボックス内の、現在表示されていないものも含めた行の総数です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLength">
      <summary>コントロールが保持できる最大の文字数またはバイト数を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLengthUnit" />プロパティに従って決定される、コントロールに入力できる文字数またはバイト数。<br />既定値はゼロです。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLength" /> プロパティを使用して、ユーザーがコントロールに入力できる文字数を制限できます。既定値は０で、文字数が制限されないことを示します。０より大きい任意の数を指定すると、それが最大文字数になります。表示結果には、この <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLength" nolink="true" /> プロパティと共に <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLengthUnit" /> も影響します。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が 0 未満です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLengthUnit">
      <summary>コントロールに保持できる最大の文字数をバイト、文字、テキスト要素のいずれに基づいて取り扱うかを取得または設定します。これは依存関係プロパティです。</summary>
      <value>長さの単位が文字、バイト、テキスト要素のいずれに基づくかを示す <see cref="!:GrapeCity.Windows.InputMan.LengthUnit" /> 列挙値。<br />既定値は <see cref="!:GrapeCity.Windows.InputMan.LengthUnit.Char" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLength" /> プロパティをカウントする際の単位を決定します。値が <see cref="!:GrapeCity.Windows.InputMan.LengthUnit.Byte" /> の場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLength" nolink="true" /> はバイト単位でカウントされます。値が <see cref="!:GrapeCity.Windows.InputMan.LengthUnit.Char" /> の場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLength" nolink="true" /> は文字単位でカウントされます。値が <see cref="!:GrapeCity.Windows.InputMan.LengthUnit.TextElement" /> の場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLength" nolink="true" /> はテキスト要素単位でカウントされます。</remarks>
      <exception cref="T:System.ArgumentException"> 値が <see cref="!:GrapeCity.Windows.InputMan.LengthUnit" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLineCount">
      <summary>入力できる最大の行数を取得または設定します。</summary>
      <value>最大の行数を示す <see cref="T:System.Int32" /> 値。<br />既定値は 0 です。</value>
      <remarks>この <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLineCount" /> は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.CountWrappedLine" /> プロパティが <see langword="true" /> で、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Multiline" /> プロパティも <see langword="true" /> であるときに、入力できるテキストの行数を制限します。このプロパティの既定値はゼロで、制限がないことを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLines">
      <summary>表示行の最大数を取得または設定します。これは依存関係プロパティです。</summary>
      <value>表示行の最大数。既定値は <see cref="F:System.Int32.MaxValue" /> です。</value>
      <remarks>
        <para>このプロパティを取得すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLines" /> の現在の値が返されます。このプロパティを設定すると、表示されている行の数が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLines" nolink="true" /> で指定した上限を超えていた場合にテキストボックスのサイズが変更されます。</para>
        <para>このプロパティが適用されるのは、表示行だけです。実際の行の数が制限されることはありません。設定によっては、スクロールによってアクセスできる表示されていない追加行がテキストボックスに含まれる場合があります。</para>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> で <see cref="P:System.Windows.FrameworkElement.Height" /> プロパティが明示的に設定されている場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLines" nolink="true" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MinLines" /> プロパティの値は無視されます。 </para>
      </remarks>
      <exception cref="T:System.Exception">
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLines" /> は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MinLines" /> 未満です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MinLines">
      <summary>表示行の最小数を取得または設定します。これは依存関係プロパティです。</summary>
      <value>表示行の最小数。既定値は 1 です。</value>
      <remarks>
        <para>このプロパティを取得すると、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MinLines" /> の現在の値が返されます。このプロパティを設定すると、表示されている行の数が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MinLines" nolink="true" /> で指定された値より少ない場合にテキストボックスのサイズが変更されます。</para>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> で <see cref="P:System.Windows.FrameworkElement.Height" /> プロパティが明示的に設定されている場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MaxLines" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.MinLines" nolink="true" /> プロパティの値は無視されます。 </para>
      </remarks>
      <exception cref="T:System.Exception"> 指定された値が 0 以下です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.Multiline">
      <summary>コントロールに複数行のテキストを入力および表示できるかどうかを取得または設定します。</summary>
      <value>
        コントロールが複数行コントロールの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.TextWrapping" /> が <see cref="F:System.Windows.TextWrapping.NoWrap" /> でない場合、ユーザーが複数行コントロールにテキストボックスの幅を超えるテキストを入力すると、テキストが折り返されます。</remarks>
      <seealso cref="T:System.Windows.TextWrapping" />
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>エディタの既定値を示す <see cref="T:System.String" /> 値。</value>
      <remarks>入力候補値は、入力候補となる内容をユーザーにヒントとして提示するために使用されます。これは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> がアクティブなときにのみ表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ShowOverflowTip">
      <summary>オーバーフローツールチップを表示するかどうかを取得または設定します。</summary>
      <value>
        テキストがオーバーフローしているコントロールの上にマウスが置かれたときにオーバーフローツールチップを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>オーバーフローツールチップは、次の条件が両方とも満たされている場合に表示されます。<br />このコントロールの <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" /> プロパティが <see langword="false" /> である。<br />マウスポインタがコントロールのテキストの上にある。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        入力候補値を表示する場合は<see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.TextWrapping">
      <summary>テキストボックス内のテキストを折り返す方法を取得または設定します。これは依存関係プロパティです。</summary>
      <value>テキストボックス内のテキストを折り返す方法を示す <see cref="T:System.Windows.TextWrapping" /> 値の 1 つ。 既定値は  <see cref="F:System.Windows.TextWrapping.NoWrap">TextWrapping.NoWrap</see> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.TextWrapping" /> を <see cref="F:System.Windows.TextWrapping.Wrap" /> に設定すると、入力したテキストが <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> コントロールの端に達すると次の行に折り返され、新しい行が収まるように必要に応じて TextBox コントロールの高さが自動的に調整されます。</remarks>
      <exception cref="T:System.ArgumentException"> 値が <see cref="T:System.Windows.TextWrapping" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.VerticalScrollBarVisibility">
      <summary>垂直スクロールバーを表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 列挙体で定義された値。 既定値は <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /> です。</value>
      <exception cref="T:System.ArgumentException"> 値が <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 列挙体で定義されていません。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkDisplayNull">
      <summary>値が <see langword="null" />で、なおかつセルが非編集時の、透かし表示テキストを取得または設定します。</summary>
      <value><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkDisplayNull" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値に無効なパターンまたは無効な文字が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkDisplayNullForeground">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkDisplayNull" />が表示されるときの透かし表示テキストの前景を取得または設定します。</summary>
      <value><see cref="T:System.Windows.Media.Brush" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkDisplayNullForeground" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkNull">
      <summary>値が<see langword="null" />のときの透かしテキストを取得または設定します。</summary>
      <value><see cref="T:System.String" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkNull" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値に無効なパターンまたは無効な文字が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkNullForeground">
      <summary>値が<see langword="null" />のときの透かしテキストの前景を取得または設定します。</summary>
      <value><see cref="T:System.Windows.Media.Brush" /> を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.WatermarkNullForeground" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GetCharacterIndexFromLineIndex(System.Int32)">
      <summary>指定した行の先頭文字の 0 から始まる文字インデックスを返します。</summary>
      <param name="lineIndex">先頭文字のインデックスを取得する行の 0 から始まるインデックス。</param>
      <returns>指定した行の先頭文字の 0 から始まるインデックス。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="lineIndex" /> が 0 未満か、行数以上です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)">
      <summary>指定したポイントに対応する、0 から始まる挿入インデックスを返します。</summary>
      <param name="point">挿入インデックスを返す、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox" /> 座標空間のポイント。</param>
      <param name="snapToText">
        指定したポイントに文字がないときに最も近い挿入インデックスを返す場合は <see langword="true" />。指定したポイントに文字がないときに -1 を返す場合は <see langword="false" />。</param>
      <returns>指定したポイントの挿入インデックス。有効な挿入インデックスが見つからない場合は -1。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GetFirstVisibleLineIndex">
      <summary>現在テキストボックスに表示されている最初の行の行インデックスを返します。</summary>
      <returns>テキストボックスに表示されている最初の行の 0 から始まるインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GetLastVisibleLineIndex">
      <summary>現在テキストボックスに表示されている最後の行の行インデックスを返します。</summary>
      <returns>テキストボックスに表示されている最後の行の 0 から始まるインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GetLineIndexFromCharacterIndex(System.Int32)">
      <summary>指定した文字インデックスが含まれている行の 0 から始まる行インデックスを返します。</summary>
      <param name="charIndex">対応する行インデックスを取得する文字の 0 から始まる文字インデックス。</param>
      <returns>指定した文字インデックスが含まれている行の 0 から始まるインデックス。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" /> が負であるか、内容の長さを超えています。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GetLineLength(System.Int32)">
      <summary>指定した行の文字数を返します。</summary>
      <param name="lineIndex">文字数を取得する行の 0 から始まる行インデックス。</param>
      <returns>指定した行の文字数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="lineIndex" /> が 0 未満か、行数以上です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GetLineText(System.Int32)">
      <summary>指定した行に現在表示されているテキストを返します。</summary>
      <param name="lineIndex">現在表示されているテキストを取得する行の 0 から始まる行インデックス。</param>
      <returns>指定した行に現在表示されているテキストのコピーを含む文字列。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="lineIndex" /> が 0 未満か、行数以上です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GetRectFromCharacterIndex(System.Int32)">
      <summary>指定したインデックスにある文字のリーディングエッジの四角形を返します。</summary>
      <param name="charIndex">四角形を取得する文字の 0 から始まる文字インデックス。</param>
      <returns>指定した文字インデックスにある文字のリーディングエッジの四角形。外接する四角形を決定できない場合は <see cref="P:System.Windows.Rect.Empty">Rect.Empty</see>。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" /> が負であるか、内容の長さを超えています。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)">
      <summary>指定したインデックスにある文字のリーディングエッジまたはトレーリングエッジの四角形を返します。</summary>
      <param name="charIndex">外接する四角形を取得する文字の 0 から始まる文字インデックス。</param>
      <param name="trailingEdge">
        文字のトレーリングエッジを取得する場合は <see langword="true" />。文字のリーディングエッジを取得する場合は <see langword="false" />。</param>
      <returns>指定した文字インデックスにある文字に外接する四角形。外接する四角形を決定できない場合は <see cref="P:System.Windows.Rect.Empty" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" /> が負であるか、内容の長さを超えています。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.LineDown">
      <summary>コントロールの内容を 1 行ずつ下にスクロールします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.LineLeft">
      <summary>コントロールの内容を 1 行ずつ左にスクロールします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.LineRight">
      <summary>コントロールの内容を 1 行ずつ右にスクロールします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.LineUp">
      <summary>コントロールの内容を 1 行ずつ上にスクロールします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.OnIsActiveChanged(System.Windows.RoutedEventArgs)">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlBase.IsActive" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.PageDown">
      <summary>コントロールの内容を 1 ページずつ下にスクロールします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.PageLeft">
      <summary>コントロールの内容を 1 ページずつ左にスクロールします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.PageRight">
      <summary>コントロールの内容を 1 ページずつ右にスクロールします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.PageUp">
      <summary>コントロールの内容を 1 ページずつ上にスクロールします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ScrollToEnd">
      <summary>編集コントロールのビューを内容の最後までスクロールします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ScrollToHome">
      <summary>編集コントロールのビューをビューポートの先頭までスクロールします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ScrollToHorizontalOffset(System.Double)">
      <summary>編集コントロールの内容を、指定した水平オフセットまでスクロールします。</summary>
      <param name="offset">スクロール先の水平オフセットを指定する double 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> offset が <see cref="F:System.Double.NaN">double.NaN</see> です。</exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ScrollToLine(System.Int32)">
      <summary>行をスクロールして、指定した行インデックスにある行を表示します。</summary>
      <param name="lineIndex">スクロールして表示する行の 0 から始まる行インデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="lineIndex" /> が 0 未満か、行数以上です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcTextBox.ScrollToVerticalOffset(System.Double)">
      <summary>編集コントロールの内容を、指定した垂直オフセットまでスクロールします。</summary>
      <param name="offset">スクロール先の垂直オフセットを指定する double 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> offset が <see cref="F:System.Double.NaN">double.NaN</see> です。</exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> のヘッダボタンを表現するための情報を含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" /> を表します。</summary>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> には、１月、１年、10 年などの日付範囲が表示されます。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" /> には、現在表示されている範囲に関する情報が含まれます。また、この情報は、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" nolink="true" /> の既定テンプレートのヘッダボタンの内容として表示されます。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" nolink="true" /> には以下の情報が含まれます。 <list type="table"><listheader><term><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" nolink="true" /> プロパティ</term><description>説明</description></listheader><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo.StartDate" /></term><description><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" nolink="true" /> が表す日付範囲の最初の日付。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo.EndDate" /></term><description><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" nolink="true" /> が表す日付範囲の最後の日付。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo.Text" /></term><description> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" nolink="true" /> の表示に使用される、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearMonthFormat" /> または <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearFormat" /> に準拠した書式付き <see cref="T:System.String" /> 値。</description></item></list></remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo.EndDate">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" /> が表す日付範囲の最後の日付を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" /> が表す日付範囲の最後の日付の <see cref="T:System.DateTime" /> 値。</value>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo.EndDate" /> は、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> が現在表示している日付範囲の最後の日付です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo.StartDate">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" /> が表す日付範囲の最初の日付を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" /> が表す日付範囲の最初の日付の <see cref="T:System.DateTime" /> 値。</value>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo.StartDate" /> は、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> が現在表示している日付範囲の最初の日付です。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo.Text">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" /> の表示に使用される、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearMonthFormat" /> または <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearFormat" /> に準拠した書式付き <see cref="T:System.String" /> 値を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HeaderInfo" /> の表示に使用される、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearMonthFormat" /> または <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.YearFormat" /> に準拠した書式付き <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday">
      <summary>年次休日の実装。ここで定義された休日はすべての年に適用されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.#ctor(System.Int32,System.Int32)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="month">休日の月を表す <see cref="T:System.Int32" /> 値。</param>
      <param name="day">休日の日を表す <see cref="T:System.Int32" /> 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month" /> の値が 1 未満か、12 を超えています。<paramref name="day" /> の値が 1 未満か、うるう年での <paramref name="month" /> の最後の日を超えています。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.#ctor(System.String,System.Int32,System.Int32)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">臨時休業日の名前を示す <see cref="T:System.String" /> 値。</param>
      <param name="month">休日の月を表す <see cref="T:System.Int32" /> 値。</param>
      <param name="day">休日の日を表す <see cref="T:System.Int32" /> 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month" /> の値が 1 未満か、12 を超えています。<paramref name="day" /> の値が 1 未満か、うるう年での <paramref name="month" /> の最後の日を超えています。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="startMonth">休業期間の開始月を表す <see cref="T:System.Int32" /> 値。</param>
      <param name="startDay">休業期間の開始日を表す <see cref="T:System.Int32" /> 値。</param>
      <param name="endMonth">休業期間の終了月を表す <see cref="T:System.Int32" /> 値。</param>
      <param name="endDay">休業期間の終了日を表す <see cref="T:System.Int32" /> 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startMonth" /> または <paramref name="endMonth" /> の値が 1 未満か、12 を超えています。<paramref name="startDay" /> の値が 1 未満か、うるう年での <paramref name="startMonth" /> の最後の日を超えています。 <paramref name="endDay" /> の値が 1 未満か、うるう年での <paramref name="endMonth" /> の最後の日を超えています。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した休業期間を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">臨時休業日の名前を示す <see cref="T:System.String" /> 値。</param>
      <param name="startMonth">休業期間の開始月を表す <see cref="T:System.Int32" /> 値。</param>
      <param name="startDay">休業期間の開始日を表す <see cref="T:System.Int32" /> 値。</param>
      <param name="endMonth">休業期間の終了月を表す <see cref="T:System.Int32" /> 値。</param>
      <param name="endDay">休業期間の終了日を表す <see cref="T:System.Int32" /> 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startMonth" /> または <paramref name="endMonth" /> の値が 1 未満か、12 を超えています。<paramref name="startDay" /> の値が 1 未満か、うるう年での <paramref name="startMonth" /> の最後の日を超えています。 <paramref name="endDay" /> の値が 1 未満か、うるう年での <paramref name="endMonth" /> の最後の日を超えています。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.EndDay">
      <summary>休業期間の終了日を取得または設定します。</summary>
      <value>休業期間の終了日を表す、1 ～月末日の範囲の整数値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> 設定値が１未満であるか、うるう年の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.EndMonth" /> の最終日を超えています。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.EndMonth">
      <summary>休業期間の終了月を取得または設定します。</summary>
      <value>休業期間の終了月を表す、1 ～ 12 の範囲の整数値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> 1 より小さい値、または 12 より大きい値を設定しようとしました。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.HolidayName">
      <summary>休日の名前を取得または設定します。</summary>
      <value>休業の名前。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.IsYearly">
      <summary>この休日の実装が毎年適用されるかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が毎年適用される場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>これは年次休日なので、このプロパティは常に <see langword="true" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.StartDay">
      <summary>休業期間の開始日を取得または設定します。</summary>
      <value>休業期間の開始日を表す、1 ～月末日の範囲の整数値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> 設定値が１未満であるか、うるう年の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.StartMonth" /> の最終日を超えています。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.StartMonth">
      <summary>休業期間の開始月を取得または設定します。</summary>
      <value>休業期間の開始月を表す、1 ～ 12 の範囲の整数値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> 1 より小さい値、または 12 より大きい値を設定しようとしました。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.Clone">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.IsDefined(System.DateTime)">
      <summary>指定した日付が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday" /> かどうかを示す値を取得します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>
        日付が <see langword="true" /> の場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday.TypeOfDay(System.DateTime)">
      <summary>指定した日付の日のタイプを返します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>日のタイプを表す <see cref="!:GrapeCity.Windows.InputMan.DayType">DayType</see> 列挙体。</returns>
      <remarks>このメソッドは、日付が休日の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.Holiday">DayType.Holiday</see> を返し、それ以外の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.Normal">DayType.Normal</see> を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase">
      <summary><see cref="!:GrapeCity.Windows.InputMan.IHoliday" /> を実装する基本クラスを表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase" /> は休日の基本動作を提供します。また、<see cref="T:System.ICloneable" /> と <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> を実装しているため、クローン操作とプロパティ変更通知も可能です。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase.HolidayName">
      <summary>休日の名前を取得または設定します。</summary>
      <value>休業の名前。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase.IsYearly">
      <summary>この休日の実装が毎年適用されるかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が毎年適用される場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase.Clone">
      <summary>休日オブジェクトのシャローコピーを作成します。</summary>
      <returns>休日オブジェクトのシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase.IsDefined(System.DateTime)">
      <summary>指定した日付が休日として定義されているかどうかを示す値を取得します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>
        日付が休日として定義されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase.PropertyChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase.TypeOfDay(System.DateTime)">
      <summary>指定した日付の日のタイプを返します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>日のタイプを表す <see cref="!:GrapeCity.Windows.InputMan.DayType">DayType</see> 列挙体。</returns>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayBase.PropertyChanged">
      <summary>プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection">
      <summary><see cref="!:GrapeCity.Windows.InputMan.IHoliday" /> のインスタンス（<see cref="!:GrapeCity.Windows.InputMan.Holiday" /> クラス、<see cref="!:GrapeCity.Windows.InputMan.ForceHoliday" /> クラス、<see cref="!:GrapeCity.Windows.InputMan.ForceWorkday" /> クラスなど）のコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection.#ctor">
      <summary>新しい <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection" /> オブジェクトを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection.#ctor(System.Collections.Generic.IEnumerable{GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday})">
      <summary>指定した設定を使用して、新しい <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection" /> オブジェクトを初期化します。</summary>
      <param name="holidays"><see cref="!:GrapeCity.Windows.InputMan.IHoliday" /> インタフェースを実装した休日のオブジェクト配列。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection.GetTypeOfDay(System.DateTime,GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday@)">
      <summary>指定した日付の日のタイプを確認します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <param name="holiday"><see cref="!:GrapeCity.Windows.InputMan.IHoliday" /> を実装したインスタンス（<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Holiday" /> クラス、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ForceHoliday" /> クラス、<see cref="!:GrapeCity.Windows.InputMan.ForceWorkday" /> クラスなど）。</param>
      <returns>日のタイプを表す <see cref="!:GrapeCity.Windows.InputMan.DayType" /> 列挙体。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection.InsertItem(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday)">
      <summary>コレクション内の指定したインデックスに項目を挿入します。</summary>
      <param name="index">項目を挿入する位置の 0 から始まるインデックス。</param>
      <param name="item">挿入するオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection.InsertItems(System.Int32,System.Collections.Generic.IEnumerable{GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday})">
      <summary>コレクション内の指定したインデックスに複数の項目を挿入します。</summary>
      <param name="index">項目を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">コレクションに追加するオブジェクトを含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection.IsHoliday(System.DateTime)">
      <summary>指定した日付が休日かどうかを判断します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>
        <paramref name="dateTime" /> が休日の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Holiday" /> または <see cref="!:GrapeCity.Windows.InputMan.ForceHoliday" /> クラスを使用して <see cref="!:GrapeCity.Windows.InputMan.IHoliday" /> として定義された日付は休日として扱われます。また、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday" /> クラスを使用して平日を休日として扱うこともできます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>提供された引数を使用して <see cref="!:GrapeCity.Windows.InputMan.NotifyCollection[[SDLENTITYREF[lt]]]T[[SDLENTITYREF[gt]]].CollectionChanged" /> CollectionChanged イベントを発生します。</summary>
      <param name="e">発生するイベントの引数。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection.RemoveItem(System.Int32)">
      <summary>コレクションの指定したインデックスにある項目を削除します。</summary>
      <param name="index">削除する要素の 0 から始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayCollection.SetItem(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday)">
      <summary>指定したインデックスにある要素を置換します。</summary>
      <param name="index">置換する要素の 0 から始まるインデックス。</param>
      <param name="item">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayGroup">
      <summary>休日設定のグループを保持する <see cref="!:GrapeCity.Windows.InputMan.HolidayGroup" /> を表します。このクラスは継承できません。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayGroup" /> は複数の <see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" /> オブジェクトを保持し、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> に複数の休日設定を設定するために <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.HolidaySetting" /> プロパティに設定できます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayGroup.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayGroup.#ctor(System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayGroup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">休日グループの名前。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayGroup.Children">
      <summary>休日設定を取得します。</summary>
      <value>休日設定。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting">
      <summary>カレンダーの休日を保持する <see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" /> を表します。このクラスは継承できません。</summary>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting" /> は複数の <see cref="!:GrapeCity.Windows.InputMan.IHoliday" /> を保持し、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> に休日を設定するために <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.HolidaySetting" /> プロパティに設定できます。</para>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting" nolink="true" /> をアクティブにするには、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting.IsActive" /> を <see langword="true" /> に設定するか、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" nolink="true" /> から開くネイティブにサポートされた休日コンテキストメニューで対応するコンテキスト項目（項目の見出しは <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingBase.HolidaySettingName" />）にチェックマークを付けます。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting.#ctor(System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">休日設定の名前。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting.Holidays">
      <summary>休日を取得します。</summary>
      <value>休日。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting.IsActive">
      <summary>この休日設定がアクティブかどうかを示す値を取得または設定します。</summary>
      <value>
        この休日設定がアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingBase">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> の休日を設定するための基本クラスである <see cref="!:GrapeCity.Windows.InputMan.HolidaySettingBase" /> を表します。</summary>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingBase" /> は <see cref="!:GrapeCity.Windows.InputMan.HolidayGroup" /> と <see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" /> の基本クラスです。</para>
        <para><see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" nolink="true" /> は <see cref="!:GrapeCity.Windows.InputMan.IHoliday" /> のグループを保持します。<see cref="!:GrapeCity.Windows.InputMan.HolidayGroup" nolink="true" /> は <see cref="!:GrapeCity.Windows.InputMan.HolidaySetting" nolink="true" /> のグループを保持します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingBase.HolidaySettingName">
      <summary>休日設定の名前を取得または設定します。</summary>
      <value>休日設定の名前を示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingBase.PropertyChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> インスタンス。</param>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingBase.PropertyChanged">
      <summary>プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingCollection">
      <summary>休日設定のコレクションである <see cref="!:GrapeCity.Windows.InputMan.HolidaySettingCollection" /> を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingCollection.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingCollection.#ctor(System.Collections.Generic.IEnumerable{GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting})">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">休日設定。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingCollection.InsertItem(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting)">
      <summary>コレクション内の指定したインデックスに項目を挿入します。</summary>
      <param name="index">項目を挿入する位置の 0 から始まるインデックス。</param>
      <param name="item">挿入するオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingCollection.InsertItems(System.Int32,System.Collections.Generic.IEnumerable{GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting})">
      <summary>コレクション内の指定したインデックスに複数の項目を挿入します。</summary>
      <param name="index">項目を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">コレクションに追加するオブジェクトを含む <paramref name="value" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingCollection.RemoveItem(System.Int32)">
      <summary>コレクションの指定したインデックスにある項目を削除します。</summary>
      <param name="index">削除する要素の 0 から始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySettingCollection.SetItem(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidaySetting)">
      <summary>指定したインデックスにある要素を置換します。</summary>
      <param name="index">置換する要素の 0 から始まるインデックス。</param>
      <param name="item">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputBindingHelper">
      <summary>ユーザーがリソースによって複数のコントロールの <see cref="T:System.Windows.Input.InputBinding" /> を設定できるようにするヘルパーを提供します。</summary>
      <example> 次のサンプルは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputBindingHelper" /> を使用して、リソースでいくつかの <see cref="T:System.Windows.Input.InputBinding" /> を複数のコントロールに設定する方法を説明します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\Command.xaml" region="InputBindingHelper_001" /></example>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputBindingHelper.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputBindingHelper" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputBindingHelper.InputBindingsProperty">
      <summary><see cref="P:GrapeCity.Windows.InputMan.InputBindingHelper.InputBindings" /> 依存関係プロパティを示します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputBindingHelper.GetInputBindings(System.Windows.DependencyObject)">
      <summary>指定したコントロールの <see cref="T:System.Windows.Input.InputBindingCollection" /> を返します。</summary>
      <param name="element">コントロールを表す <see cref="T:System.Windows.DependencyObject" />。</param>
      <returns>InputBinding 設定を表す <see cref="T:System.Windows.Input.InputBindingCollection" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" /> です。 </exception>
      <exception cref="T:System.ArgumentException"> <paramref name="element" /> の型は <see cref="T:System.Windows.UIElement" />、<see cref="T:System.Windows.ContentElement" />、<see cref="T:System.Windows.UIElement3D" /> のいずれかである必要があります。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputBindingHelper.SetInputBindings(System.Windows.DependencyObject,System.Windows.Input.InputBindingCollection)">
      <summary><see cref="P:GrapeCity.Windows.InputMan.InputBindingHelper.InputBindings" /> 添付プロパティの値を指定した要素に設定します。</summary>
      <param name="element"><see cref="P:GrapeCity.Windows.InputMan.InputBindingHelper.InputBindings" /> 添付プロパティを設定する要素。</param>
      <param name="value"><see cref="P:GrapeCity.Windows.InputMan.InputBindingHelper.InputBindings" /> 添付プロパティの新しい値を表す <see cref="T:System.Windows.Input.InputBindingCollection" /> 値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" /> です。 </exception>
      <exception cref="T:System.ArgumentException"> <paramref name="element" /> の型は <see cref="T:System.Windows.UIElement" />、<see cref="T:System.Windows.ContentElement" />、<see cref="T:System.Windows.UIElement3D" /> のいずれかである必要があります。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputTextValidator">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value">GcDateTime.Value</see> が <see langword="null" /> のときにそれが有効かどうかを表します。</summary>
      <remarks>このクラスは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime" /> コントロールのみをサポートします。何も入力されていない場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value">GcDateTime.Value</see> は常に有効です。何かが入力されていて、なおかつ <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value" nolink="true">GcDateTime.Value</see> が <see langword="null" /> の場合、その結果は無効になります。</remarks>
      <example> 次のサンプルコードは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" />を使用してコントロール値を検証する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDate.xaml" region="ControlValidator_001" /></example>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputTextValidator.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputTextValidator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputTextValidator.#ctor(System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.InputTextValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorContent">エラーの内容。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem">
      <summary>その内容が <see cref="T:System.Int32" /> 値である項目を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem" />の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem.#ctor(System.Int32)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem" />の新しいインスタンスを初期化します。</summary>
      <param name="value">Value に設定するオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem.op_Implicit(System.Int32)~GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem">
      <summary>整数を <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem" /> に変換します。</summary>
      <param name="value"><see cref="T:System.Int32" /> 値。</param>
      <returns>変換された <see cref="T:System.Int32" /> を表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem.op_Implicit(GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem)~System.Int32">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem" /> を整数に変換します。</summary>
      <param name="value"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem" /> オブジェクト。</param>
      <returns>変換された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IntegerItem" /> を表す <see cref="T:System.Int32" /> 値。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1">
      <summary>その内容が指定した型 <typeparamref name="T" /> である項目を表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
      <typeparam name="T">内容項目の型。</typeparam>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1" />の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1.#ctor(`0)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1" />の新しいインスタンスを初期化します。</summary>
      <param name="value">値は、内容として <b>Item</b> に渡されます。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1.Value">
      <summary><b>Item</b> の内容を示す値を取得または設定します。</summary>
      <value>内容を示す値。</value>
      <exception cref="T:System.ArgumentException"> 値が <see lang="Null" /> または string.Empty であるか、文字列に無効な文字が含まれています。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> 値が (0,9) の範囲から外れています。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1.CompareValue(`0,`0)">
      <summary><typeparamref name="T" /> 型の 2 つの値を比較します。</summary>
      <param name="first">比較する最初の <typeparamref name="T" /> 型。</param>
      <param name="second">比較する2番目の <typeparamref name="T" /> 値。</param>
      <returns>比較する 2 つの項目の辞書的関係を示す 32 ビットの符号付き整数。 戻り値が 0 未満の場合は、<paramref name="first" />  が <paramref name="second" /> より小さいことを示します。 戻り値が 0 の場合は、<paramref name="first" /> と <paramref name="second" /> が等しいことを示します。 戻り値が 0 より大きいの場合は、<paramref name="first" /> が <paramref name="second" /> より大きいことを示します。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> がこのインスタンスと等しいかどうかを判断します。</summary>
      <param name="obj">このインスタンスと比較する <see cref="T:System.Object" />。</param>
      <returns>
        指定した <see cref="T:System.Object" /> がこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1.GetHashCode">
      <summary>この <b>Item</b> のハッシュコードを返します。</summary>
      <returns>ハッシュコードを示す 32 ビットの符号付き整数。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1.op_Equality(GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item{`0},GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item{`0})">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1" /> の2つのインスタンスが等しいかどうかを示す値を返します。</summary>
      <param name="left"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1" />。</param>
      <param name="right"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1" />。</param>
      <returns>
        <paramref name="left" /> と <paramref name="right" /> が等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1.op_Inequality(GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item{`0},GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item{`0})">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1" /> の2つのインスタンスが等しくないかどうかを示す値を返します。</summary>
      <param name="left"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1" />。</param>
      <param name="right"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1" />。</param>
      <returns>
        <paramref name="left" /> と <paramref name="right" /> が等しくない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ItemCheckEventArgs">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ItemCheck" />のイベントデータを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ItemCheckEventArgs.#ctor(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ItemCheckEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayIndex">変更する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> の０から始まる表示インデックス。</param>
      <param name="oldValue"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> の変更前のチェック状態。</param>
      <param name="newValue"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> の変更後のチェック状態。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ItemCheckEventArgs.DisplayIndex">
      <summary>変更する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> の０から始まる表示インデックスを取得します。</summary>
      <value>変更する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> の０から始まる表示インデックス。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ItemCheckEventArgs.NewValue">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> の変更後のチェック状態を示す値を取得します。</summary>
      <value>変更後のチェック状態。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ItemCheckEventArgs.OldValue">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> の変更前のチェック状態を示す値を取得します。</summary>
      <value>変更前のチェック状態。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KeyExitEventArgs">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.KeyExit" />のイベントデータを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KeyExitEventArgs.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey)">
      <summary>指定した ExitKey を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KeyExitEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="key"><see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.KeyExit" /> イベントを発生させたキーを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KeyExitEventArgs.#ctor(System.Windows.RoutedEvent,GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey)">
      <summary>指定した ExitKey を使用して、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KeyExitEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="routedEvent"><see cref="T:System.Windows.RoutedEventArgs" /> クラスのこのインスタンスのルーティングイベント識別子。</param>
      <param name="key"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey" /> イベントを発生させたキーを示す <see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.KeyExit" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KeyExitEventArgs.Key">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey" /> イベントを発生させたキーを示す <see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.KeyExit" /> 値を取得します。</summary>
      <value><see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.KeyExit" /> イベントを発生させたキーを表します。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthConverter">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンスから他の型のインスタンスへの変換、またはその逆の変換を行います。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>この型コンバータが、指定した型のオブジェクトをこのコンバータの型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する 。</param>
      <param name="sourceType">変換元の型。</param>
      <returns>このコンバータが変換を実行できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>型コンバータがオブジェクトを指定した型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する 。</param>
      <param name="destinationType">変換先の型。</param>
      <returns>このコンバータが変換を実行できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定した値をコンバータの目的の変換型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する 。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">このコンバータの型に変換する値。</param>
      <returns>変換された値。</returns>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />が継承元の<see cref="T:System.ComponentModel.TypeConverter" />で実装されていません。</exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストとカルチャ情報を使用して、指定した値オブジェクトを、指定した型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する 。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換対象のオブジェクト</param>
      <param name="destinationType">value パラメーターの変換後の型。</param>
      <returns>変換後の値を表すオブジェクト</returns>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />が継承元の<see cref="T:System.ComponentModel.TypeConverter" />で実装されていません。</exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListCheckBoxColumn">
      <summary><see cref="T:System.Windows.Controls.CheckBox" /> コントロールをその <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> でホストする <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> 列を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListCheckBoxColumn.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListCheckBoxColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.Columns" /> で使用される列を表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.ActualWidth">
      <summary>カラムの現在の幅（ピクセル単位）を取得します。</summary>
      <value>列の幅（ピクセル単位）。列がまだ <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> に追加されていない場合は０を返します。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ColumnWidth" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MaxColumnWidth" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.MinColumnWidth" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.Width" /> の各設定を考慮した後の列の実際の表示幅を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserResize">
      <summary>ユーザーがマウスを使用してカラムの幅を調整できるかどうかを示す値を取得または設定します。</summary>
      <value>
        ユーザーが列のサイズを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は現在の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserResizeColumns">GcListBox.CanUserResizeColumns</see> プロパティの値です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserResize" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserResizeColumns" /> プロパティが両方とも設定されている場合は、false の値が true の値よりも優先されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserSort">
      <summary>ユーザーがカラムヘッダをクリックしてカラムを並べ替えられるかどうかを示す値を取得または設定します。</summary>
      <value>
        ユーザーが列をソートできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は現在の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserSortColumns">GcListBox.CanUserSortColumns</see> プロパティの値です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserSort" /> プロパティと <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.CanUserSortColumns" /> プロパティが両方とも設定されている場合は、false の値が true の値よりも優先されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.ElementStyle">
      <summary>列が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> のために表示する要素の描画時に使用されるスタイルを取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の描画時に使用されるスタイル。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.Header">
      <summary>カラムヘッダの内容を取得または設定します。</summary>
      <value>列ヘッダの内容。既定値は <see langword="null" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.Header" /> は <see cref="P:System.Windows.Controls.ContentControl.Content">ListHeader.Content</see> として使用されます。</remarks>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> は <see cref="T:System.Windows.UIElement" /> です。 </exception>
      <example> 次のサンプルは、XAMLでHeaderプロパティを設定する方法を説明します。 このサンプルは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> クラスで使用できるより大きなサンプルの一部です。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcListBox.xaml" region="ListBox_005" /></example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.HeaderStyle">
      <summary>カラムヘッダの描画時に使用されるスタイルを取得または設定します。</summary>
      <value>列ヘッダの描画時に使用されるスタイル。<see cref="!:GrapeCity.Windows.InputMan.GcListBox.HeaderStyle">GcListBox.HeaderStyle</see> 設定を使用する場合は <see langword="null" />。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.IsAutoGenerated">
      <summary>カラムが自動生成されるかどうかを示す値を取得します。</summary>
      <value>
        列が自動生成される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.MemberPath">
      <summary>各データ項目に表示されるプロパティの名前またはパスを取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> の各データ項目に表示されるプロパティの名前またはパス。既定値は空の文字列（""）です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.SortDirection">
      <summary>並べ替え操作の方向を取得します。</summary>
      <value>並べ替え操作の方向。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.SubItemStyle">
      <summary>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の描画時に使用されるスタイルを取得または設定します。</summary>
      <value>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の描画時に使用されるスタイル。既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.Visibility">
      <summary>カラムの表示設定を取得または設定します。</summary>
      <value>列の表示設定を指定する列挙値。 既定値は <see cref="F:System.Windows.Visibility.Visible" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.Width">
      <summary>カラムの幅または自動サイズ設定モードを取得または設定します。</summary>
      <value>列の幅または自動サイズ設定モードを表す構造体。既定値は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.ColumnWidth">GcListBox.ColumnWidth</see> プロパティの値です。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.GenerateElement(GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem)">
      <summary>派生クラスでオーバーライドされた場合、<see cref="!:GrapeCity.Windows.InputMan.ListColumn.MemberPath" /> プロパティ値に従って列に連結された読み取り専用の要素を取得します。</summary>
      <param name="subItem">生成された要素を格納する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" />。</param>
      <returns><see cref="!:GrapeCity.Windows.InputMan.ListColumn.MemberPath" /> プロパティ値に従って列に連結された、新しい読み取り専用の要素。</returns>
      <remarks>このメソッドは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> の列に <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容が設定されるときに内部で呼び出されます。派生クラスでオーバーライドされた場合、このメソッドは読み取り専用の要素を作成して設定し、<see cref="!:GrapeCity.Windows.InputMan.ListColumn.MemberPath" /> プロパティ値に従って適切な依存関係プロパティを連結します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.GetSubItem(System.Object)">
      <summary>特定の <paramref name="item" /> に従って、表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> を取得します。</summary>
      <param name="item">特定の項目。</param>
      <returns>表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" />。</returns>
      <remarks><paramref name="item" /> が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> で、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> がユーザーによって設定されている場合は、設定された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> を返します。<br /><paramref name="item" /> が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> で、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> がユーザーによって設定されていない場合は、生成された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" nolink="true" /> を返します。<br /><paramref name="item" /> が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> でない場合は、生成された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" nolink="true" /> を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.GetSubItemData(System.Object)">
      <summary>ユーザーによって設定された具体的なデータを取得します。</summary>
      <param name="item">データ項目。</param>
      <returns>ユーザーによって設定された具体的なデータ。</returns>
      <remarks><paramref name="item" /> が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> で、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> がユーザーによって設定されている場合は、関連する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> を返します。<br /><paramref name="item" /> が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> で、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> がユーザーによって設定されていない場合は、関連するデータを返します。<br /><paramref name="item" /> が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> でない場合は、関連するデータを返します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.ResetCanUserResize">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserResize" /> プロパティを既定値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.ResetCanUserSort">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.CanUserSort" /> プロパティを既定値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.ResetWidth">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumn.Width" /> プロパティを既定値にリセットします。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListColumnCollection">
      <summary><see cref="!:GrapeCity.Windows.InputMan.ListColumn" /> のインスタンスのコレクションを表します。このクラスは継承できません。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader">
      <summary>個々の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> 列ヘッダを表します。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> スタイルおよびテンプレートを介してのみ、アクセスしたり XAML で使用したりできます。<br /><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" nolink="true" /> の内容を XAML スタイルで指定することは一般的ではありませんが、可能です。通常、内容は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" nolink="true" /> に関連付けられたデータによって定義され、スタイルでは未設定のままになります。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.SeparatorBrushProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.SeparatorBrush" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.ShowSeparatorProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.ShowSeparator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.SeparatorBrush">
      <summary>カラムヘッダ区切り線の描画に使用される <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。これは依存関係プロパティです。</summary>
      <value>列ヘッダ区切り線の描画に使用されるブラシ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.ShowSeparator">
      <summary>カラムヘッダ区切り線を表示するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>カラムヘッダ区切り線の表示設定を示す列挙値の 1 つ。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.OnContentChanged(System.Object,System.Object)">
      <summary><see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="oldContent"><see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの変更前の値。</param>
      <param name="newContent"><see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの変更後の値。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Controls.ContentControl.Content">ListHeader.Content</see> は <see cref="T:System.Windows.UIElement" /> をサポートしていません。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>派生クラスでデリゲートを結び付けずにイベントを処理するため、<see cref="E:System.Windows.UIElement.LostMouseCapture" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.MouseEnter" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.MouseLeave" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.MouseMove" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeadersPresenter">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeader" /> を追加するコントロールのビジュアルツリー内の場所を指定するために、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> のテンプレートで使用されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeadersPresenter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeadersPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListHeadersPresenter.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、このメソッドは、アプリケーションコードまたは内部プロセス（レイアウトパスの再構築など）によって <see cref="M:System.Windows.Controls.Control.ApplyTemplate" /> が呼び出されるたびに実行されます。 簡単に言うと、これは、UI 要素がアプリケーションに表示される直前にこのメソッドが呼び出されることを意味します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListImageColumn">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> コントロールをその <see cref="T:System.Windows.Controls.Image" /> でホストする <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> 列を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListImageColumn.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListImageColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListImageColumn.CanUserSort">
      <summary>ユーザーがカラムヘッダをクリックしてカラムを並べ替えられるかどうかを示す値を取得します。</summary>
      <value>
        ユーザーがカラムを並べ替えられない場合は <see langword="false" />。</value>
      <remarks>この列はソートをサポートしていません。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListImageColumn.CanUserSort" /> プロパティは常に <see langword="false" /> を返します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListImageColumn.SortDirection">
      <summary>並べ替え操作の方向を取得します。</summary>
      <value>並べ替え操作の方向。</value>
      <remarks>この列はソートをサポートしていません。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListImageColumn.SortDirection" /> プロパティは常に <see langword="null" /> を返します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListImageColumn.Stretch">
      <summary>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> を埋めるために <see cref="T:System.Windows.Controls.Image" /> をどのように引き伸ばすかを表す値を取得または設定します。</summary>
      <value>ソースイメージの適用方法を指定する列挙体の値。既定値は <see cref="F:System.Windows.Media.Stretch.None" /> です。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.UseMultipleColumn" /> が <see langword="true" /> の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> で選択可能な項目を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.IndentProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.Indent" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.IsCheckedProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.IsChecked" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.Indent">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> のインデントを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> のインデントを表す <see cref="T:System.Double" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.IsChecked">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> がチェックされているかどうかを取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> がチェックされている場合は <see langword="true" />。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" nolink="true" /> がチェックされていない場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.SubItems">
      <summary>項目にデータを格納するサブ項目のコレクションを取得します。</summary>
      <value>この項目のすべてのサブ項目を含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItemCollection" />。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.ArrangeOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの Arrange パスの動作を提供します。このメソッドをオーバーライドして独自の Arrange パスの動作を定義できます。</summary>
      <param name="finalSize">このオブジェクトがオブジェクト自体と子を配置するために使用する親の内側の最終的な領域。</param>
      <returns>要素がレイアウトに配置された後に使用される実際のサイズ。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.MeasureOverride(System.Windows.Size)">
      <summary>Silverlight レイアウトの Measure パスの動作を提供します。このメソッドをオーバーライドして独自の Measure パスの動作を定義できます。</summary>
      <param name="availableSize">このオブジェクトが子オブジェクトに与えることができるサイズ。値として無限大（<see cref="F:System.Double.PositiveInfinity" />）を指定し、このオブジェクトがどのような内容にもサイズを合わせられるようにすることができます。</param>
      <returns>子オブジェクトの割り当てサイズの計算や、固定コンテナーサイズなどの他の考慮事項に基づいて、このオブジェクトでレイアウト時に必要と判断されたサイズ。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセス（レイアウトパスの再構築など）によって <see cref="M:System.Windows.Controls.Control.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。簡単に言うと、このメソッドは、アプリケーションに UI 要素が表示される直前に呼び出されます。詳細については、「解説」を参照してください。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.UseMultipleColumn" /> の <see langword="false" /> で選択可能な項目を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.IsSelectedProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.IsSelected" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.SelectedEvent">
      <summary><see cref="E:ListItemBase.Selected" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.UnselectedEvent">
      <summary><see cref="E:ListItemBase.Unselected" /> ルーティングイベントを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.IsSelected">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase" /> が選択されているかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        このインスタンスが選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセス（レイアウトパスの再構築など）によって <see cref="M:System.Windows.Controls.Control.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。簡単に言うと、このメソッドは、アプリケーションに UI 要素が表示される直前に呼び出されます。詳細については、「解説」を参照してください。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary><see cref="E:System.Windows.UIElement.GotFocus" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>提供されたイベントデータを使用して、<see cref="E:System.Windows.UIElement.LostFocus" /> ルーティングイベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" />。このイベントデータには <see cref="E:System.Windows.UIElement.LostFocus" /> イベントの識別子が含まれている必要があります。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" />のいずれかの依存関係プロパティの有効値が更新されるたびに呼び出されます。変更が発生した具体的な依存関係プロパティが引数パラメーターで報告されます。<see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティと変更前後の値を含むイベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.OnSelected(System.Windows.RoutedEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.Selected" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.Unselected" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.RoutedEventArgs" /> インスタンス。</param>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.Selected">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase" /> が選択解除されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase.Unselected">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase" /> が選択解除されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemsPresenter">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> を追加するコントロールのビジュアルツリー内の場所を指定するために、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemBase" /> のテンプレートで使用されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemsPresenter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItemsPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn">
      <summary>ユーザーがカスタマイズした <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> をホストする <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> 列を表します。このクラスは継承できません。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn" /> は主に、ユーザーが特定の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> や <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> によって <see cref="P:System.Windows.Controls.ItemsControl.Items">GcListbox.Items</see> をカスタマイズする場合に使用します。<br /><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" nolink="true" /> ではない他のデータを表示するために <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn" nolink="true" /> を使用した場合、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> は、その表示する特定のデータを <see cref="P:System.Windows.Controls.ContentControl.Content" /> として持つ <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" nolink="true" /> を作成します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn.ElementStyle">
      <summary>列が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> のために表示する要素の描画時に使用されるスタイルを取得します。</summary>
      <value>表示専用要素の描画時に使用されるスタイル。</value>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn.ElementStyle" /> プロパティはこの列では無効です。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn.ElementStyle" nolink="true" /> は常に <see langword="null" /> を返します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn.MemberPath">
      <summary>各データ項目に表示されるプロパティの名前またはパスを取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> の各データ項目に表示されるプロパティの名前またはパス。</value>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn.MemberPath" /> プロパティはこの列では無効です。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListSubItemColumn.MemberPath" nolink="true" /> は常に空の文字列（""）を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn">
      <summary>テンプレートによって指定された内容をその <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> でホストする <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> 列を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn.ElementStyle">
      <summary>列が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> のために表示する要素の描画時に使用されるスタイルを取得します。</summary>
      <value>表示専用要素の描画時に使用されるスタイル。</value>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn.ElementStyle" /> プロパティはこの列では無効です。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn.ElementStyle" nolink="true" /> は常に <see langword="null" /> を返します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn.MemberPath">
      <summary>各データ項目に表示されるプロパティの名前またはパスを取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> の各データ項目に表示されるプロパティの名前またはパス。</value>
      <remarks>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn.MemberPath" /> プロパティはこの列では無効です。<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn.MemberPath" nolink="true" /> は常に空の文字列（""）を返します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTemplateColumn.SubItemTemplate">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容の表示に使用されるテンプレートを取得または設定します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容の表示に使用されるテンプレート。既定値は <see langword="null" /> です。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> コントロールをその <see cref="T:System.Windows.Controls.TextBlock" /> でホストする <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> 列を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontFamilyProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontFamily" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontFamily">
      <summary>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容のフォントファミリーを取得または設定します。これは依存関係プロパティです。</summary>
      <value>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の描画時に使用されるスタイル。既定値は <see langword="null" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontFamily" /> プロパティを明示的に指定しない場合は、ビジュアルツリーで指定された最初の null 以外の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontFamily" nolink="true" /> プロパティが表示に使用されますが、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontFamily" nolink="true" /> プロパティは <see langword="null" /> を返します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontSize">
      <summary>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容のフォントサイズを取得または設定します。</summary>
      <value>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容のフォントサイズ。既定値は <see cref="F:System.Double.NaN">double.NaN</see> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontSize" /> プロパティを明示的に指定しない場合は、ビジュアルツリーで指定された最初の null 以外の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontSize" nolink="true" /> プロパティが表示に使用されますが、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontSize" nolink="true" /> プロパティは <see cref="F:System.Double.NaN">double.NaN</see> を返します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontStyle">
      <summary>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容のフォントスタイルを取得または設定します。</summary>
      <value>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容のフォントスタイル。既定値は <see cref="P:System.Windows.FontStyles.Normal" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.FontWeight">
      <summary>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容のフォントウェイトを取得または設定します。</summary>
      <value>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容のフォントスタイル。既定値は <see cref="P:System.Windows.FontWeights.Normal" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.Foreground">
      <summary>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> のテキスト内容の描画に使用されるブラシを取得または設定します。</summary>
      <value>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の描画時に使用されるスタイル。既定値は <see langword="null" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.Foreground">ListTextColumn.Foreground</see> プロパティを明示的に指定しない場合は、ビジュアルツリーで指定された最初の null 以外の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.Foreground" nolink="true" /> プロパティが表示に使用されますが、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.Foreground" nolink="true">ListTextColumn.Foreground</see> プロパティは <see langword="null" /> を返します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.TextTrimming">
      <summary>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> の内容が内容領域に収まらないときに使用するテキストトリミング動作を取得または設定します。</summary>
      <value>使用するテキストトリミング動作を指定する <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.TextTrimming" /> 値の１つ。既定値は <see cref="F:System.Windows.TextTrimming.None" /> です。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.TextTrimming" /> プロパティは、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.TextWrapping" /> プロパティが <see cref="F:System.Windows.TextWrapping.NoWrap" /> に設定されている場合以外は効果がありません。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListTextColumn.TextWrapping">
      <summary>列の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> のテキストの折り返し方法を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> のテキストの折り返し方法を示す値。既定値は <see cref="F:System.Windows.TextWrapping.NoWrap" /> です。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask" /> の列挙を含む <see cref="!:GrapeCity.Windows.InputMan.Fields.MaskEnumerationField" /> クラスを表します。このクラスは継承できません。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>ActiveDropDown</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.IsDropDownOpen" /> がどちらも <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.#ctor(System.String[])">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="items">項目を示す <see cref="T:System.String" /> の配列。</param>
      <exception cref="T:System.ArgumentNullException"> <paramref name="items" /> が <see langword="null" /> です。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="items" /> に項目が含まれていません。 </exception>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.AllowDropDownOpenProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskEnumerationField.AllowDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.AutoConvertProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskEnumerationField.AutoConvert" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.AutoOpenDropDownProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskEnumerationField.AutoOpenDropDown" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.IsDropDownOpenProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskEnumerationField.IsDropDownOpen" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.ItemsProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskEnumerationField.Items" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.PromptCharProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskEnumerationField.PromptChar" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.SpinIncrementProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskEnumerationField.SpinIncrement" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.AllowDropDownOpen">
      <summary>ドロップダウン機能がアクティブかどうかを示す<see cref="T:System.Boolean" /> 値を取得または設定します。 これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウン機能がアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.AutoConvert">
      <summary>指定された値が項目と一致しない場合に値を項目に変換するかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        自動変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.AutoOpenDropDown">
      <summary>現在のフィールドがアクティブになったときに自動的にドロップダウンするかどうかを示す <see cref="T:System.Boolean" /> 値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。このフィールドにフォーカスが移動したときに自動的にドロップダウンする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.IsDropDownOpen">
      <summary>ドロップダウンウィンドウが表示されているかどうかを示す <see cref="T:System.Boolean" />値を取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウンウィンドウが表示されている場合は<see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.Items">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField" /> の項目を取得または設定します。これは依存関係プロパティです。</summary>
      <value>文字列項目を含む <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> 型でないか、空または <see langword="null" /> の文字列が含まれます。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.PromptChar">
      <summary>フィールドのプロンプト文字を取得または設定します。これは依存関係プロパティです。</summary>
      <value>入力時にフィールドの空のビットへの入力を促すために使用される <see cref="T:System.Char" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.SpinIncrement">
      <summary>スピンの増分量を取得または設定します。これは依存関係プロパティです。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.Activate">
      <summary>現在のフィールドをアクティブにし、既定のキャレット位置にキャレットを配置します。</summary>
      <returns>
        この要素にキャレットを設定できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <remarks>このメソッドは、このフィールドにキャレットを設定したいときに呼び出すことができます。オーナーコントロールにフォーカスがある場合は、このフィールドがただちにアクティブになります。オーナーコントロールにフォーカスがない場合は、現在のフィールドの最初の位置に選択の開始位置が設定されます。フィールドにキャレットがある場合は、このメソッドを呼び出しても何も起こりません。フィールドにキャレットがない場合にこのメソッドを呼び出してコントロールがフォーカスを取得したときは、そのフィールドの左端にキャレットが配置されます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.DoSpinDown">
      <summary>スピンダウン動作を処理します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.DoSpinDown(System.Int32)">
      <summary>指定した増分量を使用してスピンダウンを実行します。</summary>
      <param name="increment">スピン増分を示す <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.DoSpinUp">
      <summary>スピンアップ動作を処理します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.DoSpinUp(System.Int32)">
      <summary>指定した増分量を使用してスピンアップを実行します。</summary>
      <param name="increment">スピン増分を示す <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.EndInit">
      <summary>要素の初期化プロセスが完了したことを示します。</summary>
      <exception cref="T:System.InvalidOperationException">
        要素に対してまだ <see cref="M:System.Windows.FrameworkElement.BeginInit" /> が呼び出されていないときに <see cref="M:System.Windows.FrameworkElement.EndInit" /> が呼び出されました。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskEnumerationField.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask" /> のフィールドを定義する <see cref="!:GrapeCity.Windows.InputMan.Fields.MaskField" /> クラスを表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
      <remarks>これは <see cref="!:GrapeCity.Windows.InputMan.GcMask" /> のすべての <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field" /> クラスの基本クラスです。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField.TextProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskField.Text" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskField.Text" /> 依存関係プロパティの識別子。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField.Text">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField" /> クラスのテキストプロパティを取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField" /> の現在の内容を示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldCollection">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldCollection.Add(System.String)">
      <summary>書式文字列によって <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField" /> を追加します。</summary>
      <param name="format">書式。</param>
      <returns>追加された後の最後の項目のインデックスを示す <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldCollection.Add(GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldCollection" /> の最後にオブジェクトを追加します。</summary>
      <param name="item"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldCollection" /> の最後に追加するオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldCollection.AddRange(System.String)">
      <summary>書式文字列によって <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField" /> オブジェクトを追加します。</summary>
      <param name="text">フィールドを作成する書式。</param>
      <exception cref="T:System.ArgumentException"> <paramref name="text" /> に、変換できない無効な文字が含まれます。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldsBuilder">
      <summary>書式によって <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField" /> を作成するビルダーを表す抽象クラス。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
      <remarks>このクラスは、書式によって <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField" /> オブジェクトの配列を作成するためにのみ使用されます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldsBuilder.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldsBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldsBuilder.BuildFields(System.String)">
      <summary>指定した書式によって複数の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField" /> オブジェクトを作成します。</summary>
      <param name="format"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" />コントロールによって定義される書式。</param>
      <returns>作成されたフィールドを示す<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskField" /> の配列。</returns>
      <exception cref="T:System.ArgumentException"> <paramref name="format" />に無効な文字が含まれます。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSet">
      <summary>依存関係プロパティとして使用できる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldCollection" /> ラッパーを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSet.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSet" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSet.#ctor(System.String)">
      <summary>指定した書式を使用して、新しい <b>MaskFieldSet</b> を初期化します。</summary>
      <param name="format"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" />コントロールによって定義される書式。</param>
      <example> GcMask mask = new GcMask(); mask.FieldSet = new MaskFieldSet("\D{3}-\D{4}"); </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSet.Fields">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSet" /> のフィールドを取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcMask" /> の項目を表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldCollection" />。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSetTypeConverter">
      <summary>文字列オブジェクトを <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSet" /> オブジェクトに変換する型コンバータを提供します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSetTypeConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSetTypeConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSetTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、指定した型のオブジェクトをこのコンバータの型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換元の型を表す <see cref="T:System.Type" />。</param>
      <returns>型が <see cref="T:System.String" /> の場合にのみ <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSetTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、オブジェクトを指定した型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換先の型を表す <see cref="T:System.Type" />。</param>
      <returns>
        <paramref name="destinationType" /> が <see langword="true" /> の場合は <see cref="T:System.String" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSetTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したコンテキストとカルチャ情報を使用して、指定したオブジェクトを <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSet" />の型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換する <see cref="T:System.Object" />。</param>
      <returns>変換された値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFieldSetTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストとカルチャ情報を使用して、指定した値オブジェクトを、指定した型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する 。</param>
      <param name="culture">。<see langword="null"></see>が渡された場合は、現在のカルチャが使用されます。</param>
      <param name="value">変換対象のオブジェクト</param>
      <param name="destinationType">value パラメーターの変換後の型。</param>
      <returns>変換後の値を表すオブジェクト</returns>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />が継承元の<see cref="T:System.ComponentModel.TypeConverter" />で実装されていません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter">
      <summary>特別な書式を持つテキストの変換に使用されるコンバータを表します。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter" /> は、連結プロセスにおいて特定のテキストを指定された書式に従って別の文字列に変換するために使用されます。テキストが <see cref="!:GrapeCity.Windows.InputMan.MaskFormatConverter.Pattern" /> プロパティにとって有効である場合は、変換された文字列を返します。それ以外の場合はエラー文字列を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter" /> の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter.ErrorString">
      <summary>変換されたオブジェクトがパターンに一致しないときに返す文字列を取得または設定します。</summary>
      <value>入力値がパターンに対して有効でないときに出力に使用される <see cref="T:System.String" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter.NullString">
      <summary>変換されたオブジェクトが <see cref="F:System.String.Empty">String.Empty</see> または <see langword="null" /> のときに返す文字列を取得または設定します。</summary>
      <value>入力値が <see cref="F:System.String.Empty">String.Empty</see> または <see cref="T:System.String" /> のときに出力に使用される <see langword="null" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter.Pattern">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter" /> の書式を取得または設定します。</summary>
      <value>現在サポートされている書式を規定する <see cref="T:System.String" />。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>パターンに基づいて値を特別な文字列に変換します。</summary>
      <param name="value">バインディングソースによって生成された値。</param>
      <param name="targetType">バインディングターゲットプロパティの型。</param>
      <param name="parameter">使用するコンバータのパラメーター。</param>
      <param name="culture">コンバータで使用するカルチャ。</param>
      <returns>変換後の値。このメソッドが <see langword="null" /> を返す場合は、有効な null 値が使用されます。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>ターゲットデータをソースオブジェクトに渡す前に変更します。このメソッドは <see cref="F:System.Windows.Data.BindingMode.TwoWay" />バインディングの場合にのみ呼び出されます。</summary>
      <param name="value">ソースに渡されるターゲットデータ。</param>
      <param name="targetType">ソースオブジェクトで想定されているデータの <see cref="T:System.Type" />。</param>
      <param name="parameter">コンバータロジックで使用されるオプションのパラメーター。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ソースオブジェクトに渡される値。</returns>
      <remarks><see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> はサポートされていません。</remarks>
      <exception cref="T:System.NotSupportedException"> このメソッドが呼び出された場合。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskLiteralField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask" /> のリテラルを表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.MaskLiteralField" /> クラスを表します。このクラスは継承できません。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskLiteralField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskLiteralField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskLiteralField.#ctor(System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskLiteralField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラルテキスト。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcMask" /> のパターンに基づいて入力テキストをフィルタリングできる <see cref="!:GrapeCity.Windows.InputMan.Fields.MaskPatternField" /> クラスを表します。このクラスは継承できません。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField" /> では以下のパターンがサポートされています。 <list type="table"><listheader><term>パターン</term><description>説明</description></listheader><item><term>￥Ａ</term><description>￥Ａ 大文字の全角アルファベット（Ａ-Ｚ）。</description></item><item><term>￥ａ</term><description>￥ａ 小文字の全角アルファベット（ａ-ｚ）。</description></item><item><term>￥Ｄ</term><description>￥Ｄ 任意の全角 10 進数に一致します。[０-９] と同じです。</description></item><item><term>￥Ｂ</term><description>￥Ｂ 全角２進数に一致します。[０-１] と同じです。</description></item><item><term>￥Ｘ</term><description>￥Ｘ 全角 16 進数に一致します。[０-９Ａ-Ｆａ-ｆ] と同じです。</description></item><item><term>￥Ｗ</term><description>￥Ｗ 任意の全角英数字に一致します。[ａ-ｚＡ-Ｚ＿０-９] と同じです。</description></item><item><term>￥Ｋ</term><description>￥Ｋ 全角カタカナ。</description></item><item><term>￥Ｊ</term><description>￥Ｊ ひらがな。</description></item><item><term>￥Ｚ</term><description>￥Ｚ すべての全角文字。</description></item><item><term>￥Ｎ</term><description>￥Ｎ 促音・拗音の小書き以外の全角カタカナに一致します。</description></item><item><term>￥Ｇ</term><description>￥Ｇ 促音・拗音の小書き以外の全角ひらがなに一致します。</description></item><item><term>￥Ｔ</term><description>￥Ｔ サロゲート文字のみ。 </description></item><item><term>￥A</term><description>￥A 任意の大文字アルファベットに一致します。[A-Z] と同じです。</description></item><item><term>￥a</term><description>￥a 任意の小文字アルファベットに一致します。[a-z] と同じです。</description></item><item><term>￥D</term><description>￥D 任意の 10 進数に一致します。[0-9] と同じです。</description></item><item><term>￥B</term><description>￥B ２進数に一致します。[0-1] と同じです。</description></item><item><term>￥X</term><description>￥X 16 進数に一致します。[0-9A-Fa-f] と同じです。</description></item><item><term>￥W</term><description>￥W 任意の英数字に一致します。[a-zA-Z_0-9] と同じです。</description></item><item><term>￥K</term><description>￥K 半角カタカナ。</description></item><item><term>￥H</term><description>￥H すべての半角文字に一致します。</description></item><item><term>￥N</term><description>￥N 促音・拗音の小書き以外の半角カタカナに一致します。</description></item></list><note><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.AutoConvert" /> を <see langword="false" /> に設定した場合、そのフィールドのテキストは有効な文字に変換されません。</note><para><b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>MouseOver</td><td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>ActiveStates</td><td>Active</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>ActiveStates</td><td>Inactive</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>InputStates</td><td>Full</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>InputStates</td><td>Completed</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>InputStates</td><td>Empty</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>InputStates</td><td>Part</td><td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td></tr></table></para></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.#ctor(System.String,System.Int32,System.Int32)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">パターンを示す <see cref="T:System.String" /> 値。</param>
      <param name="minLength">最小の長さを示す <see cref="T:System.Int32" /> 値。</param>
      <param name="maxLength">最大の長さを示す <see cref="T:System.Int32" /> 値。</param>
      <exception cref="T:System.ArgumentNullException"> <paramref name="pattern" /> が <see langword="null" /> です。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="minLength" /> または <paramref name="maxLength" /> が０未満です。<br />または、<paramref name="maxLength" /> が <see cref="F:System.UInt16.MaxValue" /> を超えています。 </exception>
      <exception cref="T:System.ArgumentException"> <paramref name="minLength" /> が <paramref name="maxLength" /> を超えています。または、<paramref name="pattern" /> が有効ではありません。 </exception>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.AutoConvertProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskPatternField.AutoConvert" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.MaxLengthProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskPatternField.MaxLength" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.MinLengthProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskPatternField.MinLength" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.PatternProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskPatternField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.PromptCharProperty">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Fields.MaskPatternField.PromptChar" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.AutoConvert">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField" /> が自動変換できるかどうかを示す値を取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        自動変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.MaxLength">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField" /> の最大の長さを取得または設定します。これは依存関係プロパティです。</summary>
      <value>最大の長さを示す <see cref="T:System.Int32" /> 値。既定値は <see cref="F:System.UInt16.MaxValue" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.MinLength">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField" /> の最小の長さを取得または設定します。これは依存関係プロパティです。</summary>
      <value>最小の長さを示す <see cref="T:System.Int32" /> 値。既定値は 1 です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.Pattern">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField" /> のパターンを取得します。これは依存関係プロパティです。</summary>
      <value>パターンを示す <see cref="T:System.String" /> 値。既定値は <see cref="F:System.String.Empty">String.Empty</see> です。</value>
      <exception cref="T:System.ArgumentException"> <see langword="null" /> または無効なパターン文字列を設定しようとした場合。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.PromptChar">
      <summary>フィールドのプロンプト文字を取得または設定します。これは依存関係プロパティです。</summary>
      <value>入力時にフィールドの空のビットへの入力を促すために使用される <see cref="T:System.Char" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.Activate">
      <summary>現在のフィールドをアクティブにし、既定のキャレット位置にキャレットを配置します。</summary>
      <returns>
        この要素にキャレットを設定できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <remarks>このメソッドは、このフィールドにキャレットを設定したいときに呼び出すことができます。オーナーコントロールにフォーカスがある場合は、このフィールドがただちにアクティブになります。オーナーコントロールにフォーカスがない場合は、現在のフィールドの最初の位置に選択の開始位置が設定されます。フィールドにキャレットがある場合は、このメソッドを呼び出しても何も起こりません。フィールドにキャレットがない場合にこのメソッドを呼び出してコントロールがフォーカスを取得したときは、そのフィールドの左端にキャレットが配置されます。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MaskPatternField.EndInit">
      <summary>要素の初期化プロセスが完了したことを示します。</summary>
      <exception cref="T:System.InvalidOperationException">
        要素に対してまだ <see cref="M:System.Windows.FrameworkElement.BeginInit" /> が呼び出されていないときに <see cref="M:System.Windows.FrameworkElement.EndInit" /> が呼び出されました。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1">
      <summary>コレクションデータにアクセスするための基本クラスである動的なデータコレクションクラスを表します。</summary>
      <typeparam name="T">コレクションの要素の型。</typeparam>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>指定した列挙可能なソースの要素を含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクションの初期化に使用する <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.AddRange(`0[])">
      <summary>指定した配列の要素をコレクションの末尾にコピーします。</summary>
      <param name="value">コレクションに追加するオブジェクトを含む <see cref="T:T" /> 型の配列。</param>
      <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> の値が <see langword="null" /> です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <summary>別の <see cref="T:System.Collections.Generic.IList`1" /> の内容をこのコレクションの最後に追加します。</summary>
      <param name="value">コレクションに追加するオブジェクトを含む <see cref="T:System.Collections.Generic.IList`1" />。</param>
      <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> の値が <see langword="null" /> です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.ClearItems">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.InsertItem(System.Int32,`0)">
      <summary>コレクション内の指定したインデックスに項目を挿入します。</summary>
      <param name="item">挿入するオブジェクト。</param>
      <param name="index">項目を挿入する位置の 0 から始まるインデックス。</param>
      <exception cref="T:System.InvalidOperationException"> コレクションがロックされています。%index% がコレクションのサイズを超えています。%item% が %[LangWord]null% です。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="index" /> がコレクションのサイズを超えています。 </exception>
      <exception cref="T:System.ArgumentNullException"> <paramref name="item" /> が <see langword="null" /> です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.InsertItems(System.Int32,System.Collections.Generic.IEnumerable{`0})">
      <summary>コレクション内の指定したインデックスに複数の項目を挿入します。</summary>
      <param name="index">項目を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">コレクションに追加するオブジェクトを含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <exception cref="T:System.ArgumentNullException"> 指定された値が <see langword="null" /> です。 </exception>
      <exception cref="T:System.InvalidOperationException"> コレクションがロックされています。%index% がコレクションのサイズを超えています。%item% が %[LangWord]null% です。 </exception>
      <exception cref="T:System.ArgumentException"> <paramref name="value" /> に <see langword="null" /> が含まれます。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>提供された引数を使用して <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.CollectionChanged">CollectionChanged</see> イベントを発生します。</summary>
      <param name="e">発生するイベントの引数。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.RemoveItem(System.Int32)">
      <summary>コレクションの指定したインデックスにある項目を削除します。</summary>
      <param name="index">削除する要素の 0 から始まるインデックス。</param>
      <exception cref="T:System.InvalidOperationException"> コレクションがロックされています。%index% がコレクションのサイズを超えています。%item% が %[LangWord]null% です。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="index" /> に指定された値がコレクションのサイズ以上です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.SetItem(System.Int32,`0)">
      <summary>指定したインデックスにある要素を置換します。</summary>
      <param name="item">指定したインデックスにある要素の新しい値。</param>
      <param name="index">置換する要素の 0 から始まるインデックス。</param>
      <exception cref="T:System.InvalidOperationException"> コレクションがロックされています。%index% がコレクションのサイズを超えています。%item% が %[LangWord]null% です。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="index" /> に指定された値が０未満であるか、<see cref="P:System.Collections.ObjectModel.Collection`1.Count" /> を超えています。 </exception>
      <exception cref="T:System.ArgumentNullException"> <paramref name="item" /> が <see langword="null" /> です。 </exception>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NotifyCollection`1.CollectionChanged">
      <summary>項目が追加、削除、変更、移動されたとき、またはリスト全体が更新されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalGeneralFormatDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の一般書式表示フィールドを定義する <see cref="!:GrapeCity.Windows.InputMan.Fields.NumberDecimalGeneralFormatDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalGeneralFormatDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalGeneralFormatDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalGeneralFormatDisplayField.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.DecimalGeneralFormat)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalGeneralFormatDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">パターンを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DecimalGeneralFormat" /> 値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalGeneralFormatDisplayField.PatternProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalGeneralFormatDisplayField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalGeneralFormatDisplayField.Pattern">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalGeneralFormatDisplayField" /> のパターンを取得または設定します。これは依存関係プロパティです。</summary>
      <value>フィールドのパターンを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DecimalGeneralFormat" /> 列挙体。既定値は <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DecimalGeneralFormat.DBNum1_G" /> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="!:GrapeCity.Windows.InputMan.DecimalGeneralFormat" /> 型ではありません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> がアクティブでないときにその小数部を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField.MaxDigits">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField" /> の最大桁数を取得または設定します。</summary>
      <value>小数部の最大桁数を示す <see cref="T:System.Int32" /> 値。既定値は 28 です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField.MinDigits" /> 未満であるか、28 を超えています。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField.MinDigits">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField" /> の最小桁数を取得または設定します。</summary>
      <value>小数部の最小桁数を示す <see cref="T:System.Int32" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が０未満であるか、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField.MaxDigits" /> を超えています。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の小数部を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.SpinIncrementProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.SpinIncrement" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.ValueProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.Value" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.MaxDigits">
      <summary>フィールドの任意の桁数を取得または設定します。</summary>
      <value>任意の桁数。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が 28 を超えているか、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.MinDigits" /> 未満です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.MinDigits">
      <summary>フィールドの必須の桁数を取得または設定します。</summary>
      <value>必須の桁数。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.MaxDigits" /> を超えています。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> 指定された値が0未満です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.SpinIncrement">
      <summary>スピンの増分量を取得または設定します。</summary>
      <value>スピン増分を示す <see cref="T:System.Int32" /> 値。</value>
      <remarks>値を設定しない場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.SpinIncrement" /> の値が既定値になります。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.DoSpinDown">
      <summary>スピンダウン動作を処理します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.DoSpinDown(System.Int32)">
      <summary>指定した increment パラメーターと wrap パラメーターを使用してスピンダウンを実行します。</summary>
      <param name="increment">スピン増分を示す <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.DoSpinUp">
      <summary>スピンアップ動作を処理します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField.DoSpinUp(System.Int32)">
      <summary>指定した increment パラメーターと wrap パラメーターを使用してスピンアップを実行します。</summary>
      <param name="increment">スピン増分を示す <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> がアクティブでないときにその小数点区切り記号を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorDisplayField.DecimalSeparatorProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorDisplayField.DecimalSeparator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorDisplayField.DecimalSeparator">
      <summary>数値の小数点記号として使用する文字列を取得または設定します。これは依存関係プロパティです。</summary>
      <value>数値の小数点記号として使用する <see cref="T:System.Char" />。既定値は '.' です。</value>
      <remarks>これは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField" /> に表示テキストがある場合にのみ機能します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の小数点記号を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorField.DecimalSeparatorProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorField.DecimalSeparator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorField.DecimalSeparator">
      <summary>数値の小数点記号として使用する <see cref="T:System.Char" /> 値を取得または設定します。</summary>
      <value>数値の小数点記号として使用する <see cref="T:System.Char" />。既定値は '.' です。</value>
      <remarks>これは <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField" /> に表示テキストがある場合にのみ機能します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の <see cref="!:GrapeCity.Windows.InputMan.Fields.NumberDisplayField" /> の基本クラスを表す抽象クラス。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" nolink="true" /> へのアクセスを提供する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> コレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection.Add(System.String)">
      <summary>書式文字列によって <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> をコレクションに追加します。</summary>
      <param name="format"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> の配列に変換できる書式。</param>
      <returns>最後の項目のインデックスを示す <see cref="T:System.Int32" /> 値。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection.Add(GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection" /> の最後にオブジェクトを追加します。</summary>
      <param name="item"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection" /> の最後に追加するオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection.AddRange(System.String)">
      <summary>書式文字列によって複数の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> オブジェクトをコレクションに追加します。</summary>
      <param name="format">書式。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection.InsertItem(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField)">
      <summary>特定のインデックスに項目を挿入するときに呼び出されます。</summary>
      <param name="index">項目を挿入する位置。</param>
      <param name="item">コレクションに挿入する項目。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection.InsertItems(System.Int32,System.Collections.Generic.IEnumerable{GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField})">
      <summary>コレクション内の指定したインデックスに複数の項目を挿入します。</summary>
      <param name="index">項目を挿入する位置。</param>
      <param name="value">コレクションに挿入する項目。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection.SetItem(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField)">
      <summary>指定したインデックスにある要素を置換します。</summary>
      <param name="item">指定したインデックスにある要素の新しい値。</param>
      <param name="index">置換する要素の 0 から始まるインデックス。</param>
      <exception cref="T:System.InvalidOperationException"> コレクションがロックされています。%index% がコレクションのサイズを超えています。%item% が %[LangWord]null% です。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="index" /> に指定された値が０未満です、<br /> または<br /> <see cref="P:System.Collections.ObjectModel.Collection`1.Count" /> を超えています。 </exception>
      <exception cref="T:System.ArgumentNullException"> <paramref name="item" /> が <see langword="null" /> です。 </exception>
      <exception cref="T:System.InvalidOperationException"> <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartDisplayField" /> の複数のインスタンスがコレクションに存在します。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldsBuilder">
      <summary>書式によって <see cref="!:GrapeCity.Windows.InputMan.Fields.NumberDisplayField" /> の配列を作成するビルダーを表す抽象クラス。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldsBuilder.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldsBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldsBuilder.BuildFields(System.String)">
      <summary>指定した書式によって <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> の配列を作成します。</summary>
      <param name="format"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" />コントロールによって定義される書式。</param>
      <returns>作成された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> フィールドを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> の配列。</returns>
      <exception cref="T:System.ArgumentException"> format に無効な文字が含まれます。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldsBuilder.BuildFields(System.String,System.String,System.String,System.String,System.String)">
      <summary>指定した書式によって <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> の配列を作成します。</summary>
      <param name="pattern">パターンを示す <see cref="T:System.String" /> 値。</param>
      <param name="positivePrefix">値が正のときに前に付加する文字列を示す <see cref="T:System.String" /> 値。</param>
      <param name="positiveSuffix">値が正のときに後ろに付加する文字列を示す <see cref="T:System.String" /> 値。</param>
      <param name="negativePrefix">値が負のときに前に付加する文字列を示す <see cref="T:System.String" /> 値。</param>
      <param name="negativeSuffix">値が負のときに後ろに付加する文字列を示す <see cref="T:System.String" /> 値。</param>
      <returns>作成された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> フィールドを示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の配列。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet">
      <summary>依存関係プロパティとして使用できる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection" /> ラッパーを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet.#ctor(System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="format"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> 表示フィールドのデータ情報を含む <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentException"> <paramref name="format" /> に、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayField" /> に変換できない無効な文字が含まれています。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet.DisplayFields">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet" /> の表示フィールドコレクションを取得します。</summary>
      <value>すべてのサブ項目を含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldCollection" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSetTypeConverter">
      <summary>文字列オブジェクトを <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSet" /> オブジェクトに変換する型コンバータを提供します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSetTypeConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSetTypeConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSetTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、指定した型のオブジェクトをこのコンバータの型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換元の型を表す <see cref="T:System.Type" />。</param>
      <returns>型が <see cref="T:System.String" /> の場合にのみ <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSetTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、オブジェクトを指定した型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換先の型を表す <see cref="T:System.Type" />。</param>
      <returns>
        このコンバータが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSetTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定されたコンテキストとカルチャ情報を使用して、指定したオブジェクトをこのコンバータの型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換する <b>Object</b>。</param>
      <returns>変換された値を表す <b>Object</b>。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDisplayFieldSetTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストとカルチャ情報を使用して、指定した値オブジェクトを、指定した型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する 。</param>
      <param name="culture">。<see langword="null"></see>が渡された場合は、現在のカルチャが使用されます。</param>
      <param name="value">変換対象のオブジェクト</param>
      <param name="destinationType">value パラメーターの変換後の型。</param>
      <returns>変換後の値を表すオブジェクト</returns>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />が継承元の<see cref="T:System.ComponentModel.TypeConverter" />で実装されていません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の基本フィールドクラスを表す抽象クラス。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberField.TextProperty">
      <summary>テキストの読み取り専用の依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet">
      <summary>依存関係プロパティとして使用できる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldCollection" /> ラッパーを表します。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" /> は特殊なフィールドセットです。ユーザーが項目の追加または削除に使用するコレクションプロパティはサポートしておらず、代わりに関連フィールドの変更に使用できる５つのプロパティを備えています。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" />の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet.#ctor(System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" />の新しいインスタンスを初期化します。</summary>
      <param name="format"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" />コントロールによって定義される書式。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet.DecimalPart">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField" />の<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" />を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の小数部を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalPartField" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet.DecimalSeparator">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorField" />の<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" />を取得または設定します。</summary>
      <value>整数部と小数部を区切る <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberDecimalSeparatorField" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet.IntegerPart">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField" />の<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" />を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の整数部を示す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet.SignPrefix">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignPrefixField" />の<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" />を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の接頭辞を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignPrefixField" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet.SignSuffix">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignSuffixField" />の<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" />を取得または設定します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber" /> の接頭辞を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignSuffixField" />。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet.SetFields(System.String)">
      <summary>書式文字列を解析して設定を各フィールドに同期します。</summary>
      <param name="format">フィールドの書式を示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet.SetFields(System.String,System.String,System.String,System.String,System.String)">
      <summary>パターンを解析して各フィールドの設定を同期します。</summary>
      <param name="pattern">フィールドのパターンを示す <see cref="T:System.String" /> 値。</param>
      <param name="positivePrefix">正の接頭辞の文字列を示す <see cref="T:System.String" /> 値。</param>
      <param name="positiveSuffix">正の接尾辞の文字列を示す <see cref="T:System.String" /> 値。</param>
      <param name="negativePrefix">負の接頭辞の文字列を示す <see cref="T:System.String" /> 値。</param>
      <param name="negativeSuffix">負の接尾辞の文字列を示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSetTypeConverter">
      <summary>値の型を他の型に変換したり、標準値やサブプロパティにアクセスするための統一された方法を提供します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSetTypeConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSetTypeConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSetTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、指定した型のオブジェクトをこのコンバータの型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換元の型を表す <see cref="T:System.Type" />。</param>
      <returns>
        このコンバータが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSetTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバータが、指定されたコンテキストを使用して、オブジェクトを指定した型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換先の型を表す <see cref="T:System.Type" />。</param>
      <returns>
        このコンバータが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSetTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定されたコンテキストとカルチャ情報を使用して、指定したオブジェクトをこのコンバータの型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換する <see cref="T:System.Object" />。</param>
      <returns>変換された値を表す <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.FormatException"> 指定されたオブジェクトは <see cref="T:System.String" /> ですが、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSet" /> にとって無効です。 </exception>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFieldSetTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストとカルチャ情報を使用して、指定した値オブジェクトを、指定した型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する 。</param>
      <param name="culture">。<see langword="null"></see>が渡された場合は、現在のカルチャが使用されます。</param>
      <param name="value">変換対象のオブジェクト</param>
      <param name="destinationType">value パラメーターの変換後の型。</param>
      <returns>変換後の値を表すオブジェクト</returns>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />が継承元の<see cref="T:System.ComponentModel.TypeConverter" />で実装されていません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter">
      <summary>10 進数値をパターンに基づいて文字列に変換するコンバータを表します。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter" /> は、連結プロセスにおいて特定のテキストを指定された書式に従って別の文字列に変換するために使用されます。テキストが <see cref="!:GrapeCity.Windows.InputMan.NumberFormatConverter.Digit" /> プロパティにとって有効である場合は、変換された文字列を返します。それ以外の場合はエラー文字列を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter" /> の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.Digit">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter" /> の書式を取得または設定します。</summary>
      <value>IntegerPart と DecimalPart の設定を示す <see cref="T:System.String" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.ErrorString">
      <summary>変換されたオブジェクトが書式に適していないときに返す文字列を取得または設定します。</summary>
      <value>入力値が桁に対して有効でないときに出力に使用される <see cref="T:System.String" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.NegativePrefix">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter" /> の負の接頭辞を取得または設定します。</summary>
      <value>入力値が負のときに出力文字列の前に付加する <see cref="T:System.String" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.NegativeSuffix">
      <summary><see cref="!:GrapeCity.Windows.InputMan.NumberFormatConverter" /> の負の接尾辞を取得または設定します。</summary>
      <value>入力値が負のときに出力文字列の後ろに付加する <see cref="T:System.String" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.NullString">
      <summary>変換されたオブジェクトが <see cref="F:System.String.Empty">String.Empty</see> または <see langword="null" /> のときに返す文字列を取得または設定します。</summary>
      <value>入力値が <see cref="F:System.String.Empty">String.Empty</see> または <see cref="T:System.String" /> のときに出力に使用される <see langword="null" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.PositivePrefix">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter" /> の正の接頭辞を取得または設定します。</summary>
      <value>入力値が正のときに出力文字列の前に付加する <see cref="T:System.String" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.PositiveSuffix">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter" /> の正の接尾辞を取得または設定します。</summary>
      <value>入力値が正のときに出力文字列の後ろに付加する <see cref="T:System.String" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.ZeroString">
      <summary>変換されたオブジェクトがゼロのときに返す文字列を取得または設定します。</summary>
      <value>入力値がゼロのときに出力に使用される <see cref="T:System.String" />。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>桁に基づいて値を特別な文字列に変換します。</summary>
      <param name="value">バインディングソースによって生成された値。</param>
      <param name="targetType">バインディングターゲットプロパティの型。</param>
      <param name="parameter">使用するコンバータのパラメーター。</param>
      <param name="culture">コンバータで使用するカルチャ。</param>
      <returns>変換後の値。このメソッドが <see langword="null" /> を返す場合は、有効な null 値が使用されます。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>ターゲットデータをソースオブジェクトに渡す前に変更します。このメソッドは <see cref="F:System.Windows.Data.BindingMode.TwoWay" />バインディングの場合にのみ呼び出されます。</summary>
      <param name="value">ソースに渡されるターゲットデータ。</param>
      <param name="targetType">ソースオブジェクトで想定されているデータの <see cref="T:System.Type" />。</param>
      <param name="parameter">コンバータロジックで使用されるオプションのパラメーター。</param>
      <param name="culture">変換のカルチャ。</param>
      <returns>ソースオブジェクトに渡される値。</returns>
      <remarks><see cref="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> はサポートされていません。</remarks>
      <exception cref="T:System.NotSupportedException"> このメソッドが呼び出された場合。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> がアクティブでないときにその整数部を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField.GroupSeparatorProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField.GroupSeparator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField.MinDigitsProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField.MinDigits" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField.GroupSeparator">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField" /> の桁区切り記号を取得または設定します。これは依存関係プロパティです。</summary>
      <value>数値の小数点から左に向かう桁グループを区切る <see cref="T:System.Char" />。InvariantInfo の既定値は "," です</value>
      <remarks>このプロパティの初期値は、コントロールパネルの［地域と言語のオプション］（または、［地域のオプション］または［地域の設定］）の設定から取得されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField.GroupSizes">
      <summary>数値の小数点から左に向かう各桁グループの桁数を取得または設定します。</summary>
      <value>数値ラッパー <see cref="!:GrapeCity.Windows.InputMan.IntegerItem" /> の小数点から左に向かう各桁グループの桁数。InvariantInfo の既定値は、３に設定された１つの要素のみを含む１次元配列です。</value>
      <remarks>1 次元配列の各要素は 1 ～ 9 の整数にする必要があります。 最後の要素は 0 にすることができます。配列の最初の要素は、NumberDecimalSeparator のすぐ左にある最下位桁グループの桁数を定義します。それ以降の各要素は、前の要素の 1 つ左の桁グループを参照します。配列の最後の要素が 0 でない場合、残りの桁は配列の最後の要素に基づいてグループ化されます。最後の要素が 0 の場合、残りの要素はグループ化されません。</remarks>
      <example> 例えば、配列に{3, 4, 5}が含まれる場合、桁数は「55,55555,55555,55555,4444,333.00」のようにグループ化されます。配列に{3, 4, 0}が含まれる場合、桁数は「55555555555555555,4444,333.00」のようにグループ化されます。 </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField.MinDigits">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartDisplayField" /> の最小桁数を取得または設定します。これは依存関係プロパティです。</summary>
      <value>最小桁数を示す <see cref="T:System.Int32" /> 値。既定値は 1 です。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の整数部を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.GroupSeparatorProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.GroupSeparator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.SpinIncrementProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.SpinIncrement" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.ValueProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.Value" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.GroupSeparator">
      <summary>数値の小数点から左に向かう桁グループを区切る <see cref="T:System.Char" />。InvariantInfo の既定値は "," です。</summary>
      <value>数値の小数点から左に向かう桁グループを区切る <see cref="T:System.Char" />。InvariantInfo の既定値は "," です</value>
      <remarks>このプロパティの初期値は、コントロールパネルの［地域と言語のオプション］（または、［地域のオプション］または［地域の設定］）の設定から取得されます。</remarks>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.GroupSizes">
      <summary>数値の小数点から左に向かう各桁グループの桁数を取得または設定します。</summary>
      <value>数値の小数点から左に向かう各桁グループの桁数。 InvariantInfo の既定値は、3 に設定された要素を 1 つだけ含む 1 次元の配列です。</value>
      <remarks>1 次元配列の各要素は 1 ～ 9 の整数にする必要があります。 最後の要素は 0 にすることができます。配列の最初の要素は、NumberDecimalSeparator のすぐ左にある最下位桁グループの桁数を定義します。それ以降の各要素は、前の要素の 1 つ左の桁グループを参照します。配列の最後の要素が 0 でない場合、残りの桁は配列の最後の要素に基づいてグループ化されます。最後の要素が 0 の場合、残りの要素はグループ化されません。</remarks>
      <example> 例えば、配列に{3, 4, 5}が含まれる場合、桁数は「55,55555,55555,55555,4444,333.00」のようにグループ化されます。配列に{3, 4, 0}が含まれる場合、桁数は「55555555555555555,4444,333.00」のようにグループ化されます。 </example>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.MaxDigits">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField" /> の任意の桁数を取得または設定します。</summary>
      <value>任意の桁数。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.MinDigits" /> 未満です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.MinDigits">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField" /> の必須の桁数を取得または設定します。</summary>
      <value>必須の桁数。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.MaxDigits" /> を超えています。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> 指定された値が0未満です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.SpinIncrement">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField" /> のスピン増分量を取得または設定します。</summary>
      <value>スピンの増分量を示す <see cref="T:System.Int32" /> 値。既定値は 1 です。</value>
      <remarks>ユーザーがローカル値を設定しない場合の既定値は、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.SpinIncrementValue" /> と同じです</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.DoSpinDown">
      <summary>スピンダウン動作を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.DoSpinDown(System.Int32)">
      <summary>指定した increment パラメーターを使用してスピンダウンを実行します。</summary>
      <param name="increment">スピン増分を示す <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.DoSpinUp">
      <summary>スピンアップ動作を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberIntegerPartField.DoSpinUp(System.Int32)">
      <summary>指定した increment パラメーターを使用してスピンアップを実行します。</summary>
      <param name="increment">スピン増分を示す <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField" /> がアクティブでないときにそのリテラルを表示する <see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField.#ctor(System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラルテキストを示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField.TextProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField.Text" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField.Text">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField" /> のリテラルテキストを取得または設定します。これは依存関係プロパティです。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberLiteralDisplayField" /> の内容を示す <see cref="T:System.String" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字を含む文字列です。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> がアクティブでないときにその通貨パターン文字列を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.#ctor(System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">金額パターンを解析するためのパターンを示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.DecimalSeparatorProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.DecimalSeparator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.GroupSeparatorProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.GroupSeparator" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.PatternProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.Pattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.DecimalSeparator">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField" /> の小数点区切り記号を取得または設定します。これは依存関係プロパティです。</summary>
      <value>小数点記号を示す <see cref="T:System.Char" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が数字であるか、無効な文字です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.GroupSeparator">
      <summary>フィールドの桁区切り記号を取得または設定します。これは依存関係プロパティです。</summary>
      <value>桁区切り記号を示す <see cref="T:System.Char" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が数字であるか、無効な文字です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField.Pattern">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberMoneyPatternDisplayField" /> のパターンを取得または設定します。これは依存関係プロパティです。</summary>
      <value>フィールドのパターンを示す<see cref="T:System.String" />値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が無効なパターン文字列です。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> がアクティブでないときにその符号文字列を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> サポートされている:</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常の状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td> <see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td> <see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" />のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" />を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td> <see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField.#ctor(System.String,System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="positivePattern">正のパターンを示す <see cref="T:System.String" /> 値。</param>
      <param name="negativePattern">負のパターンを示す <see cref="T:System.String" /> 値。</param>
      <exception cref="T:System.ArgumentException"> パラメーターに無効な文字（'\r' など）が含まれます。 </exception>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField.NegativePatternProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField.NegativePattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField.PositivePatternProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField.PositivePattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField.NegativePattern">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField" /> の負のパターンを取得または設定します。これは依存関係プロパティです。</summary>
      <value>負のパターンを示す <see cref="T:System.String" /> 値。既定値は "-" です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字（'\r' など）を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField.PositivePattern">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField" /> の正のパターンを取得または設定します。これは依存関係プロパティです。</summary>
      <value>正のパターンを示す <see cref="T:System.String" /> 値。既定値は <see cref="F:System.String.Empty">String.Empty</see> です。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字（'\r' など）を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField.SignState">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField" /> の現在の符号状態を取得します。</summary>
      <value>符号の状態を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignDisplayField.SignState" /> 列挙体。</value>
      <remarks>
        <see cref="!:InputMan.SignState.None" /> は、現在の値が <see langword="null" /> のため符号が表示されていないことを示します。<see cref="!:InputMan.SignState.Positive" /> は、現在の値が０より大きいことを示します。<see cref="!:InputMan.SignState.Negative" /> は、現在の値が０より小さいことを示します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の符号フィールドクラスを表す抽象クラス。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField.NegativePatternProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField.NegativePattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField.PositivePatternProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField.PositivePattern" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField.NegativePattern">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField" /> の負のパターンを取得または設定します。</summary>
      <value>負のパターンを示す <see cref="T:System.String" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField.PositivePattern">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField" /> の正のパターンを取得または設定します。</summary>
      <value>正のパターンを示す <see cref="T:System.String" /> 値。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が無効な文字を含む文字列です。 </exception>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField.SignState">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField" /> の符号状態を取得します。</summary>
      <value>符号を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignField.SignState" /> 列挙値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignPrefixField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の符号接頭文字列を表示する <see cref="!:GrapeCity.Windows.InputMan.Fields.NumberSignPrefixField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignPrefixField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignPrefixField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignSuffixField">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcNumber" /> の符号接尾文字列を表示する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignSuffixField" /> クラスを表します。</summary>
      <remarks>
        <b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b>
        <table width="50%" cellspacing="2" cellpadding="5" frame="lhs">
          <tr>
            <th>VisualStateGroup 名</th>
            <th>VisualState 名</th>
            <th>説明</th>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Normal</td>
            <td>コントロールが通常状態のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>Disabled</td>
            <td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>CommonStates</td>
            <td>MouseOver</td>
            <td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Active</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ActiveStates</td>
            <td>Inactive</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsActive" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Full</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Completed</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Empty</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" /> が <see langword="true" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>InputStates</td>
            <td>Part</td>
            <td><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsFull" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsCompleted" nolink="true" />、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Field.IsEmpty" nolink="true" /> のすべてが <see langword="false" /> のときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>Valid</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidFocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがあるときの外観を表します。</td>
          </tr>
          <tr>
            <td>ValidationStates</td>
            <td>InvalidUnfocused</td>
            <td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつコントロールにフォーカスがないときの外観を表します。</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignSuffixField.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSignSuffixField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ObjectItem">
      <summary>その内容が <see cref="T:System.Object" /> である項目を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ObjectItem.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ObjectItem" />の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ObjectItem.#ctor(System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ObjectItem" />の新しいインスタンスを初期化します。</summary>
      <param name="value">Value に設定する値。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs">
      <summary><see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox.PrepareListItem" />のイベントデータを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs.#ctor(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem,System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="listItem">生成される<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs.ListItem" />。</param>
      <param name="itemData">生成された <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs.ListItem" /> に連結されたデータ。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs.ItemData">
      <summary>生成された <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs.ListItem" /> に連結されたデータを取得します。</summary>
      <value>生成された <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs.ListItem" /> に連結されたデータ。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs.ListItem">
      <summary>生成された <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs.ListItem" /> を取得します。</summary>
      <value>生成された <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PrepareListItemEventArgs.ListItem" />。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition">
      <summary>ボタンデータのプロパティによる条件の判断に使用する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition" /> クラスを表します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" /> では、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition.Property" /> は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo" /> のいずれかのプロパティにします。<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector" /> では、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition.Property" nolink="true" /> は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayInfo" /> のいずれかのプロパティにします。</remarks>
      <example> 次のサンプルは、Xamlで <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> を使用して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector" /> の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalendar.xaml" region="StyleSelector_001" /></example>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition.Property">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition" /> の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition.Value" /> プロパティと比較する値を返すプロパティを取得または設定します。</summary>
      <value>プロパティのパス。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition.Value">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PropertyCondition" /> ターゲットのプロパティ値と比較する値を取得または設定します。</summary>
      <value><see cref="T:System.Object" />値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.RangeValidator">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDateTime.Value">GcDateTime.Value</see> または <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcNumber.Value">GcNumber.Value</see> が有効な範囲内にあるかどうかを表します。このクラスは継承できません。</summary>
      <example> 次のサンプルコードは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ControlValidator" />を使用してコントロール値を検証する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDate.xaml" region="ControlValidator_001" /></example>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.RangeValidator.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.RangeValidator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.RangeValidator.#ctor(System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.RangeValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorContent">エラーの内容。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.RangeValidator.AdjustValueOnFocus">
      <summary>値が範囲外の場合に値制御をフォーカス移動前に行うかどうか取得または設定します。これは依存関係プロパティです。</summary>
      <value>
        値の調整を文字入力中のフォーカス移動前に行う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.RangeValidator.ValueProcessAction">
      <summary>無効な値を処理する方法を取得または設定します。</summary>
      <value>値を処理するアクション。</value>
      <exception cref="T:System.ArgumentException"> 指定された値が <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.RangeValidator.ValueProcessAction" /> で定義されていません。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ResultStringEventArgs">
      <summary><see cref="E:GrapeCity.Windows.InputMan.GcImeManager.ResultString">GcImeManager.ResultString</see> 添付イベントのデータを提供します。</summary>
      <remarks><b>ResultString</b> は、IME 変換ウィンドウでかな漢字変換が行われたときに発生します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ResultStringEventArgs.ReadString">
      <summary>読み取り文字列を取得します。</summary>
      <value>読み取り文字列を示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectedDatesCollection">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalendar" /> コントロールで選択されている日付のセットを含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectedDatesCollection" /> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
      <summary>指定した範囲内のすべての日付（最初の日付と最後の日付を含む）をコレクションに追加します。</summary>
      <param name="start">コレクションに追加する最初の日付。</param>
      <param name="end">コレクションに追加する最後の日付。</param>
      <remarks>この実装は <see cref="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectedDatesCollection.CollectionChanged" /> イベントを発生させます。<paramref name="end" /> が <paramref name="start" /> よりも早い場合は、早い方の日付がコレクションの最初の日付になり、遅い方の日付がコレクションの最後の日付になります。</remarks>
    </member>
    <member name="E:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectedDatesCollection.CollectionChanged">
      <summary>コレクションの項目リストが変更されたとき、またはコレクションがリセットされたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorCondition">
      <summary>スタイルセレクターの条件の基本クラスである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorCondition" /> クラスを表します。このクラスは <see langword="abstract" /> で初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorCondition.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorCondition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorCondition.Setters">
      <summary>指定した条件が満たされたときに適用する setter を表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter" /> オブジェクトのコレクションを取得します。</summary>
      <value>setter。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter" /> クラスを表します。</summary>
      <example> 次のサンプルコードは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector" /> に <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter" /> を使用する方法を説明します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalendar.xaml" region="StyleSelector_001" /></example>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter.Property">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter.Value" /> の適用先のプロパティを取得または設定します。</summary>
      <value>プロパティのパス。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter.Value">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter.Property" /> によって指定されたプロパティに適用する値を取得または設定します。</summary>
      <value>値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetterCollection">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter" /> のコレクションである <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetterCollection" /> を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetterCollection.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetterCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetterCollection.InsertItem(System.Int32,GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetterCollection" /> の指定したインデックスに要素を挿入します。</summary>
      <param name="index">項目を挿入する位置の 0 から始まるインデックス。</param>
      <param name="item">挿入する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> がゼロ未満です。または、<paramref name="index" /> が <see cref="P:GrapeCity.Windows.InputMan.SelectorSetterCollection.Count">SelectorSetterCollection.Count</see> を超えています。 </exception>
      <exception cref="T:System.ArgumentException"> <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorSetter.Property" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> です。 </exception>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SpinButton">
      <summary>スピン操作のための <see cref="!:GrapeCity.Windows.InputMan.Primitives.SpinButton" /> コントロールを表します。</summary>
      <remarks>通常は、<see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SpinUp" /> コマンドまたは <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SpinDown" /> コマンドが <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> に設定されます。これは、<see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SpinUp" nolink="true" /> コマンドと <see cref="!:GrapeCity.Windows.InputMan.FieldsEditingCommands.SpinDown" nolink="true" /> コマンドをネイティブにサポートする <see cref="!:GrapeCity.Windows.InputMan.GcDateTime" />、<see cref="!:GrapeCity.Windows.InputMan.GcNumber" />、および <see cref="!:GrapeCity.Windows.InputMan.GcMask" /> の既定テンプレートに追加されています。<para><b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Pressed</td><td><see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>MouseOver</td><td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Focused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Unfocused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr></table></para></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SpinButton.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SpinButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SpinButton.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Mouse.MouseDown" />添付イベントが、その経路上で、このクラスから派生した要素に到達したときに呼び出されます。このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。このイベントデータは、押されたマウスボタンに関する詳細と Handled 状態を報告します。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SpinButton.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <param name="e" />
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem">
      <summary>その内容が文字列である項目を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem" />の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem.#ctor(System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem" />の新しいインスタンスを初期化します。</summary>
      <param name="value"><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Item`1.Value" /> に設定する <paramref name="value" />。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem.op_Implicit(System.String)~GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem">
      <summary>文字列を <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem" /> に変換します。</summary>
      <param name="value"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem" /> の内容として使用される文字列。</param>
      <returns>変換された文字列を表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem.op_Implicit(GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem)~System.String">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem" /> を文字列に変換します。</summary>
      <param name="value"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem" />。</param>
      <returns>変換された <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StringItem" /> を表す文字列。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StyleSelector`1">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StyleSelector`1" /> クラスを表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
      <typeparam name="T">スタイルセレクターを設定するオブジェクトの型。</typeparam>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StyleSelector`1.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StyleSelector`1" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.StyleSelector`1.SelectStyle(`0)">
      <summary>スタイルを選択します。</summary>
      <param name="item">チェックするターゲット項目。</param>
      <returns>選択された <see cref="T:System.Windows.Style" />。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem">
      <summary>個々の <see cref="!:GrapeCity.Windows.InputMan.GcListBox" /> サブ項目を表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem.#ctor(System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="content"><see cref="P:System.Windows.Controls.ContentControl.Content">SubItem.Content</see> プロパティに設定する内容。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItemCollection">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListItem" /> 内の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> のコレクションを表します。このクラスは継承できません。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItemsPresenter">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> を追加するコントロールのビジュアルツリー内の場所を指定するために、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItem" /> のテンプレートで使用されます。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubItemsPresenter.#ctor">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.SubItemsPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubmittedEventArgs">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow.SubmittedEvent">DropDownWindow.SubmittedEvent</see> 添付イベントのデータを提供します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubmittedEventArgs.#ctor(System.Boolean,System.Object,System.Object)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubmittedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="allowValueSynchronize">値を同期することをコンシューマーに通知する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="value">サブミットされた値。</param>
      <param name="source">イベントが処理されるときに報告される代替ソース。これにはあらかじめ <see cref="P:System.Windows.RoutedEventArgs.Source" /> プロパティが設定されます。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubmittedEventArgs.AllowValueSynchronize">
      <summary>値を同期するかどうかを示す値を取得または設定します。</summary>
      <value>
        同期する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubmittedEventArgs.Value">
      <summary>サブミットされた値を取得または設定します。</summary>
      <value>サブミットされた値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TextChangingEventArgs">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.TextChanging" />のイベントデータを表します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TextChangingEventArgs.#ctor(System.Boolean,System.String)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TextChangingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cancel">変更アクションがキャンセルされるかどうかを示す <see cref="T:System.Boolean" /> 値。</param>
      <param name="result">変更アクションの後の結果を示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TextChangingEventArgs.Cancel">
      <summary>変更アクションがキャンセルされるどうかを示す値を取得または設定します。</summary>
      <value>変更アクションがキャンセルされるかどうかを示す <see cref="T:System.Boolean" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TextChangingEventArgs.Result">
      <summary>テキストが変更された後の結果を示す値を取得します。</summary>
      <value>テキストが変更された後の結果を示す <see cref="T:System.String" />。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday">
      <summary>特定の週日に対して休日振替ポリシーを実行する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday" /> を表します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday" /> は <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.DayOfWeek" /> と <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.WeekInMonth" /> を指定することによって定義され、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.HolidayOverridePolicy" /> に従って休日が週休日と重なったときの休日振替動作を示します。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.DayOfWeek">
      <summary>週休日の曜日を取得または設定します。</summary>
      <value>曜日。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.HolidayName">
      <summary>週休日の名前を取得または設定します。</summary>
      <value>週休日の名前。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.HolidayOverridePolicy">
      <summary>休日振替ポリシーを取得または設定します。</summary>
      <value>休日振替ポリシー。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.IsYearly">
      <summary>この休日の実装が毎年適用されるかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が毎年適用される場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday" />。それ以外の場合は <see langword="false" />。</value>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday" /> は年次休日なので、このプロパティは常に <see langword="true" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.WeekInMonth">
      <summary>週休日の月の週を取得または設定します。</summary>
      <value>月の週。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.Clone">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.IsDefined(System.DateTime)">
      <summary>指定した日付が <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday" /> かどうかを判断します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>
        日付が週休日の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeeklyHoliday.TypeOfDay(System.DateTime)">
      <summary>指定した日付の日のタイプを返します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>日のタイプを表す <see cref="!:GrapeCity.Windows.InputMan.DayType">DayType</see> 列挙体。</returns>
      <remarks>このメソッドは、日付が休日の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.WeeklyHoliday">DayType.WeeklyHoliday</see> を返し、それ以外の場合は <see cref="!:GrapeCity.Windows.InputMan.DayType.Normal">DayType.Normal</see> を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumberInfo" /> を表現するための <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber" /> コントロールを表します。これは通年の週インデックス番号を表します。このクラスは継承できません。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber" /> には、自身が表す週インデックスに関するさらに詳細な情報を提供するために、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber.WeekNumberInfo" /> プロパティが用意されています。これは <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティに設定されるので、<see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> によってデータ表現をカスタマイズすることもできます。 <para><b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Pressed</td><td><see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>MouseOver</td><td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Focused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Unfocused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr></table></para></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber.WeekNumberInfoProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber.WeekNumberInfo" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber.WeekNumberInfo">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumberInfo" /> が表す詳細情報を含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber" /> を表します。</summary>
      <value>この<see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumberInfo" />が表す<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber" />。</value>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumberInfo" /> には以下の情報が含まれます。<list type="table"><listheader><term>WeekNumberInfo プロパティ</term><description>説明</description></listheader><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumberInfo.Number" /></term><description><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumberInfo" nolink="true" /> の週インデックス番号。</description></item><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumberInfo.Text" /></term><description><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumberInfo" nolink="true" /> の表示に使用される、現在のカルチャに準拠した書式付き <see cref="T:System.String" /> 値。</description></item></list></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumber.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo" />を表現するための情報を含む <see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumber" /> を表します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo" /> には以下の情報が含まれます。<list type="table"><listheader><term>WeekNumberInfo プロパティ</term><description>説明</description></listheader><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo.Number" /></term><description><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumberInfo" /> の週インデックス番号。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo.Text" /></term><description><see cref="T:System.String" /> の表示に使用される、現在のカルチャに準拠した書式付き <see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekNumberInfo" nolink="true" /> 値。</description></item></list></remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo.Number">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo" /> の週インデックス番号を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo" /> の週インデックス番号。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo.Number" /> は通年の週インデックスで、現在のカルチャの <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" /> 週規則に従って取得されます。これは、１年の最初の週がその年の第１日に始まり、週の最初の曜日として指定されている曜日が次に訪れる前に終了することを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo.Text">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo" /> の表示に使用される、現在のカルチャに準拠した書式付き <see cref="T:System.String" /> 値を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekNumberInfo" />の表示に使用される、現在のカルチャに準拠した書式付き <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitleInfo" /> を表現するための <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> コントロールを表します。これは曜日を表します。このクラスは継承できません。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> には、自身が表す曜日に関するさらに詳細な情報を提供するために、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle.WeekTitleInfo" /> プロパティが用意されています。これは <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティに設定されるので、<see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> によってデータ表現をカスタマイズすることもできます。 <para><b>サポートされている <see cref="T:System.Windows.VisualState" /> の一覧：</b><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>VisualStateGroup 名</th><th>VisualState 名</th><th>説明</th></tr><tr><td>CommonStates</td><td>Normal</td><td>コントロールが通常状態のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Disabled</td><td><see cref="P:System.Windows.UIElement.IsEnabled" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>Pressed</td><td><see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>CommonStates</td><td>MouseOver</td><td><see cref="P:System.Windows.UIElement.IsMouseOver" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Focused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>FocusStates</td><td>Unfocused</td><td><see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>Valid</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" /> が <see langword="false" /> を返すときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidFocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="true" /> のときの外観を表します。</td></tr><tr><td>ValidationStates</td><td>InvalidUnfocused</td><td><see cref="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" nolink="true" /> が <see langword="true" /> を返し、なおかつ <see cref="P:System.Windows.UIElement.IsKeyboardFocused" nolink="true" /> が <see langword="false" /> のときの外観を表します。</td></tr></table></para></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle.WeekTitleInfoProperty">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle.WeekTitleInfo" /> 依存関係プロパティを識別します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle.WeekTitleInfo">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitleInfo" /> が表す詳細情報を含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> を表します。</summary>
      <value>この<see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitleInfo" />が表す<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" />。</value>
      <remarks><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitleInfo" /> には以下の情報が含まれます。 <list type="table"><listheader><term>WeekTitleInfo プロパティ</term><description>説明</description></listheader><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitleInfo.DayOfWeek" /></term><description><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitleInfo" nolink="true" /> が表す <see cref="T:System.DayOfWeek" /> 列挙値。</description></item><item><term><see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitleInfo.Text" /></term><description>カルチャ固有の <see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitleInfo.DayOfWeek" nolink="true" /> の短縮名を示す <see cref="T:System.String" /> 値。</description></item></list></remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされた場合、アプリケーションコードまたは内部プロセスによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドが呼び出されるたびに呼び出されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo" />を表現するための情報を含む <see cref="!:GrapeCity.Windows.InputMan.Primitives.WeekTitle" /> を表します。</summary>
      <remarks><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo" /> には以下の情報が含まれます。 <list type="table"><listheader><term>WeekTitleInfo プロパティ</term><description>説明</description></listheader><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo.DayOfWeek" /></term><description><see cref="T:System.DayOfWeek" /> が表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo" nolink="true" /> 列挙値。</description></item><item><term><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo.Text" /></term><description>カルチャ固有の <see cref="T:System.String" /> の短縮名を示す <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo.DayOfWeek" nolink="true" /> 値。</description></item></list></remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo.DayOfWeek">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo" /> が表す <see cref="T:System.DayOfWeek" /> 列挙値を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo" /> が表す <see cref="T:System.DayOfWeek" /> 列挙値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo.Text">
      <summary>カルチャ固有の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo.DayOfWeek" /> の短縮名を示す <see cref="T:System.String" /> 値を取得します。</summary>
      <value>カルチャ固有の <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleInfo.DayOfWeek" /> の短縮名を示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector">
      <summary>条件に従って <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" />の単純なスタイルを設定できる <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> クラスを表します。</summary>
      <remarks>
        <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" /> は基本クラスからの単純な実装であり、事前に定義した条件に従って <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> の外観（いくつかのプロパティ）を変更する簡単な手段を提供します。このインタフェースではユーザーの複雑な要件を満たせない場合は、代わりにテンプレートのカスタマイズを使用できます。</remarks>
      <example> 次のサンプルは、Xamlで <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButton" /> を使用して <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" /> と <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDayButtonStyleSelector" /> の外観を変更する方法を示します。 <code lang="xaml" source="XmlCommentsSampleCode_XAML\GcDropDownCalendar.xaml" region="StyleSelector_001" /></example>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector.#ctor">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector.Conditions">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SelectorCondition" /> オブジェクトのコレクションを取得します。すべての条件がチェックされると新しい <see cref="T:System.Windows.Style" /> が選択され、満たされている条件の setter が選択された <see cref="T:System.Windows.Style" nolink="true" /> に適用されます。</summary>
      <value>条件。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector.SelectStyle(GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitle)">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekTitleStyleSelector.Conditions" /> に従ってスタイルを選択します。</summary>
      <param name="item">条件をチェックする項目。</param>
      <returns>適合する条件の setter を含む <see cref="T:System.Windows.Style" />。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> コントロール内の要素の長さを表します。</summary>
      <remarks>
        <b>XAML 値</b>
        <p>Auto</p>
        <p>Auto によるサイズ変更を可能にするリテラル文字列値。セルと列ヘッダの両方の内容に基づいて <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> 列のサイズが変更されます。</p>
        <p>SizeToHeader</p>
        <p>SizeToHeader によるサイズ変更を可能にするリテラル文字列値。列ヘッダのみの内容に基づいて <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" nolink="true" /> 列のサイズが変更されます。</p>
        <p>SizeToSubItems</p>
        <p>SizeToSubItems によるサイズ変更を可能にするリテラル文字列値。列ヘッダを除く列のセルの内容に基づいて <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" nolink="true" /> 列のサイズが変更されます。</p>
        <p>*</p>
        <p>幅が残りのスペースの加重比率であることを示すリテラル文字列値。</p>
      </remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.#ctor(System.Double)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">長さを初期化する絶対ピクセル値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.#ctor(System.Double,GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType)">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> の値。</param>
      <param name="type"><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> の単位タイプ。</param>
      <remarks>
        <paramref name="value" /> は、単位タイプが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType.Pixel" /> または <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType.Star" /> の場合にのみ使用されます。それ以外の場合、value は意味を持ちません。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.Auto">
      <summary>標準の自動サイズ変更モードを表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> 構造体を取得します。</summary>
      <value>標準の自動サイズ変更モードを表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> 構造体。</value>
      <remarks>標準の自動サイズ変更モードでは、サブ項目と列ヘッダの両方の内容に基づいて <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> 列のサイズが変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.DisplayValue">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> の実際の値（ピクセル単位）を取得します。</summary>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.DisplayValue" /> は、関連付けられた列が画面にレンダリングされるときの、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> の実際の値（ピクセル単位）を表します。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.IsAbsolute">
      <summary>この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンスが絶対値を保持するかどうかを示す値を取得します。</summary>
      <value>
        このインスタンスが絶対値を保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.IsAuto">
      <summary>この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンスが標準の自動サイズ変更モードを使用するかどうかを示す値を取得します。</summary>
      <value>
        このインスタンスが標準の自動サイズ設定モードを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.IsSizeToHeader">
      <summary>この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンスがヘッダベースの自動サイズ変更モードを使用するかどうかを示す値を取得します。</summary>
      <value>
        このインスタンスがヘッダベースの自動サイズ設定モードを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.IsSizeToSubItems">
      <summary>この <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンスがサブ項目ベースの自動サイズ変更モードを使用するかどうかを示す値を取得します。</summary>
      <value>
        このインスタンスがサブ項目ベースの自動サイズ設定モードを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.IsStar">
      <summary><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.UnitType" /> プロパティが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType.Star" /> に設定されているかどうかを示す値を取得します。Star 単位タイプは、加重比率によってスペースを配分することを意味します。</summary>
      <value>
        <see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.UnitType" /> プロパティが <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType.Star" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>スターサイズ設定モードは、使用可能なスペースを加重比率に基づいて配分する場合に使用します。 XAML では、スター値は * や 2* のように表現されます。 最初の例では、使用可能なスペースの 1 回分がカラムに割り当てられます。 2 番目の例では、使用可能なスペースの 2 回分がカラムに割り当てられます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.SizeToHeader">
      <summary>ヘッダベースの自動サイズ変更モードを表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> 構造体を取得します。</summary>
      <value>ヘッダベースの自動サイズ変更モードを表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> 構造体。</value>
      <remarks>ヘッダベースの自動サイズ変更モードでは、列ヘッダのみの内容に基づいて <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> 列のサイズが変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.SizeToSubItems">
      <summary>サブ項目ベースの自動サイズ変更モードを表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> 構造体を取得します。</summary>
      <value>サブ項目ベースの自動サイズ変更モードを表す <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> 構造体。</value>
      <remarks>セルベースの自動サイズ変更モードでは、列ヘッダを除く列のセルの内容に基づいて <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> 列のサイズが変更されます。スクロールして表示した内容が現在の列サイズよりも大きい場合は、列が拡張されます。その内容を表示領域の外側にスクロールした後も、列は縮小されません。</remarks>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.UnitType">
      <summary>関連付けられた <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> 要素のサイズの計算方法を示す値を取得します。</summary>
      <value>関連付けられた <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcListBox" /> 要素のサイズの計算方法を示す値。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.Value">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> の絶対値（ピクセル単位）を取得します。</summary>
      <value><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> の絶対値（ピクセル単位）。</value>
      <remarks><see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.Value" /> プロパティが意味を持つのは、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> が絶対ピクセル値を持つ場合のみです。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.Equals(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength)">
      <summary>指定した <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> が、現在の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" nolink="true" /> と等しいかどうかを判断します。</summary>
      <param name="other">現在のインスタンスと比較する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" />。</param>
      <returns>
        指定したオブジェクトが、現在の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> と同じ値またはサイズ変更モードを持つ <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" nolink="true" /> である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.Equals(System.Object)">
      <summary>指定したオブジェクトが、現在の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> と等しいかどうかを判断します。</summary>
      <param name="obj">現在のインスタンスと比較するオブジェクト。</param>
      <returns>
        指定したオブジェクトが、現在の <see langword="true" /> と同じ値またはサイズ変更モードを持つ <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> である場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" nolink="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.GetHashCode">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> のハッシュコードを取得します。</summary>
      <returns>現在の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> のハッシュコード。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.op_Equality(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength,GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength)">
      <summary>２つの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> 構造体を比較して、等しいかどうかを判断します。</summary>
      <param name="listBoxLength1">比較する最初の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンス。</param>
      <param name="listBoxLength2">比較する2番目の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンス。</param>
      <returns>
        ２つの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンスの値またはサイズ変更モードが同じである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength.op_Inequality(GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength,GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength)">
      <summary>２つの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> 構造体を比較して、等しくないかどうかを判断します。</summary>
      <param name="listBoxLength1">比較する最初の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンス。</param>
      <param name="listBoxLength2">比較する2番目の <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンス。</param>
      <returns>
        ２つの <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLength" /> インスタンスの値またはサイズ変更モードが同じでない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IDropDown">
      <summary>ドロップダウンリストをポップアップする手段を提供します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IDropDown.AllowDropDownOpen">
      <summary>ドロップダウン機能がアクティブかどうかを示す<see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウン機能がアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IDropDown.AutoOpenDropDown">
      <summary>このフィールドにフォーカスが移動したときに自動的にドロップダウンするかどうかを示す<see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
      <value><see cref="T:System.Boolean" /> 値。このフィールドにフォーカスが移動したときに自動的にドロップダウンする場合は <see langword="true" />。それ以外の場合は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IDropDown.IsDropDownOpen">
      <summary>ドロップダウンウィンドウが表示されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
      <value><see cref="T:System.Boolean" /> 値。ドロップダウンウィンドウが表示されている場合は<see langword="true" />。それ以外の場合は <see langword="false" /> です。</value>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday">
      <summary>実装元の参照または値型から休日を取得するメソッドを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday.HolidayName">
      <summary>休日の名前を取得または設定します。</summary>
      <value>休業の名前。</value>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday.IsYearly">
      <summary>この休日の実装が毎年適用されるかどうかを示す値を取得します。</summary>
      <value>
        <see langword="true" /> が毎年適用される場合は <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday.IsDefined(System.DateTime)">
      <summary>指定した日付が休日として定義されているかどうかを示す値を取得します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>
        日付が休日として定義されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.IHoliday.TypeOfDay(System.DateTime)">
      <summary>指定した日付の日のタイプを返します。</summary>
      <param name="dateTime">日付を示す <see cref="T:System.DateTime" /> 値。</param>
      <returns>日のタイプを表す <see cref="!:GrapeCity.Windows.InputMan.DayType">DayType</see> 列挙体。</returns>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ISpinable">
      <summary>スピン動作を実行する手段を提供します。</summary>
    </member>
    <member name="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ISpinable.SpinIncrement">
      <summary>スピンの増分量を取得または設定します。</summary>
      <value>スピン増分を示す <see cref="T:System.Int32" /> 値。</value>
      <remarks>値を設定しない場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ISpinable.SpinIncrement" /> の値が既定値になります。</remarks>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ISpinable.DoSpinDown">
      <summary>スピンダウン動作を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ISpinable.DoSpinDown(System.Int32)">
      <summary>指定した increment パラメーターを使用してスピンダウンを実行します。</summary>
      <param name="increment">スピン増分を示す <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ISpinable.DoSpinUp">
      <summary>スピンアップ動作を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ISpinable.DoSpinUp(System.Int32)">
      <summary>指定した increment パラメーターを使用してスピンアップを実行します。</summary>
      <param name="increment">スピン増分を示す <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AllowSelection">
      <summary>選択できる日のタイプを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AllowSelection.AnyDay">
      <summary>任意の日付を選択できます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AllowSelection.Workday">
      <summary>営業日のみ選択できます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AllowSelection.Holiday">
      <summary>休日および週末日のみ選択できます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern">
      <summary><see cref="T:GrapeCity.Windows.InputMan.Fields.DateAmPmField">DateAmPmField</see>.に表示するパターンを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern.AmPmDesignator">
      <summary>完全な AM/PM 文字列を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.AmPmPattern.AbbreviatedAmPmDesignator">
      <summary>短縮された AM/PM 文字列を表示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlinkStyle">
      <summary><see cref="T:System.Windows.Controls.ValidationError" /> が発生したことをユーザーに通知するために、<see cref="T:GrapeCity.Windows.InputMan.GcValidationIndicator" /> によって提供されたエラー内容がいつ点滅するかを示す定数を指定します。</summary>
      <remarks>この列挙体は <see cref="T:GrapeCity.Windows.InputMan.GcValidationIndicator" /> によって使用されます。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlinkStyle.BlinkOnValidate">
      <summary><see cref="T:System.Windows.FrameworkElement" /> のターゲットプロパティの検証が失敗するたびにエラー内容が点滅します。 何度か点滅した後、点滅は停止します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlinkStyle.AlwaysBlink">
      <summary><see cref="T:System.Windows.FrameworkElement" /> のターゲットプロパティの検証が失敗したとき常にエラー内容が点滅します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.BlinkStyle.NeverBlink">
      <summary>エラー内容は点滅しません。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility">
      <summary>サイドボタンの表示設定を指定します。</summary>
      <remarks>この列挙体のメンバーにより、ユーザーはサイドボタンを表示するかどうかを設定できます。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.NotShown">
      <summary>ボタンは表示されません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.ShowAlways">
      <summary>ボタンは常に表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ButtonVisibility.ShowOnFocus">
      <summary>コントロールの <see cref="!:GrapeCity.Windows.InputMan.Primitives.ControlBase.IsActive" /> プロパティが <see langword="true" /> のときにボタンが表示されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation">
      <summary>電卓で実行可能な操作を指定します。</summary>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation" /> 列挙体の値はそれぞれ、数字入力、演算子、メモリ操作、またはその他の可能な操作を表します。</para>
        <para>これらの値は、コマンドソースに割り当てられた特定の操作を指定するために、<see cref="P:System.Windows.Input.ICommandSource.CommandParameter" /> に割り当てられます。</para>
        <para>たとえば、<see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalculator" /> コントロールへの <see cref="T:System.Windows.Input.KeyBinding" /> を登録した場合、<see cref="P:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcDropDownCalculator.ProcessCommand" /> コマンドが <see cref="T:System.Windows.Input.KeyBinding" nolink="true" /> の <see cref="P:System.Windows.Input.InputBinding.Command" /> に割り当てられ、<see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation" nolink="true" /> 列挙値が <see cref="P:System.Windows.Input.InputBinding.CommandParameter" /> に割り当てられて、指定したキーに設定された操作を <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalculator" nolink="true" /> コントロールが処理します。 </para>
      </remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.None">
      <summary>操作なし。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.C">
      <summary>Clear 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.CE">
      <summary>Clear Entry 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Backspace">
      <summary>Backspace 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit0">
      <summary>Digit0 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit1">
      <summary>Digit1 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit2">
      <summary>Digit2 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit3">
      <summary>Digit3 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit4">
      <summary>Digit4 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit5">
      <summary>Digit5 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit6">
      <summary>Digit6 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit7">
      <summary>Digit7 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit8">
      <summary>Digit8 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Digit9">
      <summary>Digit9 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.DecimalPoint">
      <summary>DecimalPoint 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Sign">
      <summary>Sign 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Add">
      <summary>Add 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Subtract">
      <summary>Subtract 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Multiply">
      <summary>Multiply 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Divide">
      <summary>Divide 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Percentage">
      <summary>Percentage 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Reciprocal">
      <summary>Reciprocal 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.SquareRoot">
      <summary>SquareRoot 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.Equal">
      <summary>Equal 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.MemoryClear">
      <summary>MemoryClear 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.MemoryRecall">
      <summary>MemoryRecall 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.MemorySave">
      <summary>MemorySave 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.MemoryPlus">
      <summary>MemoryPlus 操作。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalculatorOperation.MemoryMinus">
      <summary>MemoryMinus 操作。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode">
      <summary><see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> に 10 年、１年、１月のいずれを表示するかを指定します。</summary>
      <remarks><see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> には、一度に１月、１年、または 10 年を表示できます。次の表に、各モード間の移動方法を示します。 <list type="table"><listheader><term>DisplayMode</term><description /></listheader><item><term>Month</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Year">Year</see> に移動するには、月の見出しをクリックします。</description></item><item><term>Year</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Decade">Decade</see> に移動するには、年の見出しをクリックします。<see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Month">Month</see> に移動するには、表示されているいずれかの月をクリックします。</description></item><item><term>Decade</term><description><see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Year" nolink="true">Year</see> に移動するには、表示されているいずれかの年をクリックします。</description></item></list></remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Month">
      <summary><see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> に、一度に１月が表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Year">
      <summary><see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> に、一度に１年が表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarMode.Decade">
      <summary><see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> に、一度に10年が表示されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarSelectionMode">
      <summary><see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar" /> で単一の日付と複数の日付のどちらを選択できるかを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarSelectionMode.SingleDate">
      <summary>単一の日付を選択できます。選択された日付を取得するには、<see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.SelectedDate" /> プロパティを使用します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarSelectionMode.SingleRange">
      <summary>単一の日付範囲を選択できます。選択された日付を取得するには、<see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.SelectedDates" /> プロパティを使用します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarSelectionMode.MultipleRange">
      <summary>連続していない複数の日付範囲を選択できます。選択された日付を取得するには、<see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.SelectedDates" /> プロパティを使用します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarSelectionMode.None">
      <summary>選択が許可されていません。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarYear">
      <summary>カレンダーの年の表示モードを指定します。</summary>
      <remarks><see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> には既定で通常の年が表示されます。また、<see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.FirstFiscalMonth">GcDropDownCalendar.FirstFiscalMonth</see> プロパティ設定に応じた会計年度を表示することもできます。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarYear.Normal">
      <summary>通常の年で表示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarYear.Fiscal">
      <summary>会計年度で表示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CharMaskInputDirection">
      <summary><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.GcCharMask" /> の入力方向を表します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CharMaskInputDirection.LeftToRight">
      <summary>入力方向が左から右であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CharMaskInputDirection.RightToLeft">
      <summary>入力方向が右から左であることを示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClipContent">
      <summary>クリップボードに格納された内容のリテラルをどのように保持するかを指定します。</summary>
      <remarks>挿入または置換するテキストにリテラルを含めるか、除去します。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClipContent.IncludeLiterals">
      <summary>テキストをクリップボードにコピーまたは切り取るときにリテラルを含めます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClipContent.ExcludeLiterals">
      <summary>テキストをクリップボードにコピーまたは切り取るときにリテラルを除去します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CrLfMode">
      <summary>CrLf 文字の処理方法を表す CrLf モードを定義します。</summary>
      <remarks><see cref="P:GrapeCity.Windows.InputMan.GcTextBox.Multiline" /> が <see langword="false" /> の場合、<see cref="P:GrapeCity.Windows.InputMan.GcTextBox.AcceptsCrLf" /> を <see cref="!:GrapeCity.Windows.InputMan.CrLfMode.Cut" /> に設定すると、最初の CrLf 文字より前の部分文字列のみが貼り付け時に残されます。<see cref="P:GrapeCity.Windows.InputMan.GcTextBox.AcceptsCrLf" nolink="true" /> を <see cref="!:GrapeCity.Windows.InputMan.CrLfMode.Filter" /> に設定すると、文字列内のすべての CrLf 文字が除去されます。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CrLfMode.Filter">
      <summary>コピー、切り取り、または貼り付け文字列内にあるすべての CrLf 文字を除去します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CrLfMode.Cut">
      <summary>コピー、切り取り、および貼り付け文字列内にある最初の CrLf 文字以降の文字列を切り捨てます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSpinMode">
      <summary>スピン操作時の <see cref="T:GrapeCity.Windows.InputMan.GcDateTime" /> の増減方法を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSpinMode.Field">
      <summary>アクティブフィールドを <see cref="P:GrapeCity.Windows.InputMan.GcDateTime.SpinIncrement">GcDateTime.SpinIncrement</see> 単位で増減します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DateSpinMode.Value">
      <summary><see cref="T:GrapeCity.Windows.InputMan.GcDateTime" /> を指定された <see cref="T:System.TimeSpan" /> 値単位で増減します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek">
      <summary>曜日を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek.NotSet">
      <summary>曜日を定義しません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek.Sunday">
      <summary>日曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek.Monday">
      <summary>月曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek.Tuesday">
      <summary>火曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek.Wednesday">
      <summary>水曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek.Thursday">
      <summary>木曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek.Friday">
      <summary>金曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeek.Saturday">
      <summary>土曜日を示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks">
      <summary>曜日フラグを表します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.None">
      <summary>曜日を設定しません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.Sunday">
      <summary>日曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.Monday">
      <summary>月曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.Tuesday">
      <summary>火曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.Wednesday">
      <summary>水曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.Thursday">
      <summary>木曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.Friday">
      <summary>金曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.Saturday">
      <summary>土曜日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayOfWeeks.All">
      <summary>すべての曜日を示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayType">
      <summary>日のタイプ（営業日や休日など）を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayType.Normal">
      <summary>休日でない通常日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayType.Holiday">
      <summary>毎年繰り返される休日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayType.ForcedWorkday">
      <summary>元は休日であった通常日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayType.ForcedHoliday">
      <summary>その特定の日にのみ適用される休日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayType.OverriddenHoliday">
      <summary>振替休日（休日が週末に重なったために自動的に次の日に振り替えられた休日）を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DayType.WeeklyHoliday">
      <summary>週日が休日であることを示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DecimalGeneralFormat">
      <summary>漢数字表記の形式を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DecimalGeneralFormat.DBNum1_G">
      <summary>数値を漢数字で表示します。（例：一億二千三百四十五万六千七百八十九）</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DecimalGeneralFormat.DBNum2_G">
      <summary>数字を漢数字（大字）で表示します。（例：壱億弐阡参百四拾伍萬六阡七百八拾九）</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DecimalGeneralFormat.DBNum3_G">
      <summary>数字を漢数字と全角の数字を組み合わせて表示します。（例：１億２千３百４十５万６千７百８十９）</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.DecimalGeneralFormat.DBNum4_G">
      <summary>小数点以下の数字を漢数字を使って表示します。（例：〇.九分八厘七毛六糸五忽四微三纖二沙一塵）</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditMode">
      <summary>エディタへのテキストの入力方法を示すモードを表します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditMode.Insert">
      <summary><b>挿入</b>モードを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditMode.Overwrite">
      <summary><b>上書き</b>モードを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditMode.FixedInsert">
      <summary>固定<b>挿入</b>モードを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EditMode.FixedOverwrite">
      <summary>固定<b>上書き</b>モードを示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EllipsisMode">
      <summary>コントロール内のどの位置に省略記号を表示するかを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EllipsisMode.None">
      <summary>省略記号のトリミングは行われません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EllipsisMode.EllipsisEnd">
      <summary>文字列の末尾を文字単位でトリミングします。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EllipsisMode.EllipsisPath">
      <summary>文字列の中央部分を文字単位でトリミングします。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EmptyRow">
      <summary><see cref="T:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> に空白週の行がどのように表示されるかを指定します。</summary>
      <remarks>
        <para><see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EmptyRow" /> の設定は <see cref="!:GrapeCity.Windows.InputMan.CalendarMode.Month">Month</see> 表示モードの日のレイアウトにのみ影響し、表示されている月が、日数が 28 日の <b>２月</b> である必要があります。この場合、隣接日が空白週の行になります。</para>
        <para>たとえば、日数が 28 日である 1998 年２月がコントロールに表示される場合を例にとります。<see cref="T:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton">CalendarDayButtons</see> は全部で 42 個あるので、空白行には 14 個の <see cref="T:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" nolink="true">CalendarDayButtons</see> があることになります。<see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.EmptyRow">GcDropDownCalendar.EmptyRow</see> を <see cref="!:GrapeCity.Windows.InputMan.EmptyRow.StartEmpty" /> に設定すると、１行の空白行（７個の隣接 <see cref="T:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" nolink="true">CalendarDayButtons</see> を含む）が先頭に表示され、もう１行の空白行（残り７個の隣接 <see cref="T:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" nolink="true">CalendarDayButtons</see> を含む）が末尾に表示されます。<see cref="P:GrapeCity.Windows.InputMan.GcDropDownCalendar.EmptyRow" nolink="true">GcDropDownCalendar.EmptyRow</see> を <see cref="!:GrapeCity.Windows.InputMan.EmptyRow.AllAtEnd" /> に設定すると、14 個の隣接日すべてが末尾に表示されます。つまり、最初の 28 個の <see cref="T:GrapeCity.Windows.InputMan.Primitives.CalendarDayButton" nolink="true">CalendarDayButtons</see> が２月１日から２月 28 日までを表し、２行の空白行には３月１日から３月 14 日までが含まれます。 </para>
      </remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EmptyRow.StartEmpty">
      <summary>空白行を最初に配置します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EmptyRow.AllAtEnd">
      <summary>空白行を最後に配置します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern">
      <summary><see cref="T:GrapeCity.Windows.InputMan.Fields.DateEraField" />.に表示するパターンを定義します。</summary>
      <remarks><see cref="T:GrapeCity.Windows.InputMan.GcDateTime" /> 値が "1869/01/01" の場合、<see cref="P:GrapeCity.Windows.InputMan.Fields.DateEraField.Pattern" /> を <see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern.EraName" /> に設定すると、<see cref="P:GrapeCity.Windows.InputMan.Fields.DateEraField.Text" /> は "明治" になります。<see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern.AbbreviatedEraName" /> に設定すると、<see cref="P:GrapeCity.Windows.InputMan.Fields.DateEraField.Text" nolink="true" /> は "明" になります。<see cref="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern.Symbol" /> に設定すると、<see cref="P:GrapeCity.Windows.InputMan.Fields.DateEraField.Text" nolink="true">DateEraField.Text</see> は "M" になります。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern.EraName">
      <summary>完全な年号名を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern.AbbreviatedEraName">
      <summary>年号の短縮名を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.EraPattern.Symbol">
      <summary>記号を表示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey">
      <summary>キーボードフォーカスがコントロールから離れる原因となったキーを指定します。</summary>
      <remarks>キーボードフォーカスを失う原因となったキージェスチャーを示す列挙値。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey.Tab">
      <summary>［Tab］キーを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey.ShiftTab">
      <summary>［Shift］+［Tab］キーを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey.NextControl">
      <summary>NextControl KeyAction に設定されたショートカットキーを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey.PreviousControl">
      <summary>PreviousControl KeyAction に設定されたショートカットキーを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey.Right">
      <summary>［→］キーを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey.Left">
      <summary>［←］キーを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey.CtrlRight">
      <summary>［Ctrl］+［→］キーを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey.CtrlLeft">
      <summary>［Ctrl］+［←］キーを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitKey.CharInput">
      <summary>フィールドの最後の文字が入力されたことを示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitOnLeftRightKey">
      <summary>入力位置が先頭/末尾にあるときにユーザーが［←］キーまたは［→］キーを押したときの動作を指定します。</summary>
      <remarks>キャレットが左端または右端にあるときに［←］キーまたは［→］キーを押すと、フォーカスが失われます。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitOnLeftRightKey.None">
      <summary>何もしません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitOnLeftRightKey.Left">
      <summary>コントロールの最初の文字の位置で［←］キーまたは［Ctrl］+［←］キーを押すと、前のコントロールに移動します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitOnLeftRightKey.Right">
      <summary>コントロールの最後の文字の位置で［→］キーまたは［Ctrl］+［→］キーを押すと、次のコントロールに移動します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ExitOnLeftRightKey.Both">
      <summary>コントロールの最初/最後の文字の位置で［←］/［→］キーまたは［Ctrl］+［←］/［Ctrl］+［→］キーを押すと、前/次のコントロールに移動します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditMode">
      <summary><see cref="T:GrapeCity.Windows.InputMan.GcDateTime" /> の入力モードを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditMode.LeftSide">
      <summary>各フィールドの左側から入力します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditMode.RightSide">
      <summary>各フィールドの右側から入力します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.FieldsEditMode.Unfixed">
      <summary>フィールドに空のプロンプト文字を表示しません。ただし、フィールドの幅は固定されます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HighlightText">
      <summary>コントロールがキーボードフォーカスを受け取ったときにテキストのどの部分を選択するかを指定します。</summary>
      <remarks>フォーカスを受け取った後のエディタの状態は、何も選択されない、指定されたフィールドが選択される、すべてのテキストが選択される、のいずれかになります。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HighlightText.None">
      <summary>何も選択しません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HighlightText.Field">
      <summary>指定されたフィールドを選択します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HighlightText.All">
      <summary>すべてのテキストを選択します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayOverridePolicy">
      <summary>休日がすでに休日として指定されている日に重なった場合に休日をどのように処理するかを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayOverridePolicy.None">
      <summary>休日の振り替えを行いません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayOverridePolicy.NextDay">
      <summary>休日を次の日に振り替えます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.HolidayOverridePolicy.NextWorkday">
      <summary>休日を次の営業日に振り替えます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Hour12Mode">
      <summary>12 時間モードのタイプを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Hour12Mode.Hour12As0">
      <summary>12 時間モードの範囲は 0:00:00 ～ 11:59:59 です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Hour12Mode.Hour0As12">
      <summary>12 時間モードの範囲は 1:00:00 ～ 12:59:59 です。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KanaMode">
      <summary>日本語の文字変換モードを定義します。</summary>
      <remarks>この列挙体は <see cref="T:GrapeCity.Windows.InputMan.GcImeManager" /> によって使用されます。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KanaMode.KatakanaHalf">
      <summary>日本語の文字を半角カタカナに変換します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KanaMode.Katakana">
      <summary>日本語の文字を全角カタカナに変換します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KanaMode.Hiragana">
      <summary>日本語の文字をひらがなに変換します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LengthUnit">
      <summary>文字列の基本計算単位を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LengthUnit.Char">
      <summary>文字列の長さを計算するときの計算単位が .NET 文字であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LengthUnit.Byte">
      <summary>文字列の長さを計算するときの計算単位がバイト文字であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LengthUnit.TextElement">
      <summary>文字列の長さを計算するときの計算単位がテキスト要素であることを示します。</summary>
      <remarks>.NET Framework では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。Unicode 規格では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。Unicode 規格では、基本文字と1つ以上の組み合わせ文字として、組み合わせ文字シーケンスを定義します。サロゲートペアは、基本文字または組み合わせ文字を表すことができます。サロゲートペアと組み合わせ文字シーケンスの詳細については、The Unicode Standard　「http://www.unicode.org」を参照してください。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle">
      <summary>線のスタイルを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.None">
      <summary>線がないことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.Dotted">
      <summary>点で構成された線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.Dashed">
      <summary>ダッシュで構成された線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.DashDotDot">
      <summary>ダッシュ、点、点の繰り返しパターンで構成された線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.DashDot">
      <summary>ダッシュ、点の繰り返しパターンで構成された線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.Hair">
      <summary>Dashed よりも間隔が 50 パーセント狭い Dashed スタイルの線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.Single">
      <summary>単一の線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.Double">
      <summary>二重線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.Thick">
      <summary>太い単一の線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.Inset">
      <summary>くぼんだ線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.LineStyle.Raised">
      <summary>浮き上がった線を指定します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType">
      <summary>列などの <see cref="T:GrapeCity.Windows.InputMan.GcListBox" /> 要素のサイズ設定方法を表す定数を定義します。</summary>
      <remarks>この列挙体は、<see cref="T:GrapeCity.Windows.InputMan.GcListBox" /> の要素が他の要素に対してどのようにサイズ設定されるかを示すために、ListBoxLength 型の UnitType プロパティで使用されます。ListBoxLength 型は、<see cref="T:GrapeCity.Windows.InputMan.GcListBox.ColumnWidth" /> などのサイズ設定プロパティで使用されます。Silverlight 4 以降では、Star サイズ設定モードを使用して、使用可能なスペースを加重比率に従って分配できます。XAML（Extensible Application Markup Language）では、Star 値は n* として表現されます（n は数値を表します）。1* は * と同等です。たとえば、<see cref="T:GrapeCity.Windows.InputMan.GcListBox" nolink="true" /> に２つの列があり、それぞれの幅が * と 2* である場合、最初の列は使用可能なスペースの 1/3 を占め、２番目の列は使用可能なスペースの 2/3 を占めます。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType.Auto">
      <summary>測定単位はサブ項目とカラムヘッダのサイズに基づきます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType.Pixel">
      <summary>測定単位はピクセルで表されます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType.SizeToSubItems">
      <summary>測定単位はサブ項目のサイズに基づきます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType.SizeToHeader">
      <summary>測定単位はカラムヘッダのサイズに基づきます。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ListBoxLengthUnitType.Star">
      <summary>測定単位は使用可能なスペースの加重比率です。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month">
      <summary>1 年の月を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.Default">
      <summary>月を定義しません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.January">
      <summary>1 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.February">
      <summary>2 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.March">
      <summary>3 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.April">
      <summary>4 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.May">
      <summary>5 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.June">
      <summary>6 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.July">
      <summary>7 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.August">
      <summary>8 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.September">
      <summary>9 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.October">
      <summary>10 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.November">
      <summary>11 月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Month.December">
      <summary>12 月を示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern">
      <summary><see cref="T:GrapeCity.Windows.InputMan.Fields.DateMonthField">DateMonthField</see>.に表示するパターンを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern.MonthName">
      <summary>完全な月名を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern.AbbreviatedMonthName">
      <summary>月の短縮名を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.MonthPattern.Number">
      <summary>数字を表示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months">
      <summary>月フラグを表します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.None">
      <summary>月の値を設定しません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.January">
      <summary>1 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.February">
      <summary>2 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.March">
      <summary>3 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.April">
      <summary>4 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.May">
      <summary>5 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.June">
      <summary>6 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.July">
      <summary>7 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.August">
      <summary>8 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.September">
      <summary>9 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.October">
      <summary>10 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.November">
      <summary>11 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.December">
      <summary>12 月</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Months.All">
      <summary>すべての月</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSpinMode">
      <summary>スピン操作時の <see cref="T:GrapeCity.Windows.InputMan.GcNumber" /> の増減方法を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSpinMode.Field">
      <summary>アクティブフィールドを増減します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSpinMode.Value">
      <summary><see cref="P:GrapeCity.Windows.InputMan.GcNumber.Value">GcNumber.Value</see> プロパティを指定された 10 進数値単位で増減します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.NumberSpinMode.Digits">
      <summary>フィールドのキャレットのある桁の値を増減します。桁の繰り上がり/繰り下がりは行われません。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PickDayType">
      <summary><see cref="M:GrapeCity.Windows.InputMan.GcDropDownCalendar.GetDatesInView(PickDayType)">GcDropDownCalendar.GetDatesInView</see> メソッドで使用する <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PickDayType" /> のタイプを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PickDayType.NormalDay">
      <summary>現在の月の日付のみ。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.PickDayType.TrailingDay">
      <summary>表示されている隣接日を含みます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ReadingStringOutputMode">
      <summary>読み取り文字列の出力モードを示します。</summary>
      <remarks>この列挙体は <see cref="T:GrapeCity.Windows.InputMan.GcImeManager" /> によって使用されます。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ReadingStringOutputMode.None">
      <summary>読み取り文字列を <see cref="P:GrapeCity.Windows.InputMan.GcImeManager.ReadingString" /> 添付プロパティに適用しません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ReadingStringOutputMode.Append">
      <summary>読み取り文字列を <see cref="P:GrapeCity.Windows.InputMan.GcImeManager.ReadingString" /> 添付プロパティの内容の末尾に追加します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ReadingStringOutputMode.Replace">
      <summary><see cref="P:GrapeCity.Windows.InputMan.GcImeManager.ReadingString" /> 添付プロパティの内容を読み取り文字列で置き換えます。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ShowLiterals">
      <summary>ユーザー入力時にリテラルをどのように表示するかを指定します。</summary>
      <remarks>リテラルがいつ表示されるかを指定します。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ShowLiterals.Always">
      <summary>リテラルを常に表示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ShowLiterals.PostDisplay">
      <summary>ユーザーが入力した後にリテラルを表示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ShowLiterals.PreDisplay">
      <summary>ユーザーが入力する前にリテラルを表示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SignState">
      <summary>符号のタイプを表します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SignState.None">
      <summary>符号がないことを表します（たとえば、value == null）。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SignState.Positive">
      <summary>値が正であることを表します（たとえば、value = +0）。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SignState.Negative">
      <summary>値が負であることを表します（たとえば、value = -0）。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TabAction">
      <summary>［Tab］キーの動作を指定します。</summary>
      <remarks>［Tab］キーは、コントロール間またはフィールド間でフォーカスを移動します。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TabAction.Control">
      <summary>コントロール間でフォーカスを移動します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TabAction.Field">
      <summary>コントロールのフィールド間でカーソル位置を移動します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValidationTrigger">
      <summary>ターゲットプロパティをいつ検証するかを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValidationTrigger.PropertyChanged">
      <summary>値が変更されたときに検証します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValidationTrigger.LostFocus">
      <summary>コントロールがフォーカスを失ったときに検証します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueProcessAction">
      <summary><see cref="P:GrapeCity.Windows.InputMan.GcDateTime.Value">GcDateTime.Value</see> プロパティまたは <see cref="P:GrapeCity.Windows.InputMan.GcNumber.Value">GcNubmer.Value</see> プロパティが無効なときの処理方法を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueProcessAction.Keep">
      <summary>何もしません。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueProcessAction.Clear">
      <summary>値を <see langword="null" /> にクリアします。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueProcessAction.Restore">
      <summary>バックアップ値を指定したプロパティに復元します。</summary>
      <remarks><b>バックアップ値</b> は、特定の <see cref="T:System.Windows.FrameworkElement" /> がキーボードフォーカスを取得したときに決定されます。</remarks>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueProcessAction.AdjustToMinMax">
      <summary>最小値から最大値までの有効な値に調整します。</summary>
      <remarks>値が最小値より小さい場合は、最小値に調整します。値が最大値より大きい場合、最大値に調整します。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl">
      <summary>値の符号を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl.NoControl">
      <summary>値の符号を制御しないことを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl.Positive">
      <summary>値を正に維持することを示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ValueSignControl.Negative">
      <summary>値を負に維持することを示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekdayPattern">
      <summary><see cref="T:GrapeCity.Windows.InputMan.Fields.DateWeekdayDisplayField">DateWeekdayDisplayField</see>.に表示するパターンを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekdayPattern.WeekdayName">
      <summary>完全な曜日名を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.WeekdayPattern.AbbreviatedWeekdayName">
      <summary>曜日の短縮名を表示します。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks">
      <summary>週を表すフラグを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.None">
      <summary>週なし。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.FirstWeek">
      <summary>月の最初の週。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.SecondWeek">
      <summary>月の 2 番目の週。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.ThirdWeek">
      <summary>月の 3 番目の週。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.FourthWeek">
      <summary>月の 4 番目の週。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.FifthWeek">
      <summary>月の 5 番目の週。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.LastWeek">
      <summary>月の最後の週。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.Weeks.All">
      <summary>月のすべての週。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.YearDigitType">
      <summary>年の桁の種類を表します。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.YearDigitType.FourDigitYear">
      <summary><b>FourDigitYear</b> モードの範囲は 0000 ～ 9999 です。</summary>
    </member>
    <member name="F:GrapeCity.Wpf.SpreadSheet.CellType.Editors.YearDigitType.TwoDigitYear">
      <summary><b>TwoDigitYear</b> モードの範囲は 00 ～ 99 です。</summary>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarDateChangedEventHandler">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> の <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.FocusedDateChanged">GcDropDownCalendar.FocusedDateChanged</see> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントハンドラが接続されたオブジェクト。</param>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.CalendarModeChangedEventHandler">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> の <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.DisplayModeChanged">GcDropDownCalendar.DisplayModeChanged</see> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントハンドラが接続されたオブジェクト。</param>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ClickDateEventHandler">
      <summary><see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar">GcDropDownCalendar</see> の <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.ClickDate">GcDropDownCalendar.ClickDate</see> および <see cref="!:GrapeCity.Windows.InputMan.GcDropDownCalendar.DoubleClickDate">GcDropDownCalendar.DoubleClickDate</see> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントハンドラが接続されたオブジェクト。</param>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KeyExitEventHandler">
      <summary>コントロールの <see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.KeyExit" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.KeyExitEventArgs" />。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.ResultStringEventHandler">
      <summary><see cref="E:GrapeCity.Windows.InputMan.GcImeManager.ResultString">GcImeManager.ResultString</see> 添付イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントハンドラが接続されたオブジェクト。</param>
      <param name="e">イベントデータ。</param>
      <remarks>このデリゲートは、<see cref="E:GrapeCity.Windows.InputMan.GcImeManager.ResultString">GcImeManager.ResultString</see> 添付イベントのハンドラで使用する必要があります。</remarks>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.SubmittedEventHandler">
      <summary><see cref="!:GrapeCity.Windows.InputMan.Primitives.DropDownWindow.SubmittedEvent" /> 添付イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントハンドラが接続されたオブジェクト。</param>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="T:GrapeCity.Wpf.SpreadSheet.CellType.Editors.TextChangingEventHandler">
      <summary>エディタクラスの <see cref="!:GrapeCity.Windows.InputMan.Primitives.EditBase.TextChanging" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントハンドラが接続されたオブジェクト。</param>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
      <summary>GeneratedInternalTypeHelperクラス。このクラスは継承できません。</summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.#ctor">
      <summary><see cref="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
  </members>
</doc>